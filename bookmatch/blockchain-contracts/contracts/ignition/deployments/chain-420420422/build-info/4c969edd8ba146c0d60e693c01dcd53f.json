{
  "id": "4c969edd8ba146c0d60e693c01dcd53f",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/BookTraceabilitySimple.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/**\n * @title BookTraceabilitySimple\n * @dev Simplified version for Passet Hub deployment limits\n */\ncontract BookTraceabilitySimple {\n    struct Book {\n        string bookId;\n        string title;\n        address currentOwner;\n        uint256 registrationTime;\n    }\n\n    struct Transfer {\n        address from;\n        address to;\n        uint256 timestamp;\n    }\n\n    mapping(string => Book) public books;\n    mapping(string => Transfer[]) public transferHistory;\n    mapping(address => string[]) private booksByOwner;\n    uint256 public totalBooks;\n\n    event BookRegistered(\n        string indexed bookId,\n        string title,\n        address indexed owner,\n        uint256 timestamp\n    );\n\n    event BookTransferred(\n        string indexed bookId,\n        address indexed from,\n        address indexed to,\n        uint256 timestamp\n    );\n\n    function registerBook(\n        string memory _bookId,\n        string memory _title\n    ) external {\n        require(bytes(books[_bookId].bookId).length == 0, \"Book exists\");\n\n        books[_bookId] = Book({\n            bookId: _bookId,\n            title: _title,\n            currentOwner: msg.sender,\n            registrationTime: block.timestamp\n        });\n\n        booksByOwner[msg.sender].push(_bookId);\n        totalBooks++;\n\n        emit BookRegistered(_bookId, _title, msg.sender, block.timestamp);\n    }\n\n    function transferOwnership(\n        string memory _bookId,\n        address _newOwner\n    ) external {\n        Book storage book = books[_bookId];\n        require(bytes(book.bookId).length > 0, \"Book not found\");\n        require(book.currentOwner == msg.sender, \"Not owner\");\n        require(_newOwner != msg.sender, \"Cannot transfer to self\");\n\n        transferHistory[_bookId].push(Transfer({\n            from: msg.sender,\n            to: _newOwner,\n            timestamp: block.timestamp\n        }));\n\n        // Update ownership\n        book.currentOwner = _newOwner;\n\n        // Update mappings (simplified - doesn't remove from old owner)\n        booksByOwner[_newOwner].push(_bookId);\n\n        emit BookTransferred(_bookId, msg.sender, _newOwner, block.timestamp);\n    }\n\n    function getBook(string memory _bookId) external view returns (Book memory) {\n        return books[_bookId];\n    }\n\n    function getTransferHistory(string memory _bookId) external view returns (Transfer[] memory) {\n        return transferHistory[_bookId];\n    }\n\n    function verifyOwnership(string memory _bookId, address _address) external view returns (bool) {\n        return books[_bookId].currentOwner == _address;\n    }\n\n    function getBooksByOwner(address _owner) external view returns (string[] memory) {\n        return booksByOwner[_owner];\n    }\n}\n"
      }
    },
    "settings": {
      "evmVersion": "paris",
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi"
          ]
        }
      },
      "resolc": {
        "compilerSource": "npm",
        "settings": {}
      }
    }
  },
  "output": {
    "errors": [],
    "version": "0.8.28",
    "long_version": "0.8.28+commit.7893614a.Emscripten.clang",
    "revive_version": "0.2.0+commit.e94432e.llvm-18.1.8",
    "sources": {
      "contracts/BookTraceabilitySimple.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "contracts/BookTraceabilitySimple.sol",
          "exportedSymbols": {
            "BookTraceabilitySimple": [
              248
            ]
          },
          "id": 249,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "BookTraceabilitySimple",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "58:100:0",
                "text": " @title BookTraceabilitySimple\n @dev Simplified version for Passet Hub deployment limits"
              },
              "fullyImplemented": true,
              "id": 248,
              "linearizedBaseContracts": [
                248
              ],
              "name": "BookTraceabilitySimple",
              "nameLocation": "168:22:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "BookTraceabilitySimple.Book",
                  "id": 11,
                  "members": [
                    {
                      "constant": false,
                      "id": 4,
                      "mutability": "mutable",
                      "name": "bookId",
                      "nameLocation": "226:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 11,
                      "src": "219:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "219:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6,
                      "mutability": "mutable",
                      "name": "title",
                      "nameLocation": "249:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 11,
                      "src": "242:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 5,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "242:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 8,
                      "mutability": "mutable",
                      "name": "currentOwner",
                      "nameLocation": "272:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 11,
                      "src": "264:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "264:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10,
                      "mutability": "mutable",
                      "name": "registrationTime",
                      "nameLocation": "302:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 11,
                      "src": "294:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "294:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Book",
                  "nameLocation": "204:4:0",
                  "nodeType": "StructDefinition",
                  "scope": 248,
                  "src": "197:128:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "BookTraceabilitySimple.Transfer",
                  "id": 18,
                  "members": [
                    {
                      "constant": false,
                      "id": 13,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "365:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "357:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "357:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 15,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "387:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "379:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 14,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "379:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 17,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "407:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "399:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "399:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Transfer",
                  "nameLocation": "338:8:0",
                  "nodeType": "StructDefinition",
                  "scope": 248,
                  "src": "331:92:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "2b9dfe80",
                  "id": 23,
                  "mutability": "mutable",
                  "name": "books",
                  "nameLocation": "460:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "429:36:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Book_$11_storage_$",
                    "typeString": "mapping(string => struct BookTraceabilitySimple.Book)"
                  },
                  "typeName": {
                    "id": 22,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 19,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "437:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "429:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Book_$11_storage_$",
                      "typeString": "mapping(string => struct BookTraceabilitySimple.Book)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 21,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 20,
                        "name": "Book",
                        "nameLocations": [
                          "447:4:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11,
                        "src": "447:4:0"
                      },
                      "referencedDeclaration": 11,
                      "src": "447:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Book_$11_storage_ptr",
                        "typeString": "struct BookTraceabilitySimple.Book"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "9c63b7b9",
                  "id": 29,
                  "mutability": "mutable",
                  "name": "transferHistory",
                  "nameLocation": "508:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "471:52:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Transfer_$18_storage_$dyn_storage_$",
                    "typeString": "mapping(string => struct BookTraceabilitySimple.Transfer[])"
                  },
                  "typeName": {
                    "id": 28,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 24,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "479:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "471:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Transfer_$18_storage_$dyn_storage_$",
                      "typeString": "mapping(string => struct BookTraceabilitySimple.Transfer[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 26,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25,
                          "name": "Transfer",
                          "nameLocations": [
                            "489:8:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 18,
                          "src": "489:8:0"
                        },
                        "referencedDeclaration": 18,
                        "src": "489:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Transfer_$18_storage_ptr",
                          "typeString": "struct BookTraceabilitySimple.Transfer"
                        }
                      },
                      "id": 27,
                      "nodeType": "ArrayTypeName",
                      "src": "489:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Transfer_$18_storage_$dyn_storage_ptr",
                        "typeString": "struct BookTraceabilitySimple.Transfer[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "booksByOwner",
                  "nameLocation": "566:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "529:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                    "typeString": "mapping(address => string[])"
                  },
                  "typeName": {
                    "id": 33,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 30,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "537:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "529:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                      "typeString": "mapping(address => string[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 31,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "548:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "id": 32,
                      "nodeType": "ArrayTypeName",
                      "src": "548:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                        "typeString": "string[]"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "6ec4f4bf",
                  "id": 36,
                  "mutability": "mutable",
                  "name": "totalBooks",
                  "nameLocation": "599:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "584:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "fac71935f5b3956bb12e403e8db8530ab044528c2e4afcbf2d89500910eb11fb",
                  "id": 46,
                  "name": "BookRegistered",
                  "nameLocation": "622:14:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 38,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bookId",
                        "nameLocation": "661:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "646:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "646:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 40,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "title",
                        "nameLocation": "684:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "677:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "677:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 42,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "715:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "699:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "699:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 44,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "738:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "730:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "730:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "636:117:0"
                  },
                  "src": "616:138:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8758ab0c947af1360ae9a634e40f8fa1ecc49c8c1c589460781792b51ac6808d",
                  "id": 56,
                  "name": "BookTransferred",
                  "nameLocation": "766:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 55,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 48,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bookId",
                        "nameLocation": "806:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 56,
                        "src": "791:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 47,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "791:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 50,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "838:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 56,
                        "src": "822:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 52,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "868:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 56,
                        "src": "852:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 51,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "852:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 54,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "888:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 56,
                        "src": "880:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 53,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "880:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "781:122:0"
                  },
                  "src": "760:144:0"
                },
                {
                  "body": {
                    "id": 110,
                    "nodeType": "Block",
                    "src": "1008:413:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 73,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 66,
                                          "name": "books",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23,
                                          "src": "1032:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Book_$11_storage_$",
                                            "typeString": "mapping(string memory => struct BookTraceabilitySimple.Book storage ref)"
                                          }
                                        },
                                        "id": 68,
                                        "indexExpression": {
                                          "id": 67,
                                          "name": "_bookId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 58,
                                          "src": "1038:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1032:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Book_$11_storage",
                                          "typeString": "struct BookTraceabilitySimple.Book storage ref"
                                        }
                                      },
                                      "id": 69,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1047:6:0",
                                      "memberName": "bookId",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4,
                                      "src": "1032:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    ],
                                    "id": 65,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1026:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 64,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1026:5:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 70,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1026:28:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes storage pointer"
                                  }
                                },
                                "id": 71,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1055:6:0",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1026:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 72,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1065:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1026:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "426f6f6b20657869737473",
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1068:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ccc6cc6f9e672c73f73e57dc2e94916b249a3e5e4449ab0cbde479ac3c5f508a",
                                "typeString": "literal_string \"Book exists\""
                              },
                              "value": "Book exists"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ccc6cc6f9e672c73f73e57dc2e94916b249a3e5e4449ab0cbde479ac3c5f508a",
                                "typeString": "literal_string \"Book exists\""
                              }
                            ],
                            "id": 63,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1018:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1018:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 76,
                        "nodeType": "ExpressionStatement",
                        "src": "1018:64:0"
                      },
                      {
                        "expression": {
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 77,
                              "name": "books",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "1093:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Book_$11_storage_$",
                                "typeString": "mapping(string memory => struct BookTraceabilitySimple.Book storage ref)"
                              }
                            },
                            "id": 79,
                            "indexExpression": {
                              "id": 78,
                              "name": "_bookId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "1099:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1093:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Book_$11_storage",
                              "typeString": "struct BookTraceabilitySimple.Book storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 81,
                                "name": "_bookId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58,
                                "src": "1137:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 82,
                                "name": "_title",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "1165:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 83,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1199:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 84,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1203:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1199:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 85,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "1241:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 86,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1247:9:0",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "1241:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 80,
                              "name": "Book",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1110:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Book_$11_storage_ptr_$",
                                "typeString": "type(struct BookTraceabilitySimple.Book storage pointer)"
                              }
                            },
                            "id": 87,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "1129:6:0",
                              "1158:5:0",
                              "1185:12:0",
                              "1223:16:0"
                            ],
                            "names": [
                              "bookId",
                              "title",
                              "currentOwner",
                              "registrationTime"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "1110:157:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Book_$11_memory_ptr",
                              "typeString": "struct BookTraceabilitySimple.Book memory"
                            }
                          },
                          "src": "1093:174:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$11_storage",
                            "typeString": "struct BookTraceabilitySimple.Book storage ref"
                          }
                        },
                        "id": 89,
                        "nodeType": "ExpressionStatement",
                        "src": "1093:174:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 95,
                              "name": "_bookId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "1308:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 90,
                                "name": "booksByOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "1278:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => string storage ref[] storage ref)"
                                }
                              },
                              "id": 93,
                              "indexExpression": {
                                "expression": {
                                  "id": 91,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1291:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1295:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1291:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1278:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1303:4:0",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1278:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                              "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1278:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 97,
                        "nodeType": "ExpressionStatement",
                        "src": "1278:38:0"
                      },
                      {
                        "expression": {
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1326:12:0",
                          "subExpression": {
                            "id": 98,
                            "name": "totalBooks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1326:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 100,
                        "nodeType": "ExpressionStatement",
                        "src": "1326:12:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 102,
                              "name": "_bookId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "1369:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 103,
                              "name": "_title",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "1378:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 104,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1386:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1390:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1386:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 106,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "1398:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1404:9:0",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "1398:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 101,
                            "name": "BookRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "1354:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,string memory,address,uint256)"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1354:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 109,
                        "nodeType": "EmitStatement",
                        "src": "1349:65:0"
                      }
                    ]
                  },
                  "functionSelector": "195a0119",
                  "id": 111,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerBook",
                  "nameLocation": "919:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 61,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 58,
                        "mutability": "mutable",
                        "name": "_bookId",
                        "nameLocation": "955:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "941:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 57,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "941:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 60,
                        "mutability": "mutable",
                        "name": "_title",
                        "nameLocation": "986:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "972:20:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 59,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "931:67:0"
                  },
                  "returnParameters": {
                    "id": 62,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1008:0:0"
                  },
                  "scope": 248,
                  "src": "910:511:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 189,
                    "nodeType": "Block",
                    "src": "1527:676:0",
                    "statements": [
                      {
                        "assignments": [
                          120
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 120,
                            "mutability": "mutable",
                            "name": "book",
                            "nameLocation": "1550:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 189,
                            "src": "1537:17:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Book_$11_storage_ptr",
                              "typeString": "struct BookTraceabilitySimple.Book"
                            },
                            "typeName": {
                              "id": 119,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 118,
                                "name": "Book",
                                "nameLocations": [
                                  "1537:4:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 11,
                                "src": "1537:4:0"
                              },
                              "referencedDeclaration": 11,
                              "src": "1537:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Book_$11_storage_ptr",
                                "typeString": "struct BookTraceabilitySimple.Book"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 124,
                        "initialValue": {
                          "baseExpression": {
                            "id": 121,
                            "name": "books",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "1557:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Book_$11_storage_$",
                              "typeString": "mapping(string memory => struct BookTraceabilitySimple.Book storage ref)"
                            }
                          },
                          "id": 123,
                          "indexExpression": {
                            "id": 122,
                            "name": "_bookId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "1563:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1557:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$11_storage",
                            "typeString": "struct BookTraceabilitySimple.Book storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1537:34:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 128,
                                        "name": "book",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 120,
                                        "src": "1595:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Book_$11_storage_ptr",
                                          "typeString": "struct BookTraceabilitySimple.Book storage pointer"
                                        }
                                      },
                                      "id": 129,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1600:6:0",
                                      "memberName": "bookId",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4,
                                      "src": "1595:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    ],
                                    "id": 127,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1589:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 126,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1589:5:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 130,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1589:18:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes storage pointer"
                                  }
                                },
                                "id": 131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1608:6:0",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1589:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1617:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1589:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "426f6f6b206e6f7420666f756e64",
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1620:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f2cb2c45c5dd721fd9aee0488e9fd07f7b0e4616facff0a03c9a5578088c6860",
                                "typeString": "literal_string \"Book not found\""
                              },
                              "value": "Book not found"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f2cb2c45c5dd721fd9aee0488e9fd07f7b0e4616facff0a03c9a5578088c6860",
                                "typeString": "literal_string \"Book not found\""
                              }
                            ],
                            "id": 125,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1581:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1581:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 136,
                        "nodeType": "ExpressionStatement",
                        "src": "1581:56:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 138,
                                  "name": "book",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 120,
                                  "src": "1655:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Book_$11_storage_ptr",
                                    "typeString": "struct BookTraceabilitySimple.Book storage pointer"
                                  }
                                },
                                "id": 139,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1660:12:0",
                                "memberName": "currentOwner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8,
                                "src": "1655:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 140,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1676:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1680:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1676:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1655:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f74206f776e6572",
                              "id": 143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1688:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
                                "typeString": "literal_string \"Not owner\""
                              },
                              "value": "Not owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
                                "typeString": "literal_string \"Not owner\""
                              }
                            ],
                            "id": 137,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1647:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1647:53:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 145,
                        "nodeType": "ExpressionStatement",
                        "src": "1647:53:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 147,
                                "name": "_newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "1718:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 148,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1731:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1735:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1731:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1718:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
                              "id": 151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1743:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
                                "typeString": "literal_string \"Cannot transfer to self\""
                              },
                              "value": "Cannot transfer to self"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
                                "typeString": "literal_string \"Cannot transfer to self\""
                              }
                            ],
                            "id": 146,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1710:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1710:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 153,
                        "nodeType": "ExpressionStatement",
                        "src": "1710:59:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 159,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1839:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 160,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1843:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1839:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 161,
                                  "name": "_newOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 115,
                                  "src": "1867:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 162,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "1901:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 163,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1907:9:0",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "1901:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 158,
                                "name": "Transfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "1810:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Transfer_$18_storage_ptr_$",
                                  "typeString": "type(struct BookTraceabilitySimple.Transfer storage pointer)"
                                }
                              },
                              "id": 164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "1833:4:0",
                                "1863:2:0",
                                "1890:9:0"
                              ],
                              "names": [
                                "from",
                                "to",
                                "timestamp"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "1810:117:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Transfer_$18_memory_ptr",
                                "typeString": "struct BookTraceabilitySimple.Transfer memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Transfer_$18_memory_ptr",
                                "typeString": "struct BookTraceabilitySimple.Transfer memory"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 154,
                                "name": "transferHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "1780:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Transfer_$18_storage_$dyn_storage_$",
                                  "typeString": "mapping(string memory => struct BookTraceabilitySimple.Transfer storage ref[] storage ref)"
                                }
                              },
                              "id": 156,
                              "indexExpression": {
                                "id": 155,
                                "name": "_bookId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "1796:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1780:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Transfer_$18_storage_$dyn_storage",
                                "typeString": "struct BookTraceabilitySimple.Transfer storage ref[] storage ref"
                              }
                            },
                            "id": 157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1805:4:0",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1780:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Transfer_$18_storage_$dyn_storage_ptr_$_t_struct$_Transfer_$18_storage_$returns$__$attached_to$_t_array$_t_struct$_Transfer_$18_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct BookTraceabilitySimple.Transfer storage ref[] storage pointer,struct BookTraceabilitySimple.Transfer storage ref)"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1780:148:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 166,
                        "nodeType": "ExpressionStatement",
                        "src": "1780:148:0"
                      },
                      {
                        "expression": {
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 167,
                              "name": "book",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "1967:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Book_$11_storage_ptr",
                                "typeString": "struct BookTraceabilitySimple.Book storage pointer"
                              }
                            },
                            "id": 169,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1972:12:0",
                            "memberName": "currentOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "1967:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 170,
                            "name": "_newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "1987:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1967:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 172,
                        "nodeType": "ExpressionStatement",
                        "src": "1967:29:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 177,
                              "name": "_bookId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "2108:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 173,
                                "name": "booksByOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "2079:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => string storage ref[] storage ref)"
                                }
                              },
                              "id": 175,
                              "indexExpression": {
                                "id": 174,
                                "name": "_newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "2092:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2079:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2103:4:0",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2079:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                              "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2079:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 179,
                        "nodeType": "ExpressionStatement",
                        "src": "2079:37:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 181,
                              "name": "_bookId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "2148:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 182,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2157:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2161:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2157:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 184,
                              "name": "_newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "2169:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 185,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "2180:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2186:9:0",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2180:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 180,
                            "name": "BookTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "2132:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,address,address,uint256)"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2132:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 188,
                        "nodeType": "EmitStatement",
                        "src": "2127:69:0"
                      }
                    ]
                  },
                  "functionSelector": "c0e793c2",
                  "id": 190,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferOwnership",
                  "nameLocation": "1436:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 116,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 113,
                        "mutability": "mutable",
                        "name": "_bookId",
                        "nameLocation": "1477:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "1463:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1463:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 115,
                        "mutability": "mutable",
                        "name": "_newOwner",
                        "nameLocation": "1502:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "1494:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 114,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1494:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1453:64:0"
                  },
                  "returnParameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1527:0:0"
                  },
                  "scope": 248,
                  "src": "1427:776:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 202,
                    "nodeType": "Block",
                    "src": "2285:38:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 198,
                            "name": "books",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "2302:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Book_$11_storage_$",
                              "typeString": "mapping(string memory => struct BookTraceabilitySimple.Book storage ref)"
                            }
                          },
                          "id": 200,
                          "indexExpression": {
                            "id": 199,
                            "name": "_bookId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "2308:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2302:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$11_storage",
                            "typeString": "struct BookTraceabilitySimple.Book storage ref"
                          }
                        },
                        "functionReturnParameters": 197,
                        "id": 201,
                        "nodeType": "Return",
                        "src": "2295:21:0"
                      }
                    ]
                  },
                  "functionSelector": "c37a8361",
                  "id": 203,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBook",
                  "nameLocation": "2218:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "_bookId",
                        "nameLocation": "2240:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "2226:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2226:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2225:23:0"
                  },
                  "returnParameters": {
                    "id": 197,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 196,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "2272:11:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Book_$11_memory_ptr",
                          "typeString": "struct BookTraceabilitySimple.Book"
                        },
                        "typeName": {
                          "id": 195,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 194,
                            "name": "Book",
                            "nameLocations": [
                              "2272:4:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11,
                            "src": "2272:4:0"
                          },
                          "referencedDeclaration": 11,
                          "src": "2272:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Book_$11_storage_ptr",
                            "typeString": "struct BookTraceabilitySimple.Book"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2271:13:0"
                  },
                  "scope": 248,
                  "src": "2209:114:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "2422:48:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 212,
                            "name": "transferHistory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "2439:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_Transfer_$18_storage_$dyn_storage_$",
                              "typeString": "mapping(string memory => struct BookTraceabilitySimple.Transfer storage ref[] storage ref)"
                            }
                          },
                          "id": 214,
                          "indexExpression": {
                            "id": 213,
                            "name": "_bookId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 205,
                            "src": "2455:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2439:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Transfer_$18_storage_$dyn_storage",
                            "typeString": "struct BookTraceabilitySimple.Transfer storage ref[] storage ref"
                          }
                        },
                        "functionReturnParameters": 211,
                        "id": 215,
                        "nodeType": "Return",
                        "src": "2432:31:0"
                      }
                    ]
                  },
                  "functionSelector": "7b2cca7c",
                  "id": 217,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTransferHistory",
                  "nameLocation": "2338:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 206,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "_bookId",
                        "nameLocation": "2371:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "2357:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2357:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2356:23:0"
                  },
                  "returnParameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "2403:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Transfer_$18_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct BookTraceabilitySimple.Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 208,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 207,
                              "name": "Transfer",
                              "nameLocations": [
                                "2403:8:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 18,
                              "src": "2403:8:0"
                            },
                            "referencedDeclaration": 18,
                            "src": "2403:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Transfer_$18_storage_ptr",
                              "typeString": "struct BookTraceabilitySimple.Transfer"
                            }
                          },
                          "id": 209,
                          "nodeType": "ArrayTypeName",
                          "src": "2403:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Transfer_$18_storage_$dyn_storage_ptr",
                            "typeString": "struct BookTraceabilitySimple.Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2402:19:0"
                  },
                  "scope": 248,
                  "src": "2329:141:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 233,
                    "nodeType": "Block",
                    "src": "2571:63:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 226,
                                "name": "books",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "2588:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Book_$11_storage_$",
                                  "typeString": "mapping(string memory => struct BookTraceabilitySimple.Book storage ref)"
                                }
                              },
                              "id": 228,
                              "indexExpression": {
                                "id": 227,
                                "name": "_bookId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 219,
                                "src": "2594:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2588:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Book_$11_storage",
                                "typeString": "struct BookTraceabilitySimple.Book storage ref"
                              }
                            },
                            "id": 229,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2603:12:0",
                            "memberName": "currentOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "2588:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 230,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "2619:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2588:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 225,
                        "id": 232,
                        "nodeType": "Return",
                        "src": "2581:46:0"
                      }
                    ]
                  },
                  "functionSelector": "59de8bd6",
                  "id": 234,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyOwnership",
                  "nameLocation": "2485:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "_bookId",
                        "nameLocation": "2515:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 234,
                        "src": "2501:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2501:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "_address",
                        "nameLocation": "2532:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 234,
                        "src": "2524:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2524:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2500:41:0"
                  },
                  "returnParameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 234,
                        "src": "2565:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2565:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2564:6:0"
                  },
                  "scope": 248,
                  "src": "2476:158:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 246,
                    "nodeType": "Block",
                    "src": "2721:44:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 242,
                            "name": "booksByOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "2738:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
                              "typeString": "mapping(address => string storage ref[] storage ref)"
                            }
                          },
                          "id": 244,
                          "indexExpression": {
                            "id": 243,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "2751:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2738:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                            "typeString": "string storage ref[] storage ref"
                          }
                        },
                        "functionReturnParameters": 241,
                        "id": 245,
                        "nodeType": "Return",
                        "src": "2731:27:0"
                      }
                    ]
                  },
                  "functionSelector": "5ff47114",
                  "id": 247,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBooksByOwner",
                  "nameLocation": "2649:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "2673:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "2665:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2665:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2664:16:0"
                  },
                  "returnParameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "2704:15:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 238,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "2704:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 239,
                          "nodeType": "ArrayTypeName",
                          "src": "2704:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2703:17:0"
                  },
                  "scope": 248,
                  "src": "2640:125:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 249,
              "src": "159:2608:0",
              "usedErrors": [],
              "usedEvents": [
                46,
                56
              ]
            }
          ],
          "src": "32:2736:0"
        }
      }
    },
    "contracts": {
      "contracts/BookTraceabilitySimple.sol": {
        "BookTraceabilitySimple": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "string",
                  "name": "bookId",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "BookRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "string",
                  "name": "bookId",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "BookTransferred",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "name": "books",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "bookId",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "currentOwner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "registrationTime",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_bookId",
                  "type": "string"
                }
              ],
              "name": "getBook",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "bookId",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "title",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "currentOwner",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "registrationTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct BookTraceabilitySimple.Book",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "getBooksByOwner",
              "outputs": [
                {
                  "internalType": "string[]",
                  "name": "",
                  "type": "string[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_bookId",
                  "type": "string"
                }
              ],
              "name": "getTransferHistory",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct BookTraceabilitySimple.Transfer[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_bookId",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_title",
                  "type": "string"
                }
              ],
              "name": "registerBook",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalBooks",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "transferHistory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_bookId",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_bookId",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "_address",
                  "type": "address"
                }
              ],
              "name": "verifyOwnership",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.2.0+commit.e94432e.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"bookId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BookRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"bookId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BookTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"books\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"bookId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"registrationTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_bookId\",\"type\":\"string\"}],\"name\":\"getBook\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"bookId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"registrationTime\",\"type\":\"uint256\"}],\"internalType\":\"struct BookTraceabilitySimple.Book\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getBooksByOwner\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_bookId\",\"type\":\"string\"}],\"name\":\"getTransferHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct BookTraceabilitySimple.Transfer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_bookId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"}],\"name\":\"registerBook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBooks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferHistory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_bookId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_bookId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"verifyOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simplified version for Passet Hub deployment limits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BookTraceabilitySimple\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BookTraceabilitySimple.sol\":\"BookTraceabilitySimple\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BookTraceabilitySimple.sol\":{\"keccak256\":\"0xb2a316379e51e4035665b4b8e1691b0e76d6ac251cc2839d34f28353560a982c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b82e3727090b3687383aacb7ddf669cbec920079cf1654df704220b8bd32ebc\",\"dweb:/ipfs/Qmcn2hdGu7ksxpytBt5oVB7PYEzP191RtensozENxAVQDD\"]}},\"version\":1}",
            "solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 112/65696 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 9337\n// Code size = 32732 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x20078]\n   117: jump @46 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x300a0\n   126: i32 a0 = a0 + 0\n   128: ecalli 9 // 'set_immutable_data'\n   130: jump @46\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @29\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @29\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 43)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ecalli 5 // 'get_storage'\n   770: a0 = u64 [sp + 0x38]\n   773: a1 = u64 [sp + 0x30]\n   776: a2 = u64 [sp + 0x28]\n   779: a3 = u64 [sp + 0x20]\n   782: a0 = reverse a0\n   784: a1 = reverse a1\n   786: a2 = reverse a2\n   788: a3 = reverse a3\n   790: u64 [s1 + 0x18] = a3\n   793: u64 [s1 + 0x10] = a2\n   796: u64 [s1 + 0x8] = a1\n   799: u64 [s1] = a0\n   801: t0 = 6, jump @1043\n      : @22 [@dyn 3] (gas: 1)\n   806: ret\n      : @23 (gas: 40)\n   808: sp = sp + 0xffffffffffffffa0\n   811: u64 [sp + 0x58] = ra\n   814: u64 [sp + 0x50] = s0\n   817: s0 = sp + 0x60\n   820: sp = sp & 0xffffffffffffffe0\n   823: t0 = u64 [a0]\n   825: a3 = u64 [a0 + 0x8]\n   828: a4 = u64 [a0 + 0x10]\n   831: a0 = u64 [a0 + 0x18]\n   834: t1 = u64 [a1]\n   836: a2 = u64 [a1 + 0x8]\n   839: a5 = u64 [a1 + 0x10]\n   842: a1 = u64 [a1 + 0x18]\n   845: t2 = reverse a0\n   847: a4 = reverse a4\n   849: a3 = reverse a3\n   851: a0 = reverse t0\n   853: t0 = reverse a1\n   855: a5 = reverse a5\n   857: a2 = reverse a2\n   859: a1 = reverse t1\n   861: u64 [sp + 0x18] = a0\n   864: u64 [sp + 0x10] = a3\n   867: u64 [sp + 0x8] = a4\n   870: u64 [sp] = t2\n   872: u64 [sp + 0x38] = a1\n   875: u64 [sp + 0x30] = a2\n   878: u64 [sp + 0x28] = a5\n   881: u64 [sp + 0x20] = t0\n   884: i32 a1 = sp + 0\n   886: i32 a3 = sp + 0x20\n   889: a2 = 0xffffffffffffffff\n   892: a4 = 0x20\n   895: a0 = 0\n   897: ecalli 10 // 'set_storage'\n   899: sp = s0 + 0xffffffffffffffa0\n   902: ra = u64 [sp + 0x58]\n   905: s0 = u64 [sp + 0x50]\n   908: sp = sp + 0x60\n   911: ret\n      : @24 [@dyn 4] (gas: 9)\n   913: a5 = u64 [a4]\n   915: u64 [sp + 0x40] = a5\n   918: a5 = u64 [a4 + 0x8]\n   921: u64 [sp + 0x48] = a5\n   924: a5 = u64 [a4 + 0x10]\n   927: u64 [sp + 0x50] = a5\n   930: a4 = u64 [a4 + 0x18]\n   933: u64 [sp + 0x58] = a4\n   936: t0 = 10, jump @1029\n      : @25 [@dyn 5] (gas: 2)\n   941: u64 [sp + 0x38] = a1\n   944: ra = 12, jump @29\n      : @26 [@dyn 6] (gas: 46)\n   949: a1 = reverse s1\n   951: u64 [sp + 0x78] = a1\n   954: a1 = u64 [sp]\n   956: a1 = reverse a1\n   958: u64 [sp + 0x70] = a1\n   961: a1 = u64 [sp + 0x8]\n   964: a1 = reverse a1\n   966: u64 [sp + 0x68] = a1\n   969: a1 = u64 [sp + 0x10]\n   972: a1 = reverse a1\n   974: u64 [sp + 0x60] = a1\n   977: a1 = u64 [sp + 0x18]\n   980: a1 = reverse a1\n   982: u64 [sp + 0x98] = a1\n   986: a1 = u64 [sp + 0x20]\n   989: a1 = reverse a1\n   991: u64 [sp + 0x90] = a1\n   995: a1 = u64 [sp + 0x28]\n   998: a1 = reverse a1\n  1000: u64 [sp + 0x88] = a1\n  1004: a1 = u64 [sp + 0x30]\n  1007: a1 = reverse a1\n  1009: u64 [sp + 0x80] = a1\n  1013: a1 = u64 [sp + 0x40]\n  1016: a1 = reverse a1\n  1018: u64 [sp + 0xb8] = a1\n  1022: a1 = u64 [sp + 0x48]\n  1025: a1 = reverse a1\n  1027: u64 [sp + 0xb0] = a1\n  1031: a1 = u64 [sp + 0x50]\n  1034: a1 = reverse a1\n  1036: u64 [sp + 0xa8] = a1\n  1040: a1 = u64 [sp + 0x58]\n  1043: a1 = reverse a1\n  1045: u64 [sp + 0xa0] = a1\n  1049: i32 a2 = a0 + 0\n  1051: a3 = i32 [sp + 0x38]\n  1054: i32 a0 = sp + 0x60\n  1057: a1 = 0x3\n  1060: ecalli 4 // 'deposit_event'\n  1062: sp = s0 + 0xffffffffffffff20\n  1066: ra = u64 [sp + 0xd8]\n  1070: s0 = u64 [sp + 0xd0]\n  1074: s1 = u64 [sp + 0xc8]\n  1078: sp = sp + 0xe0\n  1082: ret\n      : @27 [@dyn 7] (gas: 2)\n  1084: u64 [sp + 0x58] = a1\n  1087: ra = 16, jump @29\n      : @28 [@dyn 8] (gas: 58)\n  1092: a1 = reverse s1\n  1094: u64 [sp + 0x98] = a1\n  1098: a1 = u64 [sp]\n  1100: a1 = reverse a1\n  1102: u64 [sp + 0x90] = a1\n  1106: a1 = u64 [sp + 0x8]\n  1109: a1 = reverse a1\n  1111: u64 [sp + 0x88] = a1\n  1115: a1 = u64 [sp + 0x10]\n  1118: a1 = reverse a1\n  1120: u64 [sp + 0x80] = a1\n  1124: a1 = u64 [sp + 0x18]\n  1127: a1 = reverse a1\n  1129: u64 [sp + 0xb8] = a1\n  1133: a1 = u64 [sp + 0x20]\n  1136: a1 = reverse a1\n  1138: u64 [sp + 0xb0] = a1\n  1142: a1 = u64 [sp + 0x28]\n  1145: a1 = reverse a1\n  1147: u64 [sp + 0xa8] = a1\n  1151: a1 = u64 [sp + 0x30]\n  1154: a1 = reverse a1\n  1156: u64 [sp + 0xa0] = a1\n  1160: a1 = u64 [sp + 0x38]\n  1163: a1 = reverse a1\n  1165: u64 [sp + 0xd8] = a1\n  1169: a1 = u64 [sp + 0x40]\n  1172: a1 = reverse a1\n  1174: u64 [sp + 0xd0] = a1\n  1178: a1 = u64 [sp + 0x48]\n  1181: a1 = reverse a1\n  1183: u64 [sp + 0xc8] = a1\n  1187: a1 = u64 [sp + 0x50]\n  1190: a1 = reverse a1\n  1192: u64 [sp + 0xc0] = a1\n  1196: a1 = u64 [sp + 0x60]\n  1199: a1 = reverse a1\n  1201: u64 [sp + 0xf8] = a1\n  1205: a1 = u64 [sp + 0x68]\n  1208: a1 = reverse a1\n  1210: u64 [sp + 0xf0] = a1\n  1214: a1 = u64 [sp + 0x70]\n  1217: a1 = reverse a1\n  1219: u64 [sp + 0xe8] = a1\n  1223: a1 = u64 [sp + 0x78]\n  1226: a1 = reverse a1\n  1228: u64 [sp + 0xe0] = a1\n  1232: i32 a2 = a0 + 0\n  1234: a3 = i32 [sp + 0x58]\n  1237: i32 a0 = sp + 0x80\n  1241: a1 = 0x4\n  1244: ecalli 4 // 'deposit_event'\n  1246: sp = s0 + 0xfffffffffffffee0\n  1250: ra = u64 [sp + 0x118]\n  1254: s0 = u64 [sp + 0x110]\n  1258: s1 = u64 [sp + 0x108]\n  1262: sp = sp + 0x120\n  1266: ret\n      : @29 (gas: 2)\n  1268: i32 a2 = a0 >> 0x10\n  1271: jump @34 if a2 != 0\n      : @30 (gas: 4)\n  1274: a1 = a1 + a0\n  1277: i32 a1 = a1 + 0x1f\n  1280: a1 = a1 & 0xffffffffffffffe0\n  1283: jump @34 if a1 >u 65536\n      : @31 (gas: 3)\n  1289: a2 = 0x20074\n  1294: a3 = i32 [0x20074]\n  1299: jump @33 if a3 >=u a1\n      : @32 (gas: 2)\n  1302: u32 [0x20074] = a1\n  1307: fallthrough\n      : @33 (gas: 4)\n  1308: a1 = 0x20080\n  1313: i32 a0 = a0 + 0\n  1315: a0 = a0 + a1\n  1318: ret\n      : @34 (gas: 1)\n  1320: trap\n      : @35 (gas: 6)\n  1321: sp = sp + 0xfffffffffffffff0\n  1324: u64 [sp + 0x8] = ra\n  1327: u64 [sp] = s0\n  1329: s0 = a0 & 0x1\n  1332: ecalli 2 // 'call_data_size'\n  1334: fallthrough\n      : @36 (gas: 2)\n  1335: u32 [0x20070] = a0\n  1340: jump @38 if s0 == 0\n      : @37 (gas: 1)\n  1343: ra = 18, jump @39\n      : @38 [@dyn 9] (gas: 1)\n  1347: ra = 20, jump @48\n      : @39 [@dyn 10] (gas: 12)\n  1352: sp = sp + 0xffffffffffffffa0\n  1355: u64 [sp + 0x58] = ra\n  1358: u64 [sp + 0x50] = s0\n  1361: s0 = sp + 0x60\n  1364: sp = sp & 0xffffffffffffffe0\n  1367: u64 [sp + 24] = 0\n  1370: u64 [sp + 16] = 0\n  1373: u64 [sp + 0] = 0x80\n  1377: a0 = 0x40\n  1380: a1 = sp\n  1382: u64 [sp + 8] = 0\n  1385: ra = 22, jump @19\n      : @40 [@dyn 11] (gas: 7)\n  1390: u64 [sp + 56] = 0\n  1393: u64 [sp + 48] = 0\n  1396: u64 [sp + 40] = 0\n  1399: u64 [sp + 32] = 0\n  1402: i32 a0 = sp + 0x20\n  1405: ecalli 11 // 'value_transferred'\n  1407: fallthrough\n      : @41 (gas: 8)\n  1408: a0 = u64 [sp + 0x30]\n  1411: a1 = u64 [sp + 0x38]\n  1414: a2 = u64 [sp + 0x28]\n  1417: a3 = u64 [sp + 0x20]\n  1420: a1 = a1 | a2\n  1423: a0 = a0 | a3\n  1426: a0 = a0 | a1\n  1429: jump @43 if a0 == 0\n      : @42 (gas: 7)\n  1432: a1 = 0x20080\n  1437: i32 a1 = a1 + 0\n  1439: a0 = 0x1\n  1442: a2 = 0\n  1444: ra = 0x1a\n  1447: ecalli 8 // 'seal_return'\n  1449: jump @48\n      : @43 (gas: 2)\n  1451: a1 = i32 [0x20074]\n  1456: jump @45 if a1 >u 127\n      : @44 (gas: 2)\n  1460: u32 [0x20074] = 0x80\n  1467: fallthrough\n      : @45 (gas: 6)\n  1468: a0 = 0x20080\n  1473: i32 a0 = a0 + 0x80\n  1477: a1 = 0\n  1479: a2 = 0\n  1481: ecalli 0 // 'call_data_copy'\n  1482: jump @15\n      : @46 (gas: 3)\n  1485: a0 = 0x80\n  1489: a1 = 0\n  1491: ra = 24, jump @29\n      : @47 [@dyn 12] (gas: 6)\n  1496: i32 a1 = a0 + 0\n  1498: a0 = 0\n  1500: a2 = 0\n  1502: ra = 0x1a\n  1505: ecalli 8 // 'seal_return'\n  1507: fallthrough\n      : @48 [@dyn 13] (gas: 16)\n  1508: sp = sp + 0xfffffffffffffe10\n  1512: u64 [sp + 0x1e8] = ra\n  1516: u64 [sp + 0x1e0] = s0\n  1520: u64 [sp + 0x1d8] = s1\n  1524: s0 = sp + 0x1f0\n  1528: sp = sp + 0xffffffffffffdab0\n  1532: sp = sp & 0xffffffffffffffe0\n  1535: s1 = sp\n  1537: a2 = s1 + 0x2078\n  1541: u64 [a2 + 256] = 0\n  1545: u64 [a2 + 248] = 0\n  1549: u64 [a2 + 232] = 0x80\n  1555: a0 = 0x40\n  1558: a1 = s1 + 0x2160\n  1562: u64 [a2 + 240] = 0\n  1566: ra = 28, jump @19\n      : @49 [@dyn 14] (gas: 4)\n  1571: a0 = 0x20070\n  1576: u64 [s1 + 0xf8] = a0\n  1580: a0 = i32 [0x20070]\n  1585: jump @51 if a0 >=u 4\n      : @50 (gas: 1)\n  1589: jump @738\n      : @51 (gas: 6)\n  1592: a0 = s1 + 0x2000\n  1596: i32 a0 = a0 + 0x180\n  1600: a1 = 0\n  1602: ra = 0x1e\n  1605: ecalli 1 // 'call_data_load'\n  1607: fallthrough\n      : @52 [@dyn 15] (gas: 3)\n  1608: a2 = s1 + 0x2078\n  1612: a0 = i32 [a2 + 0x124]\n  1616: jump @54 if a0 != 2623780793\n      : @53 (gas: 1)\n  1623: jump @544\n      : @54 (gas: 1)\n  1626: jump @56 if a0 != 3236402114\n      : @55 (gas: 1)\n  1633: jump @211\n      : @56 (gas: 1)\n  1636: jump @58 if a0 != 3279586145\n      : @57 (gas: 1)\n  1643: jump @448\n      : @58 (gas: 1)\n  1646: jump @60 if a0 != 425328921\n      : @59 (gas: 1)\n  1653: jump @330\n      : @60 (gas: 1)\n  1656: jump @78 if a0 == 731774592\n      : @61 (gas: 1)\n  1664: jump @173 if a0 == 1507757014\n      : @62 (gas: 1)\n  1672: jump @140 if a0 == 1609855252\n      : @63 (gas: 1)\n  1680: jump @65 if a0 == 1858401471\n      : @64 (gas: 1)\n  1687: jump @257\n      : @65 (gas: 8)\n  1690: u64 [a2 + 960] = 0\n  1694: u64 [a2 + 952] = 0\n  1698: u64 [a2 + 944] = 0\n  1702: u64 [a2 + 936] = 0\n  1706: a0 = s1 + 0x2000\n  1710: i32 a0 = a0 + 0x420\n  1714: ecalli 11 // 'value_transferred'\n  1716: fallthrough\n      : @66 (gas: 10)\n  1717: a4 = s1 + 0x2078\n  1721: a5 = a4 + 0x300\n  1725: a0 = u64 [a5 + 0xb8]\n  1729: a1 = u64 [a5 + 0xc0]\n  1733: a2 = u64 [a5 + 0xb0]\n  1737: a3 = u64 [a5 + 0xa8]\n  1741: a1 = a1 | a2\n  1744: a0 = a0 | a3\n  1747: a0 = a0 | a1\n  1750: jump @68 if a0 == 0\n      : @67 (gas: 1)\n  1753: jump @740\n      : @68 (gas: 3)\n  1756: a0 = u64 [s1 + 0xf8]\n  1760: a1 = i32 [a0]\n  1762: jump @70 if a1 >u 3\n      : @69 (gas: 1)\n  1766: jump @741\n      : @70 (gas: 8)\n  1769: u64 [a4 + 992] = 0\n  1773: u64 [a4 + 984] = 0\n  1777: u64 [a4 + 976] = 0\n  1781: u64 [a4 + 968] = 0x3\n  1786: a0 = s1 + 0x7ff\n  1790: a0 = a0 + 0x681\n  1794: a1 = s1 + 0x2440\n  1798: ra = 32, jump @21\n      : @71 [@dyn 16] (gas: 15)\n  1803: a1 = s1 + 0x7ff\n  1807: a1 = a1 + 0x79\n  1810: a2 = a1 + 0x600\n  1814: a0 = u64 [a2 + 0x20]\n  1817: u64 [s1 + 0xf8] = a0\n  1821: a0 = u64 [a2 + 0x18]\n  1824: u64 [s1 + 0xf0] = a0\n  1828: a0 = u64 [a2 + 0x10]\n  1831: u64 [s1 + 0xe8] = a0\n  1835: a0 = u64 [a2 + 0x8]\n  1838: u64 [s1 + 0xe0] = a0\n  1842: a0 = s1 + 0x7ff\n  1846: a0 = a0 + 0x661\n  1850: a1 = 0x40\n  1853: ra = 34, jump @17\n      : @72 [@dyn 17] (gas: 15)\n  1858: a3 = s1 + 0x7ff\n  1862: a3 = a3 + 0x79\n  1865: a0 = u64 [a3 + 0x600]\n  1869: a5 = a3 + 0x500\n  1873: a1 = u64 [a5 + 0xf8]\n  1877: a2 = u64 [a5 + 0xf0]\n  1881: a4 = u64 [a5 + 0xe8]\n  1885: a0 = a0 | a2\n  1888: a2 = a4 | a1\n  1891: a2 = a2 | a0\n  1894: a2 = a2 >> 0x20\n  1897: a0 = a0 | a1\n  1900: a0 = a0 << 0x20\n  1903: a0 = a0 | a2\n  1906: jump @74 if a0 == 0\n      : @73 (gas: 1)\n  1909: jump @609\n      : @74 (gas: 12)\n  1912: a0 = u64 [s1 + 0xe0]\n  1916: a2 = a3 + 0x500\n  1920: u64 [a2 + 0xc8] = a0\n  1924: a0 = u64 [s1 + 0xe8]\n  1928: u64 [a2 + 0xd0] = a0\n  1932: a0 = u64 [s1 + 0xf0]\n  1936: u64 [a2 + 0xd8] = a0\n  1940: a1 = s1 + 0x7ff\n  1944: a1 = a1 + 0x641\n  1948: a0 = u64 [s1 + 0xf8]\n  1952: u64 [a2 + 0xe0] = a0\n  1956: fallthrough\n      : @75 (gas: 3)\n  1957: a0 = a4\n  1959: u64 [s1 + 0xf8] = a4\n  1963: ra = 36, jump @19\n      : @76 [@dyn 18] (gas: 3)\n  1968: a1 = 0x20\n  1971: a0 = u64 [s1 + 0xf8]\n  1975: ra = 38, jump @29\n      : @77 [@dyn 19] (gas: 5)\n  1980: i32 a1 = a0 + 0\n  1982: a2 = 0x20\n  1985: a0 = 0\n  1987: ecalli 8 // 'seal_return'\n  1989: fallthrough\n      : @78 (gas: 8)\n  1990: u64 [a2 + 704] = 0\n  1994: u64 [a2 + 696] = 0\n  1998: u64 [a2 + 688] = 0\n  2002: u64 [a2 + 680] = 0\n  2006: a0 = s1 + 0x2000\n  2010: i32 a0 = a0 + 0x320\n  2014: ecalli 11 // 'value_transferred'\n  2016: fallthrough\n      : @79 (gas: 10)\n  2017: a3 = s1 + 0x2078\n  2021: a4 = a3 + 0x200\n  2025: a0 = u64 [a4 + 0xb8]\n  2029: a1 = u64 [a4 + 0xc0]\n  2033: a2 = u64 [a4 + 0xb0]\n  2037: a3 = u64 [a4 + 0xa8]\n  2041: a1 = a1 | a2\n  2044: a0 = a0 | a3\n  2047: a0 = a0 | a1\n  2050: jump @81 if a0 == 0\n      : @80 (gas: 1)\n  2053: jump @742\n      : @81 (gas: 3)\n  2056: a0 = u64 [s1 + 0xf8]\n  2060: a0 = i32 [a0]\n  2062: jump @83 if a0 >u 35\n      : @82 (gas: 1)\n  2066: jump @743\n      : @83 (gas: 6)\n  2069: a0 = s1 + 0x2000\n  2073: i32 a0 = a0 + 0x340\n  2077: a1 = 0x4\n  2080: ra = 0x28\n  2083: ecalli 1 // 'call_data_load'\n  2085: fallthrough\n      : @84 [@dyn 20] (gas: 6)\n  2086: a5 = s1 + 0x2078\n  2090: a3 = a5 + 0x200\n  2094: a0 = u64 [a3 + 0xe0]\n  2098: a1 = u64 [a3 + 0xd8]\n  2102: a2 = u64 [a3 + 0xd0]\n  2106: t0 = 42, jump @1027\n      : @85 [@dyn 21] (gas: 1)\n  2111: jump @87 if a4 != 0\n      : @86 (gas: 1)\n  2114: jump @744\n      : @87 (gas: 30)\n  2117: a3 = u64 [a5 + 0x2c8]\n  2121: a4 = u64 [s1 + 0xf8]\n  2125: t0 = u32 [a4]\n  2127: a5 = a3 + 0x4\n  2130: a3 = a5 <u a3\n  2133: a4 = a2 + a3\n  2136: a2 = a4 <u a2\n  2139: a2 = a3 if a3 == 0\n  2142: a2 = a2 + a1\n  2145: a1 = a2 <u a1\n  2148: a3 = a0 + a1\n  2151: a0 = s1 + 0x7ff\n  2155: a0 = a0 + 0x79\n  2158: u64 [a0 + 416] = 0\n  2162: u64 [a0 + 408] = 0\n  2166: u64 [a0 + 400] = 0\n  2170: u64 [a0 + 0x188] = t0\n  2174: a1 = a0 + 0x100\n  2178: u64 [a1 + 0xa8] = a5\n  2182: u64 [a1 + 0xb0] = a4\n  2186: u64 [a1 + 0xb8] = a2\n  2190: a4 = a0\n  2192: a0 = s1 + 0x7ff\n  2196: a0 = a0 + 0x241\n  2200: a1 = s1 + 0x7ff\n  2204: a1 = a1 + 0x221\n  2208: a2 = s1 + 0x7ff\n  2212: a2 = a2 + 0x201\n  2216: u64 [a4 + 0x1c0] = a3\n  2220: ra = 44, jump @820\n      : @88 [@dyn 22] (gas: 15)\n  2225: a0 = s1 + 0x7ff\n  2229: a0 = a0 + 0x79\n  2232: a2 = a0 + 0x100\n  2236: a1 = u64 [a2 + 0xe0]\n  2240: u64 [s1 + 0xf0] = a1\n  2244: a1 = u64 [a2 + 0xd8]\n  2248: u64 [s1 + 0xe8] = a1\n  2252: a1 = u64 [a2 + 0xd0]\n  2256: u64 [s1 + 0xf8] = a1\n  2260: a0 = u64 [a2 + 0xc8]\n  2264: u64 [s1 + 0xe0] = a0\n  2268: a0 = s1 + 0x7ff\n  2272: a0 = a0 + 0x1e1\n  2276: a1 = 0x40\n  2279: ra = 46, jump @17\n      : @89 [@dyn 23] (gas: 1)\n  2284: t0 = 48, jump @1018\n      : @90 [@dyn 24] (gas: 1)\n  2289: jump @92 if a0 == 0\n      : @91 (gas: 1)\n  2292: jump @609\n      : @92 (gas: 14)\n  2295: a0 = s1 + 0x7ff\n  2299: a0 = a0 + 0x79\n  2302: a3 = a0 + 0x100\n  2306: a2 = u64 [a3 + 0x80]\n  2310: u64 [s1 + 0xd0] = a2\n  2314: a2 = u64 [a3 + 0x78]\n  2317: u64 [s1 + 0xc8] = a2\n  2321: a2 = u64 [a3 + 0x70]\n  2324: u64 [s1 + 0xc0] = a2\n  2328: a0 = u64 [a3 + 0x68]\n  2331: u64 [s1 + 0xd8] = a0\n  2335: a0 = s1 + 0x7ff\n  2339: a0 = a0 + 0x1c1\n  2343: ra = 50, jump @17\n      : @93 [@dyn 25] (gas: 1)\n  2348: t0 = 52, jump @1016\n      : @94 [@dyn 26] (gas: 1)\n  2353: jump @96 if a0 == 0\n      : @95 (gas: 1)\n  2356: jump @609\n      : @96 (gas: 1)\n  2359: t0 = 54, jump @1015\n      : @97 [@dyn 27] (gas: 1)\n  2364: jump @99 if a1 != 0\n      : @98 (gas: 1)\n  2367: jump @609\n      : @99 (gas: 15)\n  2370: a0 = s1 + 0x7ff\n  2374: a0 = a0 + 0x79\n  2377: t0 = u64 [a0 + 0x160]\n  2381: a2 = a0 + 0x100\n  2385: a5 = u64 [a2 + 0x58]\n  2388: a1 = u64 [a2 + 0x48]\n  2391: a3 = u64 [a2 + 0x50]\n  2394: a0 = a1 | a5\n  2397: a2 = a3 | t0\n  2400: a0 = a0 | a2\n  2403: a0 = a0 >> 0x20\n  2406: a2 = a2 | a5\n  2409: a2 = a2 << 0x20\n  2412: a0 = a0 | a2\n  2415: jump @101 if a0 == 0\n      : @100 (gas: 1)\n  2418: jump @609\n      : @101 (gas: 8)\n  2421: i32 a0 = a4 + 0x20\n  2424: u64 [s1 + 0xe0] = a0\n  2428: a0 = u64 [s1 + 0xd8]\n  2432: u64 [s1 + 0xf8] = a1\n  2436: u64 [s1 + 0xf0] = a3\n  2440: u64 [s1 + 0xe8] = t0\n  2444: u64 [s1 + 0xb8] = a5\n  2448: ra = 56, jump @29\n      : @102 [@dyn 28] (gas: 4)\n  2453: u64 [s1 + 0xb0] = a0\n  2457: a0 = u64 [s1 + 0xe0]\n  2461: a1 = u64 [s1 + 0xf8]\n  2465: ra = 58, jump @29\n      : @103 [@dyn 29] (gas: 4)\n  2470: a1 = a0\n  2472: a0 = u64 [s1 + 0xb0]\n  2476: a2 = u64 [s1 + 0xf8]\n  2480: ra = 60, jump @0\n      : @104 [@dyn 30] (gas: 13)\n  2485: t2 = u64 [s1 + 0xb8]\n  2489: t1 = u64 [s1 + 0xe8]\n  2493: t0 = u64 [s1 + 0xf0]\n  2497: a0 = u64 [s1 + 0xd8]\n  2501: a1 = u64 [s1 + 0xf8]\n  2505: a0 = a0 + a1\n  2508: a1 = a0 <u a1\n  2511: a2 = u64 [s1 + 0xc0]\n  2515: a2 = a2 + t0\n  2518: a2 = a2 + a1\n  2521: a3 = a2 ^ t0\n  2524: a4 = a2 <u t0\n  2527: t0 = 62, jump @1013\n      : @105 [@dyn 31] (gas: 1)\n  2532: jump @107 if a1 == 0\n      : @106 (gas: 1)\n  2535: jump @609\n      : @107 (gas: 9)\n  2538: a2 = s1 + 0x7ff\n  2542: a2 = a2 + 0x79\n  2545: u64 [a2 + 320] = 0\n  2549: u64 [a2 + 312] = 0\n  2553: u64 [a2 + 304] = 0\n  2557: a1 = s1 + 0x7ff\n  2561: a1 = a1 + 0x1a1\n  2565: u64 [a2 + 296] = 0\n  2569: ra = 64, jump @19\n      : @108 [@dyn 32] (gas: 3)\n  2574: a0 = u64 [s1 + 0xe8]\n  2578: a1 = u64 [s1 + 0xb8]\n  2582: t0 = 66, jump @1039\n      : @109 [@dyn 33] (gas: 1)\n  2587: jump @111 if a1 != 0\n      : @110 (gas: 1)\n  2590: jump @609\n      : @111 (gas: 4)\n  2593: i32 a1 = a2 + 0x20\n  2596: u64 [s1 + 0xf8] = a1\n  2600: a0 = u64 [s1 + 0xd8]\n  2604: ra = 68, jump @29\n      : @112 [@dyn 34] (gas: 1)\n  2609: t0 = 70, jump @1031\n      : @113 [@dyn 35] (gas: 25)\n  2614: ecalli 6 // 'hash_keccak_256'\n  2616: a3 = u64 [s1 + 0xf0]\n  2620: a0 = u64 [a3 + 0x18]\n  2623: a1 = u64 [a3 + 0x10]\n  2626: a2 = u64 [a3 + 0x8]\n  2629: a3 = u64 [a3]\n  2631: a5 = reverse a0\n  2633: u64 [s1 + 0xe8] = a5\n  2637: a4 = reverse a1\n  2639: u64 [s1 + 0xf0] = a4\n  2643: a2 = reverse a2\n  2645: u64 [s1 + 0xe0] = a2\n  2649: a1 = reverse a3\n  2651: u64 [s1 + 0xf8] = a1\n  2655: a3 = s1 + 0x7ff\n  2659: a3 = a3 + 0x79\n  2662: u64 [a3 + 0x100] = a1\n  2666: u64 [a3 + 0xf8] = a2\n  2670: u64 [a3 + 0xf0] = a4\n  2674: a0 = s1 + 0x7ff\n  2678: a0 = a0 + 0x181\n  2682: a1 = s1 + 0x7ff\n  2686: a1 = a1 + 0x161\n  2690: u64 [a3 + 0xe8] = a5\n  2694: ra = 72, jump @857\n      : @114 [@dyn 36] (gas: 32)\n  2699: a4 = s1 + 0x7ff\n  2703: a4 = a4 + 0x79\n  2706: a1 = a4 + 0x100\n  2710: a0 = u64 [a1 + 0x20]\n  2713: u64 [s1 + 0xc0] = a0\n  2717: a0 = u64 [a1 + 0x18]\n  2720: u64 [s1 + 0xc8] = a0\n  2724: a0 = u64 [a1 + 0x10]\n  2727: u64 [s1 + 0xd0] = a0\n  2731: a0 = u64 [a1 + 0x8]\n  2734: u64 [s1 + 0xd8] = a0\n  2738: a0 = u64 [s1 + 0xe8]\n  2742: a0 = a0 + 0x1\n  2745: a1 = a0 <u 0x1\n  2748: a2 = u64 [s1 + 0xf0]\n  2752: a1 = a1 + a2\n  2755: a2 = a0 | a1\n  2758: a2 = a2 <u 0x1\n  2761: a3 = u64 [s1 + 0xe0]\n  2765: a2 = a2 + a3\n  2768: a3 = a2 <u a3\n  2771: a5 = u64 [s1 + 0xf8]\n  2775: a3 = a3 + a5\n  2778: u64 [a4 + 0xb0] = a1\n  2782: u64 [a4 + 0xa8] = a0\n  2786: u64 [a4 + 0xb8] = a2\n  2790: a0 = s1 + 0x7ff\n  2794: a0 = a0 + 0x141\n  2798: a1 = s1 + 0x7ff\n  2802: a1 = a1 + 0x121\n  2806: u64 [a4 + 0xc0] = a3\n  2810: ra = 74, jump @857\n      : @115 [@dyn 37] (gas: 13)\n  2815: a1 = s1 + 0x7ff\n  2819: a1 = a1 + 0x79\n  2822: a0 = u64 [a1 + 0xe0]\n  2826: u64 [s1 + 0xa0] = a0\n  2830: a0 = u64 [a1 + 0xd8]\n  2834: u64 [s1 + 0xa8] = a0\n  2838: a0 = u64 [a1 + 0xd0]\n  2842: u64 [s1 + 0xb0] = a0\n  2846: a0 = u64 [a1 + 0xc8]\n  2850: u64 [s1 + 0xb8] = a0\n  2854: a1 = u64 [s1 + 0xe8]\n  2858: a0 = a1 + 0x2\n  2861: t0 = 76, jump @1033\n      : @116 [@dyn 38] (gas: 12)\n  2866: a4 = u64 [s1 + 0xf8]\n  2870: a1 = a1 + a4\n  2873: a4 = s1 + 0x2078\n  2877: u64 [a4 + 0x300] = a1\n  2881: a1 = a4 + 0x200\n  2885: u64 [a1 + 0xf8] = a3\n  2889: u64 [a1 + 0xf0] = a2\n  2893: u64 [a1 + 0xe8] = a0\n  2897: a0 = s1 + 0x7ff\n  2901: a0 = a0 + 0x101\n  2905: a1 = s1 + 0x2360\n  2909: ra = 78, jump @21\n      : @117 [@dyn 39] (gas: 9)\n  2914: a5 = s1 + 0x7ff\n  2918: a5 = a5 + 0x79\n  2921: a0 = u32 [a5 + 0x98]\n  2925: u64 [s1 + 0x98] = a0\n  2929: a1 = u64 [s1 + 0xe8]\n  2933: a0 = a1 + 0x3\n  2936: a1 = a0 <u a1\n  2939: a3 = u64 [s1 + 0xf0]\n  2943: t0 = 80, jump @1030\n      : @118 [@dyn 40] (gas: 19)\n  2948: a1 = u64 [a5 + 0x90]\n  2952: u64 [s1 + 0x90] = a1\n  2956: a1 = u64 [s1 + 0xe0]\n  2960: a3 = a3 + a1\n  2963: a1 = a3 <u a1\n  2966: a4 = u64 [s1 + 0xf8]\n  2970: a1 = a1 + a4\n  2973: a4 = u64 [a5 + 0x88]\n  2977: u64 [s1 + 0x88] = a4\n  2981: a4 = s1 + 0x2078\n  2985: a5 = a4 + 0x300\n  2989: u64 [a5 + 0x20] = a1\n  2992: u64 [a5 + 0x18] = a3\n  2995: u64 [a5 + 0x10] = a2\n  2998: u64 [a5 + 0x8] = a0\n  3001: a0 = s1 + 0x7ff\n  3005: a0 = a0 + 0xe1\n  3009: a1 = s1 + 0x2380\n  3013: ra = 82, jump @21\n      : @119 [@dyn 41] (gas: 14)\n  3018: a1 = s1 + 0x7ff\n  3022: a1 = a1 + 0x79\n  3025: a0 = u64 [a1 + 0x80]\n  3029: u64 [s1 + 0x80] = a0\n  3033: a0 = u64 [a1 + 0x78]\n  3036: u64 [s1 + 0x78] = a0\n  3039: a0 = u64 [a1 + 0x70]\n  3042: u64 [s1 + 0x70] = a0\n  3045: a0 = u64 [a1 + 0x68]\n  3048: u64 [s1 + 0x68] = a0\n  3051: a0 = s1 + 0x7ff\n  3055: a0 = a0 + 0xc1\n  3059: a1 = 0x40\n  3062: ra = 84, jump @17\n      : @120 [@dyn 42] (gas: 9)\n  3067: a5 = s1 + 0x7ff\n  3071: a5 = a5 + 0x79\n  3074: a4 = u64 [a5 + 0x60]\n  3077: a3 = u64 [a5 + 0x58]\n  3080: a1 = u64 [a5 + 0x50]\n  3083: a0 = u64 [a5 + 0x48]\n  3086: u64 [s1 + 0xf0] = a1\n  3090: a2 = a1 | a4\n  3093: t0 = 86, jump @1034\n      : @121 [@dyn 43] (gas: 1)\n  3098: jump @123 if a1 == 0\n      : @122 (gas: 1)\n  3101: jump @609\n      : @123 (gas: 10)\n  3104: u64 [a5 + 64] = 0\n  3107: u64 [a5 + 56] = 0\n  3110: u64 [a5 + 48] = 0\n  3113: u64 [s1 + 0xe8] = a3\n  3117: a1 = s1 + 0x7ff\n  3121: a1 = a1 + 0xa1\n  3125: u64 [a5 + 40] = 0x80\n  3130: u64 [s1 + 0xf8] = a0\n  3134: u64 [s1 + 0xe0] = a4\n  3138: ra = 88, jump @19\n      : @124 [@dyn 44] (gas: 41)\n  3143: a0 = u64 [s1 + 0xf8]\n  3147: a0 = a0 + 0x80\n  3151: a1 = u64 [s1 + 0xf8]\n  3155: a1 = a0 <u a1\n  3158: a3 = u64 [s1 + 0xf0]\n  3162: a2 = a3 + a1\n  3165: a3 = a2 <u a3\n  3168: a3 = a1 if a1 == 0\n  3171: a1 = u64 [s1 + 0xe8]\n  3175: a3 = a3 + a1\n  3178: a1 = u64 [s1 + 0xe8]\n  3182: a1 = a3 <u a1\n  3185: a4 = u64 [s1 + 0xe0]\n  3189: a4 = a4 + a1\n  3192: a1 = s1 + 0x1000\n  3196: u64 [a1 + 0xfffffffffffff848] = a2\n  3200: a1 = s1 + 0x1000\n  3204: u64 [a1 + 0xfffffffffffff840] = a0\n  3208: a0 = u64 [s1 + 0xc0]\n  3212: a1 = s1 + 0x7ff\n  3216: a1 = a1 + 0x79\n  3219: u64 [a1] = a0\n  3221: a0 = u64 [s1 + 0xc8]\n  3225: u64 [a1 + 0xfffffffffffffff8] = a0\n  3228: a0 = u64 [s1 + 0xd0]\n  3232: a1 = s1 + 0x1000\n  3236: u64 [a1 + 0xfffffffffffff868] = a0\n  3240: a0 = u64 [s1 + 0xd8]\n  3244: a1 = s1 + 0x1000\n  3248: u64 [a1 + 0xfffffffffffff860] = a0\n  3252: a0 = s1 + 0x1000\n  3256: u64 [a0 + 0xfffffffffffff850] = a3\n  3260: a0 = s1 + 0x7ff\n  3264: a0 = a0 + 0x81\n  3268: a1 = s1 + 0x7ff\n  3272: a1 = a1 + 0x61\n  3275: a2 = s1 + 0x7ff\n  3279: a2 = a2 + 0x41\n  3282: a3 = s1 + 0x1000\n  3286: u64 [a3 + 0xfffffffffffff858] = a4\n  3290: ra = 90, jump @881\n      : @125 [@dyn 45] (gas: 12)\n  3295: a3 = u64 [s1 + 0xe8]\n  3299: t2 = u64 [s1 + 0xe0]\n  3303: a1 = u64 [s1 + 0xf8]\n  3307: a2 = a3 | t2\n  3310: a0 = 0x100000000\n  3320: u64 [s1 + 0xd8] = a0\n  3324: a0 = 0xffffffe0\n  3334: a0 = a1 <u a0\n  3337: a5 = u64 [s1 + 0xf0]\n  3341: a0 = 0 if a5 != 0\n  3343: a0 = 0 if a2 != 0\n  3345: jump @127 if a0 != 0\n      : @126 (gas: 1)\n  3348: jump @609\n      : @127 (gas: 44)\n  3351: a0 = s1 + 0x7ff\n  3355: a0 = a0 + 0x79\n  3358: a4 = u64 [a0 + 0x8]\n  3361: u64 [s1 + 0xd0] = a4\n  3365: t1 = u64 [a0 + 0x10]\n  3368: t0 = u64 [a0 + 0x20]\n  3371: u64 [s1 + 0x60] = t0\n  3374: a0 = u64 [a0 + 0x18]\n  3377: u64 [s1 + 0xc0] = a0\n  3381: ra = a4 <u a1\n  3384: a4 = u64 [s1 + 0xf0]\n  3388: a1 = t1 ^ a4\n  3391: u64 [s1 + 0x50] = a1\n  3394: u64 [s1 + 0xc8] = a2\n  3398: a2 = t1 <u a4\n  3401: u64 [s1 + 0x58] = t1\n  3404: a5 = a4\n  3406: a1 = u64 [s1 + 0x50]\n  3409: a2 = ra if a1 == 0\n  3412: a1 = a0 - a3\n  3415: a3 = a0 <u a3\n  3418: a4 = t0 - t2\n  3421: a4 = a4 - a3\n  3424: a3 = a1 <u a2\n  3427: a4 = a4 - a3\n  3430: a1 = a1 - a2\n  3433: a2 = t1 - a5\n  3436: a2 = a2 - ra\n  3439: a0 = u64 [s1 + 0xf8]\n  3443: a3 = u64 [s1 + 0xd0]\n  3447: a3 = a3 - a0\n  3450: a0 = u64 [s1 + 0xf8]\n  3454: i32 a0 = a0 + 0x20\n  3457: a5 = s1 + 0x1000\n  3461: u64 [a5 + 0xfffffffffffff820] = a3\n  3465: a3 = s1 + 0x1000\n  3469: u64 [a3 + 0xfffffffffffff828] = a2\n  3473: a2 = s1 + 0x1000\n  3477: u64 [a2 + 0xfffffffffffff830] = a1\n  3481: a1 = s1 + 0x7ff\n  3485: a1 = a1 + 0x21\n  3488: a2 = s1 + 0x1000\n  3492: u64 [a2 + 0xfffffffffffff838] = a4\n  3496: ra = 92, jump @19\n      : @128 [@dyn 46] (gas: 22)\n  3501: a0 = u64 [s1 + 0x60]\n  3504: a4 = s1 + 0x700\n  3508: u64 [a4 + 0xd8] = a0\n  3512: a0 = u64 [s1 + 0xc0]\n  3516: u64 [a4 + 0xd0] = a0\n  3520: a0 = u64 [s1 + 0x58]\n  3523: u64 [a4 + 0xc8] = a0\n  3527: a0 = u64 [s1 + 0xd0]\n  3531: u64 [a4 + 0xc0] = a0\n  3535: a0 = u64 [s1 + 0xa0]\n  3539: u64 [a4 + 0xf8] = a0\n  3543: a0 = u64 [s1 + 0xa8]\n  3547: u64 [a4 + 0xf0] = a0\n  3551: a0 = u64 [s1 + 0xb0]\n  3555: u64 [a4 + 0xe8] = a0\n  3559: a0 = s1 + 0x7ff\n  3563: a0 = a0 + 0x1\n  3566: a1 = s1 + 0x7e0\n  3570: a2 = s1 + 0x7c0\n  3574: a3 = u64 [s1 + 0xb8]\n  3578: u64 [a4 + 0xe0] = a3\n  3582: ra = 94, jump @881\n      : @129 [@dyn 47] (gas: 9)\n  3587: a2 = u64 [s1 + 0xc8]\n  3591: a1 = u64 [s1 + 0xf8]\n  3595: a0 = u64 [s1 + 0xd8]\n  3599: a0 = a0 + 0xffffffffffffffc0\n  3602: a0 = a1 <u a0\n  3605: a3 = u64 [s1 + 0xf0]\n  3609: a0 = 0 if a3 != 0\n  3611: a0 = 0 if a2 != 0\n  3613: jump @131 if a0 != 0\n      : @130 (gas: 1)\n  3616: jump @609\n      : @131 (gas: 23)\n  3619: a0 = s1 + 0x1000\n  3623: a0 = u64 [a0 + 0xfffffffffffff818]\n  3627: u64 [s1 + 0xc0] = a0\n  3631: a0 = s1 + 0x1000\n  3635: a0 = u64 [a0 + 0xfffffffffffff810]\n  3639: u64 [s1 + 0xb8] = a0\n  3643: a0 = s1 + 0x1000\n  3647: a0 = u64 [a0 + 0xfffffffffffff808]\n  3651: u64 [s1 + 0xd0] = a0\n  3655: a0 = s1 + 0x1000\n  3659: a0 = u64 [a0 + 0xfffffffffffff800]\n  3663: u64 [s1 + 0xd8] = a0\n  3667: i32 a0 = a1 + 0x40\n  3670: u64 [s1 + 1976] = 0\n  3674: a1 = u64 [s1 + 0x88]\n  3678: a3 = s1 + 0x700\n  3682: u64 [a3 + 0xa0] = a1\n  3686: a1 = u64 [s1 + 0x90]\n  3690: u64 [a3 + 0xa8] = a1\n  3694: a1 = s1 + 0x7a0\n  3698: a2 = u64 [s1 + 0x98]\n  3702: u64 [a3 + 0xb0] = a2\n  3706: ra = 96, jump @19\n      : @132 [@dyn 48] (gas: 8)\n  3711: a2 = u64 [s1 + 0xf8]\n  3715: a0 = 0xffffffa0\n  3725: a0 = a2 <u a0\n  3728: a1 = u64 [s1 + 0xf0]\n  3732: a0 = 0 if a1 != 0\n  3734: a1 = u64 [s1 + 0xc8]\n  3738: a0 = 0 if a1 != 0\n  3740: jump @134 if a0 != 0\n      : @133 (gas: 1)\n  3743: jump @609\n      : @134 (gas: 12)\n  3746: i32 a0 = a2 + 0x60\n  3749: a1 = u64 [s1 + 0x68]\n  3752: a2 = s1 + 0x700\n  3756: u64 [a2 + 0x80] = a1\n  3760: a1 = u64 [s1 + 0x70]\n  3763: u64 [a2 + 0x88] = a1\n  3767: a1 = u64 [s1 + 0x78]\n  3770: u64 [a2 + 0x90] = a1\n  3774: a1 = s1 + 0x780\n  3778: a3 = u64 [s1 + 0x80]\n  3782: u64 [a2 + 0x98] = a3\n  3786: ra = 98, jump @19\n      : @135 [@dyn 49] (gas: 23)\n  3791: t0 = u64 [s1 + 0xd8]\n  3795: ra = u64 [s1 + 0xf8]\n  3799: t1 = t0 <u ra\n  3802: a5 = u64 [s1 + 0xf0]\n  3806: a1 = u64 [s1 + 0xd0]\n  3810: a3 = a1 ^ a5\n  3813: a2 = a1 <u a5\n  3816: a2 = t1 if a3 == 0\n  3819: a3 = u64 [s1 + 0xe8]\n  3823: a4 = u64 [s1 + 0xb8]\n  3827: a0 = a4 - a3\n  3830: t2 = a4 <u a3\n  3833: a4 = u64 [s1 + 0xe0]\n  3837: a3 = u64 [s1 + 0xc0]\n  3841: a4 = a3 - a4\n  3844: a4 = a4 - t2\n  3847: a3 = a0 <u a2\n  3850: a4 = a4 - a3\n  3853: a3 = a0 - a2\n  3856: a2 = a1 - a5\n  3859: a2 = a2 - t1\n  3862: a0 = t0 - ra\n  3865: fallthrough\n      : @136 (gas: 9)\n  3866: a2 = a2 | a4\n  3869: a4 = a0\n  3871: a0 = a0 | a3\n  3874: a0 = a0 | a2\n  3877: a1 = a2 | a3\n  3880: a0 = a0 >> 0x20\n  3883: a1 = a1 << 0x20\n  3886: a0 = a0 | a1\n  3889: jump @138 if a0 == 0\n      : @137 (gas: 1)\n  3892: jump @609\n      : @138 (gas: 4)\n  3895: a0 = u64 [s1 + 0xf8]\n  3899: a1 = a4\n  3901: u64 [s1 + 0xf0] = a4\n  3905: ra = 100, jump @29\n      : @139 [@dyn 50] (gas: 5)\n  3910: i32 a1 = a0 + 0\n  3912: a2 = i32 [s1 + 0xf0]\n  3916: a0 = 0\n  3918: ecalli 8 // 'seal_return'\n  3920: jump @78\n      : @140 (gas: 10)\n  3923: u64 [a2 + 896] = 0\n  3927: u64 [a2 + 888] = 0\n  3931: u64 [a2 + 880] = 0\n  3935: u64 [a2 + 872] = 0\n  3939: a0 = s1 + 0x2000\n  3943: i32 a0 = a0 + 0x3e0\n  3947: ra = 0x66\n  3950: ecalli 11 // 'value_transferred'\n  3952: t0 = 0x68\n  3955: jump @1045\n      : @141 [@dyn 51] (gas: 1)\n  3958: t0 = 104, jump @1045\n      : @142 [@dyn 52] (gas: 8)\n  3963: a0 = u64 [a4 + 0x78]\n  3966: a1 = u64 [a4 + 0x80]\n  3970: a2 = u64 [a4 + 0x70]\n  3973: a3 = u64 [a4 + 0x68]\n  3976: a1 = a1 | a2\n  3979: a0 = a0 | a3\n  3982: a0 = a0 | a1\n  3985: jump @144 if a0 == 0\n      : @143 (gas: 1)\n  3988: jump @745\n      : @144 (gas: 3)\n  3991: a0 = u64 [s1 + 0xf8]\n  3995: a0 = i32 [a0]\n  3997: jump @146 if a0 >u 35\n      : @145 (gas: 1)\n  4001: jump @746\n      : @146 (gas: 6)\n  4004: a0 = s1 + 0x2000\n  4008: i32 a0 = a0 + 0x400\n  4012: a1 = 0x4\n  4015: ra = 0x6a\n  4018: ecalli 1 // 'call_data_load'\n  4020: fallthrough\n      : @147 [@dyn 53] (gas: 4)\n  4021: a4 = s1 + 0x2078\n  4025: a1 = u64 [a4 + 0x398]\n  4029: a0 = u64 [a4 + 0x3a0]\n  4033: t0 = 108, jump @1038\n      : @148 [@dyn 54] (gas: 1)\n  4038: jump @150 if a3 != 0\n      : @149 (gas: 1)\n  4041: jump @747\n      : @150 (gas: 13)\n  4044: a2 = u64 [a4 + 0x390]\n  4048: a3 = u64 [a4 + 0x388]\n  4052: a4 = s1 + 0x7ff\n  4056: a4 = a4 + 0x79\n  4059: a5 = a4 + 0x500\n  4063: u64 [a5 + 0xa8] = a3\n  4067: u64 [a5 + 0xb0] = a2\n  4071: u64 [a5 + 0xb8] = a1\n  4075: a1 = s1 + 0x7ff\n  4079: a1 = a1 + 0x621\n  4083: u64 [a5 + 0xc0] = a0\n  4087: a0 = 0\n  4089: ra = 110, jump @19\n      : @151 [@dyn 55] (gas: 11)\n  4094: a1 = s1 + 0x7ff\n  4098: a1 = a1 + 0x79\n  4101: u64 [a1 + 1440] = 0\n  4105: u64 [a1 + 1432] = 0\n  4109: u64 [a1 + 1416] = 0x2\n  4114: a2 = a1\n  4116: a0 = 0x20\n  4119: a1 = s1 + 0x7ff\n  4123: a1 = a1 + 0x601\n  4127: u64 [a2 + 1424] = 0\n  4131: ra = 112, jump @19\n      : @152 [@dyn 56] (gas: 7)\n  4136: a0 = sp + 0xffffffffffffffe0\n  4139: a0 = a0 & 0xffffffffffffffe0\n  4142: u64 [s1 + 0xf8] = a0\n  4146: sp = a0\n  4148: a2 = 0x20074\n  4153: a0 = i32 [0x20074]\n  4158: jump @154 if a0 >u 63\n      : @153 (gas: 2)\n  4162: u32 [0x20074] = 0x40\n  4168: fallthrough\n      : @154 (gas: 32)\n  4169: u64 [s1 + 0xc0] = a2\n  4173: a0 = sp + 0xffffffffffffffe0\n  4176: a2 = a0 & 0xffffffffffffffe0\n  4179: u64 [s1 + 0xf0] = a2\n  4183: sp = a2\n  4185: a0 = 0x20080\n  4190: i32 a0 = a0 + 0\n  4192: i32 a2 = a2 + 0\n  4194: a1 = 0x40\n  4197: u64 [s1 + 0xb8] = a0\n  4201: ecalli 6 // 'hash_keccak_256'\n  4203: a3 = u64 [s1 + 0xf0]\n  4207: a0 = u64 [a3 + 0x18]\n  4210: a1 = u64 [a3 + 0x10]\n  4213: a2 = u64 [a3 + 0x8]\n  4216: a3 = u64 [a3]\n  4218: a0 = reverse a0\n  4220: a4 = reverse a1\n  4222: a2 = reverse a2\n  4224: a3 = reverse a3\n  4226: u64 [s1 + 0x60] = a3\n  4229: a1 = u64 [s1 + 0xf8]\n  4233: u64 [a1 + 0x18] = a3\n  4236: u64 [s1 + 0xa0] = a2\n  4240: u64 [a1 + 0x10] = a2\n  4243: u64 [s1 + 0xa8] = a4\n  4247: u64 [a1 + 0x8] = a4\n  4250: u64 [s1 + 0xb0] = a0\n  4254: u64 [a1] = a0\n  4256: a0 = s1 + 0x7ff\n  4260: a0 = a0 + 0x5e1\n  4264: ra = 114, jump @21\n      : @155 [@dyn 57] (gas: 20)\n  4269: a4 = s1 + 0x7ff\n  4273: a4 = a4 + 0x79\n  4276: a5 = a4 + 0x500\n  4280: a0 = u64 [a5 + 0x80]\n  4284: a1 = u64 [a5 + 0x78]\n  4287: a2 = u64 [a5 + 0x70]\n  4290: a3 = u64 [a5 + 0x68]\n  4293: u64 [s1 + 0x98] = a0\n  4297: u64 [a5 + 0x40] = a0\n  4300: u64 [s1 + 0x90] = a1\n  4304: u64 [a5 + 0x38] = a1\n  4307: u64 [s1 + 0x88] = a2\n  4311: u64 [a5 + 0x30] = a2\n  4314: a0 = s1 + 0x7ff\n  4318: a0 = a0 + 0x5c1\n  4322: a1 = s1 + 0x7ff\n  4326: a1 = a1 + 0x5a1\n  4330: u64 [s1 + 0x80] = a3\n  4334: u64 [a5 + 0x28] = a3\n  4337: ra = 116, jump @1002\n      : @156 [@dyn 58] (gas: 15)\n  4342: a1 = s1 + 0x7ff\n  4346: a1 = a1 + 0x79\n  4349: a2 = a1 + 0x500\n  4353: a0 = u64 [a2 + 0x48]\n  4356: u64 [s1 + 0xe0] = a0\n  4360: a0 = u64 [a2 + 0x50]\n  4363: u64 [s1 + 0xd8] = a0\n  4367: a0 = u64 [a2 + 0x58]\n  4370: u64 [s1 + 0xd0] = a0\n  4374: a0 = u64 [a2 + 0x60]\n  4377: u64 [s1 + 0xc8] = a0\n  4381: a0 = s1 + 0x7ff\n  4385: a0 = a0 + 0x581\n  4389: a1 = 0x40\n  4392: ra = 118, jump @17\n      : @157 [@dyn 59] (gas: 28)\n  4397: a0 = s1 + 0x7ff\n  4401: a0 = a0 + 0x79\n  4404: a2 = u64 [a0 + 0x520]\n  4408: u64 [s1 + 0xf8] = a2\n  4412: a1 = u64 [a0 + 0x518]\n  4416: u64 [s1 + 0xf0] = a1\n  4420: a4 = u64 [a0 + 0x510]\n  4424: u64 [s1 + 0xe8] = a4\n  4428: a5 = u64 [a0 + 0x508]\n  4432: u64 [s1 + 0x48] = a5\n  4435: a3 = u64 [s1 + 0xc8]\n  4439: u64 [a0 + 0x4e0] = a3\n  4443: a3 = u64 [s1 + 0xd0]\n  4447: u64 [a0 + 0x4d8] = a3\n  4451: a3 = u64 [s1 + 0xd8]\n  4455: u64 [a0 + 0x4d0] = a3\n  4459: a3 = u64 [s1 + 0xe0]\n  4463: u64 [a0 + 0x4c8] = a3\n  4467: u64 [a0 + 0x500] = a2\n  4471: u64 [a0 + 0x4f8] = a1\n  4475: u64 [a0 + 0x4f0] = a4\n  4479: a2 = a0\n  4481: a0 = s1 + 0x7ff\n  4485: a0 = a0 + 0x561\n  4489: a1 = s1 + 0x7ff\n  4493: a1 = a1 + 0x541\n  4497: u64 [a2 + 0x4e8] = a5\n  4501: ra = 120, jump @810\n      : @158 [@dyn 60] (gas: 6)\n  4506: a0 = u64 [s1 + 0x48]\n  4509: a1 = u64 [s1 + 0xf8]\n  4513: a2 = u64 [s1 + 0xe8]\n  4517: a2 = a2 | a1\n  4520: a3 = u64 [s1 + 0xf0]\n  4524: t0 = 122, jump @1034\n      : @159 [@dyn 61] (gas: 1)\n  4529: jump @161 if a1 == 0\n      : @160 (gas: 1)\n  4532: jump @609\n      : @161 (gas: 14)\n  4535: a3 = s1 + 0x7ff\n  4539: a3 = a3 + 0x79\n  4542: a1 = u64 [s1 + 0x80]\n  4546: a4 = a3 + 0x400\n  4550: u64 [a4 + 0xa8] = a1\n  4554: a1 = u64 [s1 + 0x88]\n  4558: u64 [a4 + 0xb0] = a1\n  4562: a1 = u64 [s1 + 0x90]\n  4566: u64 [a4 + 0xb8] = a1\n  4570: a1 = s1 + 0x7ff\n  4574: a1 = a1 + 0x521\n  4578: a2 = u64 [s1 + 0x98]\n  4582: u64 [a4 + 0xc0] = a2\n  4586: ra = 124, jump @19\n      : @162 [@dyn 62] (gas: 30)\n  4591: a1 = u64 [s1 + 0x48]\n  4594: a0 = a1 + 0x20\n  4597: u64 [s1 + 0x78] = a0\n  4600: a0 = a0 <u a1\n  4603: a2 = u64 [s1 + 0xe8]\n  4607: a1 = a2 + a0\n  4610: u64 [s1 + 0x70] = a1\n  4613: a1 = a1 <u a2\n  4616: a1 = a0 if a0 == 0\n  4619: a0 = u64 [s1 + 0xf0]\n  4623: a1 = a1 + a0\n  4626: u64 [s1 + 0x68] = a1\n  4629: a0 = a1 <u a0\n  4632: u64 [s1 + 0xf0] = a0\n  4636: a0 = u64 [s1 + 0x60]\n  4639: a1 = s1 + 0x7ff\n  4643: a1 = a1 + 0x79\n  4646: a2 = a1 + 0x400\n  4650: u64 [a2 + 0xa0] = a0\n  4654: a0 = u64 [s1 + 0xa0]\n  4658: u64 [a2 + 0x98] = a0\n  4662: a0 = u64 [s1 + 0xa8]\n  4666: u64 [a2 + 0x90] = a0\n  4670: a2 = a1\n  4672: a1 = s1 + 0x7ff\n  4676: a1 = a1 + 0x501\n  4680: a0 = u64 [s1 + 0xb0]\n  4684: u64 [a2 + 0x488] = a0\n  4688: a0 = 0\n  4690: ra = 126, jump @19\n      : @163 [@dyn 63] (gas: 3)\n  4695: a2 = u64 [s1 + 0xc0]\n  4699: a0 = i32 [a2]\n  4701: jump @165 if a0 >u 31\n      : @164 (gas: 2)\n  4705: u32 [a2 + 0] = 0x20\n  4708: fallthrough\n      : @165 (gas: 37)\n  4709: a0 = u64 [s1 + 0xf8]\n  4713: a1 = u64 [s1 + 0xf0]\n  4717: a0 = a0 + a1\n  4720: u64 [s1 + 0x60] = a0\n  4723: a0 = sp + 0xffffffffffffffe0\n  4726: a0 = a0 & 0xffffffffffffffe0\n  4729: u64 [s1 + 0xf8] = a0\n  4733: sp = a0\n  4735: i32 a2 = a0 + 0\n  4737: a1 = 0x20\n  4740: a0 = u64 [s1 + 0xb8]\n  4744: ecalli 6 // 'hash_keccak_256'\n  4746: t0 = 0\n  4748: t1 = 0\n  4750: a5 = 0\n  4752: a3 = u64 [s1 + 0xf8]\n  4756: a0 = u64 [a3]\n  4758: a1 = u64 [a3 + 0x8]\n  4761: a2 = u64 [a3 + 0x10]\n  4764: a3 = u64 [a3 + 0x18]\n  4767: a0 = reverse a0\n  4769: u64 [s1 + 0xd0] = a0\n  4773: a0 = reverse a1\n  4775: u64 [s1 + 0xc8] = a0\n  4779: ra = reverse a2\n  4781: a0 = reverse a3\n  4783: a3 = 0\n  4785: u64 [s1 + 0xd8] = a0\n  4789: a0 = u64 [s1 + 0x78]\n  4792: u64 [s1 + 0xe8] = a0\n  4796: a0 = u64 [s1 + 0x70]\n  4799: u64 [s1 + 0xe0] = a0\n  4803: a0 = u64 [s1 + 0x68]\n  4806: u64 [s1 + 0xf0] = a0\n  4810: a0 = u64 [s1 + 0x60]\n  4813: u64 [s1 + 0xf8] = a0\n  4817: fallthrough\n      : @166 (gas: 20)\n  4818: a0 = u64 [s1 + 0x80]\n  4822: a0 = t0 <u a0\n  4825: a2 = u64 [s1 + 0x88]\n  4829: a1 = t1 ^ a2\n  4832: a2 = t1 <u a2\n  4835: a2 = a0 if a1 == 0\n  4838: a4 = u64 [s1 + 0x90]\n  4842: t2 = a3 <u a4\n  4845: a0 = a3\n  4847: a3 = u64 [s1 + 0x98]\n  4851: a1 = a5 ^ a3\n  4854: a3 = a5 <u a3\n  4857: a3 = t2 if a1 == 0\n  4860: u64 [s1 + 0xc0] = a0\n  4864: a0 = a0 ^ a4\n  4867: a0 = a0 | a1\n  4870: a3 = a2 if a0 == 0\n  4873: a2 = s1 + 0x7ff\n  4877: a2 = a2 + 0x79\n  4880: jump @168 if a3 != 0\n      : @167 (gas: 1)\n  4883: jump @593\n      : @168 (gas: 17)\n  4886: u64 [s1 + 0xa8] = a5\n  4890: u64 [s1 + 0xb0] = t1\n  4894: u64 [s1 + 0xb8] = t0\n  4898: a0 = u64 [s1 + 0xd8]\n  4902: a4 = a2 + 0x300\n  4906: u64 [a4 + 0x28] = a0\n  4909: u64 [a2 + 0x330] = ra\n  4913: a0 = u64 [s1 + 0xc8]\n  4917: u64 [a4 + 0x38] = a0\n  4920: a0 = s1 + 0x7ff\n  4924: a0 = a0 + 0x3c1\n  4928: a1 = s1 + 0x7ff\n  4932: a1 = a1 + 0x3a1\n  4936: a3 = u64 [s1 + 0xd0]\n  4940: u64 [a4 + 0x40] = a3\n  4943: u64 [s1 + 0xa0] = ra\n  4947: ra = 128, jump @857\n      : @169 [@dyn 64] (gas: 12)\n  4953: a2 = u64 [s1 + 0xf0]\n  4957: a0 = u64 [s1 + 0xe8]\n  4961: a4 = a0 | a2\n  4964: a3 = u64 [s1 + 0xf8]\n  4968: a5 = u64 [s1 + 0xe0]\n  4972: a1 = a5 | a3\n  4975: a4 = a4 | a1\n  4978: a4 = a4 >> 0x20\n  4981: a1 = a1 | a2\n  4984: a1 = a1 << 0x20\n  4987: a1 = a1 | a4\n  4990: jump @171 if a1 == 0\n      : @170 (gas: 1)\n  4993: jump @609\n      : @171 (gas: 17)\n  4996: a4 = s1 + 0x7ff\n  5000: a4 = a4 + 0x79\n  5003: t0 = u64 [a4 + 0x360]\n  5007: a1 = u64 [a4 + 0x358]\n  5011: u64 [s1 + 0xf0] = a2\n  5015: a2 = u64 [a4 + 0x350]\n  5019: u64 [s1 + 0xf8] = a3\n  5023: a3 = u64 [a4 + 0x348]\n  5027: u64 [a4 + 0x308] = a3\n  5031: u64 [a4 + 0x310] = a2\n  5035: u64 [a4 + 0x318] = a1\n  5039: a1 = s1 + 0x7ff\n  5043: a1 = a1 + 0x381\n  5047: u64 [a4 + 0x320] = t0\n  5051: u64 [s1 + 0xe8] = a0\n  5055: u64 [s1 + 0xe0] = a5\n  5059: ra = 130, jump @19\n      : @172 [@dyn 65] (gas: 45)\n  5065: a0 = u64 [s1 + 0xe8]\n  5069: t2 = a0 + 0x20\n  5072: a2 = t2 <u a0\n  5075: a0 = u64 [s1 + 0xe0]\n  5079: a1 = a0 + a2\n  5082: a3 = a1 <u a0\n  5085: a3 = a2 if a2 == 0\n  5088: a0 = u64 [s1 + 0xf0]\n  5092: a2 = a0 + a3\n  5095: a3 = a2 <u a0\n  5098: a0 = u64 [s1 + 0xf8]\n  5102: a0 = a0 + a3\n  5105: u64 [s1 + 0xf8] = a0\n  5109: a0 = u64 [s1 + 0xd8]\n  5113: a0 = a0 + 0x1\n  5116: a3 = a0 <u 0x1\n  5119: ra = u64 [s1 + 0xa0]\n  5123: ra = ra + a3\n  5126: u64 [s1 + 0xd8] = a0\n  5130: a3 = a0 | ra\n  5133: a3 = a3 <u 0x1\n  5136: a0 = u64 [s1 + 0xc8]\n  5140: a3 = a3 + a0\n  5143: a4 = a3 <u a0\n  5146: a0 = u64 [s1 + 0xd0]\n  5150: a0 = a0 + a4\n  5153: u64 [s1 + 0xd0] = a0\n  5157: t0 = u64 [s1 + 0xb8]\n  5161: t0 = t0 + 0x1\n  5164: a4 = t0 <u 0x1\n  5167: t1 = u64 [s1 + 0xb0]\n  5171: t1 = t1 + a4\n  5174: a4 = t0 | t1\n  5177: a4 = a4 <u 0x1\n  5180: a0 = u64 [s1 + 0xc0]\n  5184: a4 = a4 + a0\n  5187: a5 = a4 <u a0\n  5190: a0 = u64 [s1 + 0xa8]\n  5194: a5 = a5 + a0\n  5197: u64 [s1 + 0xe8] = t2\n  5201: u64 [s1 + 0xe0] = a1\n  5205: u64 [s1 + 0xf0] = a2\n  5209: u64 [s1 + 0xc8] = a3\n  5213: a3 = a4\n  5215: jump @166\n      : @173 (gas: 10)\n  5218: u64 [a2 + 832] = 0\n  5222: u64 [a2 + 824] = 0\n  5226: u64 [a2 + 816] = 0\n  5230: u64 [a2 + 808] = 0\n  5234: a0 = s1 + 0x2000\n  5238: i32 a0 = a0 + 0x3a0\n  5242: ra = 0x84\n  5246: ecalli 11 // 'value_transferred'\n  5248: t0 = 0x86\n  5252: jump @1045\n      : @174 [@dyn 66] (gas: 1)\n  5255: t0 = 134, jump @1045\n      : @175 [@dyn 67] (gas: 1)\n  5261: t0 = 136, jump @1044\n      : @176 [@dyn 68] (gas: 1)\n  5267: jump @178 if a0 == 0\n      : @177 (gas: 1)\n  5270: jump @748\n      : @178 (gas: 15)\n  5273: a0 = u64 [s1 + 0xf8]\n  5277: a0 = u32 [a0]\n  5279: a2 = s1 + 0x7ff\n  5283: a2 = a2 + 0x79\n  5286: u64 [a2 + 704] = 0\n  5290: u64 [a2 + 696] = 0\n  5294: u64 [a2 + 0x2a8] = a0\n  5298: a0 = s1 + 0x7ff\n  5302: a0 = a0 + 0x341\n  5306: a1 = s1 + 0x7ff\n  5310: a1 = a1 + 0x321\n  5314: u64 [a2 + 688] = 0\n  5318: ra = 0x8a\n  5322: t0 = 0x37c\n  5326: jump @1046\n      : @179 [@dyn 69] (gas: 21)\n  5329: a1 = s1 + 0x7ff\n  5333: a1 = a1 + 0x79\n  5336: a2 = a1 + 0x200\n  5340: a0 = u64 [a2 + 0xf8]\n  5344: u64 [s1 + 0xb8] = a0\n  5348: a0 = u64 [a2 + 0xf0]\n  5352: u64 [s1 + 0xa8] = a0\n  5356: a0 = u64 [a2 + 0xe8]\n  5360: u64 [s1 + 0xb0] = a0\n  5364: a0 = u64 [a2 + 0xe0]\n  5368: u64 [s1 + 0xf0] = a0\n  5372: a0 = u64 [a2 + 0xd8]\n  5376: u64 [s1 + 0xe8] = a0\n  5380: a0 = u64 [a2 + 0xd0]\n  5384: u64 [s1 + 0xf8] = a0\n  5388: a0 = u64 [a2 + 0xc8]\n  5392: u64 [s1 + 0xe0] = a0\n  5396: a0 = s1 + 0x7ff\n  5400: a0 = a0 + 0x301\n  5404: a1 = 0x40\n  5407: ra = 140, jump @17\n      : @180 [@dyn 70] (gas: 1)\n  5413: t0 = 142, jump @1018\n      : @181 [@dyn 71] (gas: 1)\n  5419: jump @183 if a0 == 0\n      : @182 (gas: 1)\n  5422: jump @609\n      : @183 (gas: 14)\n  5425: a0 = s1 + 0x7ff\n  5429: a0 = a0 + 0x79\n  5432: a3 = a0 + 0x200\n  5436: a2 = u64 [a3 + 0xa0]\n  5440: u64 [s1 + 0xd0] = a2\n  5444: a2 = u64 [a3 + 0x98]\n  5448: u64 [s1 + 0xc8] = a2\n  5452: a2 = u64 [a3 + 0x90]\n  5456: u64 [s1 + 0xc0] = a2\n  5460: a0 = u64 [a3 + 0x88]\n  5464: u64 [s1 + 0xd8] = a0\n  5468: a0 = s1 + 0x7ff\n  5472: a0 = a0 + 0x2e1\n  5476: ra = 144, jump @17\n      : @184 [@dyn 72] (gas: 1)\n  5482: t0 = 146, jump @1016\n      : @185 [@dyn 73] (gas: 1)\n  5488: jump @187 if a0 == 0\n      : @186 (gas: 1)\n  5491: jump @609\n      : @187 (gas: 1)\n  5494: t0 = 148, jump @1015\n      : @188 [@dyn 74] (gas: 1)\n  5500: jump @190 if a1 != 0\n      : @189 (gas: 1)\n  5503: jump @609\n      : @190 (gas: 15)\n  5506: a0 = s1 + 0x7ff\n  5510: a0 = a0 + 0x79\n  5513: t0 = u64 [a0 + 0x280]\n  5517: a2 = a0 + 0x200\n  5521: a5 = u64 [a2 + 0x78]\n  5524: a1 = u64 [a2 + 0x68]\n  5527: a3 = u64 [a2 + 0x70]\n  5530: a0 = a1 | a5\n  5533: a2 = a3 | t0\n  5536: a0 = a0 | a2\n  5539: a0 = a0 >> 0x20\n  5542: a2 = a2 | a5\n  5545: a2 = a2 << 0x20\n  5548: a0 = a0 | a2\n  5551: jump @192 if a0 == 0\n      : @191 (gas: 1)\n  5554: jump @609\n      : @192 (gas: 8)\n  5557: i32 a0 = a4 + 0x20\n  5560: u64 [s1 + 0xe0] = a0\n  5564: a0 = u64 [s1 + 0xd8]\n  5568: u64 [s1 + 0xf8] = a1\n  5572: u64 [s1 + 0xf0] = a3\n  5576: u64 [s1 + 0xe8] = t0\n  5580: u64 [s1 + 0xa0] = a5\n  5584: ra = 150, jump @29\n      : @193 [@dyn 75] (gas: 4)\n  5590: u64 [s1 + 0x98] = a0\n  5594: a0 = u64 [s1 + 0xe0]\n  5598: a1 = u64 [s1 + 0xf8]\n  5602: ra = 152, jump @29\n      : @194 [@dyn 76] (gas: 4)\n  5608: a1 = a0\n  5610: a0 = u64 [s1 + 0x98]\n  5614: a2 = u64 [s1 + 0xf8]\n  5618: ra = 154, jump @0\n      : @195 [@dyn 77] (gas: 13)\n  5624: t2 = u64 [s1 + 0xa0]\n  5628: t1 = u64 [s1 + 0xe8]\n  5632: t0 = u64 [s1 + 0xf0]\n  5636: a0 = u64 [s1 + 0xd8]\n  5640: a1 = u64 [s1 + 0xf8]\n  5644: a0 = a0 + a1\n  5647: a1 = a0 <u a1\n  5650: a2 = u64 [s1 + 0xc0]\n  5654: a2 = a2 + t0\n  5657: a2 = a2 + a1\n  5660: a3 = a2 ^ t0\n  5663: a4 = a2 <u t0\n  5666: t0 = 156, jump @1013\n      : @196 [@dyn 78] (gas: 1)\n  5672: jump @198 if a1 == 0\n      : @197 (gas: 1)\n  5675: jump @609\n      : @198 (gas: 9)\n  5678: a2 = s1 + 0x7ff\n  5682: a2 = a2 + 0x79\n  5685: u64 [a2 + 608] = 0\n  5689: u64 [a2 + 600] = 0\n  5693: u64 [a2 + 592] = 0\n  5697: a1 = s1 + 0x7ff\n  5701: a1 = a1 + 0x2c1\n  5705: u64 [a2 + 584] = 0\n  5709: ra = 158, jump @19\n      : @199 [@dyn 79] (gas: 3)\n  5715: a0 = u64 [s1 + 0xe8]\n  5719: a1 = u64 [s1 + 0xa0]\n  5723: t0 = 160, jump @1039\n      : @200 [@dyn 80] (gas: 1)\n  5729: jump @202 if a1 != 0\n      : @201 (gas: 1)\n  5732: jump @609\n      : @202 (gas: 4)\n  5735: i32 a1 = a2 + 0x20\n  5738: u64 [s1 + 0xf8] = a1\n  5742: a0 = u64 [s1 + 0xd8]\n  5746: ra = 162, jump @29\n      : @203 [@dyn 81] (gas: 1)\n  5752: t0 = 164, jump @1031\n      : @204 [@dyn 82] (gas: 3)\n  5758: ra = 0xa6\n  5762: ecalli 6 // 'hash_keccak_256'\n  5764: fallthrough\n      : @205 [@dyn 83] (gas: 11)\n  5765: a3 = u64 [s1 + 0xf0]\n  5769: a0 = u64 [a3]\n  5771: a1 = u64 [a3 + 0x8]\n  5774: a2 = u64 [a3 + 0x10]\n  5777: a3 = u64 [a3 + 0x18]\n  5780: a0 = reverse a0\n  5782: a1 = reverse a1\n  5784: a2 = reverse a2\n  5786: a3 = reverse a3\n  5788: a4 = a3 + 0x2\n  5791: t0 = 168, jump @1042\n      : @206 [@dyn 84] (gas: 11)\n  5797: a0 = a0 + a1\n  5800: a1 = s1 + 0x2078\n  5804: a3 = a1 + 0x300\n  5808: u64 [a3 + 0x48] = a4\n  5811: u64 [a3 + 0x50] = a5\n  5814: u64 [a3 + 0x58] = a2\n  5817: u64 [a3 + 0x60] = a0\n  5820: a0 = s1 + 0x7ff\n  5824: a0 = a0 + 0x2a1\n  5828: a1 = s1 + 0x23c0\n  5832: ra = 170, jump @21\n      : @207 [@dyn 85] (gas: 13)\n  5838: a1 = s1 + 0x7ff\n  5842: a1 = a1 + 0x79\n  5845: a2 = a1 + 0x200\n  5849: a0 = u64 [a2 + 0x38]\n  5852: u64 [s1 + 0xf8] = a0\n  5856: a0 = u64 [a2 + 0x30]\n  5859: u64 [s1 + 0xe8] = a0\n  5863: a0 = u64 [a2 + 0x28]\n  5866: u64 [s1 + 0xf0] = a0\n  5870: a0 = s1 + 0x7ff\n  5874: a0 = a0 + 0x281\n  5878: a1 = 0x40\n  5881: ra = 172, jump @17\n      : @208 [@dyn 86] (gas: 15)\n  5887: a3 = s1 + 0x7ff\n  5891: a3 = a3 + 0x79\n  5894: a5 = a3 + 0x200\n  5898: a0 = u64 [a5 + 0x20]\n  5901: a1 = u64 [a5 + 0x18]\n  5904: a2 = u64 [a5 + 0x10]\n  5907: a4 = u64 [a5 + 0x8]\n  5910: a0 = a0 | a2\n  5913: a2 = a4 | a1\n  5916: a2 = a2 | a0\n  5919: a2 = a2 >> 0x20\n  5922: a0 = a0 | a1\n  5925: a0 = a0 << 0x20\n  5928: a0 = a0 | a2\n  5931: jump @210 if a0 == 0\n      : @209 (gas: 1)\n  5934: jump @609\n      : @210 (gas: 21)\n  5937: a0 = u64 [s1 + 0xa8]\n  5941: a1 = u64 [s1 + 0xe8]\n  5945: a0 = a0 ^ a1\n  5948: a1 = u64 [s1 + 0xb0]\n  5952: a2 = u64 [s1 + 0xf0]\n  5956: a1 = a1 ^ a2\n  5959: a2 = u64 [s1 + 0xb8]\n  5963: a5 = u64 [s1 + 0xf8]\n  5967: a2 = a2 ^ a5\n  5970: a2 = a2 << 0x20\n  5973: a2 = a2 >> 0x20\n  5976: a0 = a0 | a1\n  5979: a0 = a0 | a2\n  5982: a0 = a0 <u 0x1\n  5985: u64 [a3 + 512] = 0\n  5989: u64 [a3 + 504] = 0\n  5993: u64 [a3 + 0x1e8] = a0\n  5997: a1 = s1 + 0x7ff\n  6001: a1 = a1 + 0x261\n  6005: u64 [a3 + 496] = 0\n  6009: jump @75\n      : @211 (gas: 8)\n  6012: u64 [a2 + 1312] = 0\n  6016: u64 [a2 + 1304] = 0\n  6020: u64 [a2 + 1296] = 0\n  6024: u64 [a2 + 1288] = 0\n  6028: a0 = s1 + 0x2000\n  6032: i32 a0 = a0 + 0x580\n  6036: ecalli 11 // 'value_transferred'\n  6038: fallthrough\n      : @212 (gas: 10)\n  6039: a3 = s1 + 0x2078\n  6043: a4 = a3 + 0x500\n  6047: a0 = u64 [a4 + 0x18]\n  6050: a1 = u64 [a4 + 0x20]\n  6053: a2 = u64 [a4 + 0x10]\n  6056: a3 = u64 [a4 + 0x8]\n  6059: a1 = a1 | a2\n  6062: a0 = a0 | a3\n  6065: a0 = a0 | a1\n  6068: jump @214 if a0 == 0\n      : @213 (gas: 1)\n  6071: jump @749\n      : @214 (gas: 12)\n  6074: a0 = u64 [s1 + 0xf8]\n  6078: a0 = u32 [a0]\n  6080: a2 = s1 + 0x1878\n  6084: u64 [a2 + 928] = 0\n  6088: u64 [a2 + 920] = 0\n  6092: u64 [a2 + 0x388] = a0\n  6096: a0 = s1 + 0x1c20\n  6100: a1 = s1 + 0x1c00\n  6104: u64 [a2 + 912] = 0\n  6108: ra = 0xae\n  6112: t0 = 0x37c\n  6116: jump @1046\n      : @215 [@dyn 87] (gas: 3)\n  6119: t0 = 0xb0\n  6123: a1 = s1 + 0x1878\n  6127: fallthrough\n      : @216 [@dyn 88] (gas: 18)\n  6128: a2 = a1 + 0x300\n  6132: a0 = u64 [a2 + 0xd8]\n  6136: u64 [s1 + 0xa8] = a0\n  6140: a0 = u64 [a2 + 0xd0]\n  6144: u64 [s1 + 0xb0] = a0\n  6148: a0 = u64 [a2 + 0xc8]\n  6152: u64 [s1 + 0xb8] = a0\n  6156: a0 = u64 [a2 + 0xb8]\n  6160: u64 [s1 + 0xf0] = a0\n  6164: a0 = u64 [a2 + 0xa8]\n  6168: u64 [s1 + 0xf8] = a0\n  6172: a0 = u64 [a2 + 0xc0]\n  6176: u64 [s1 + 0xe0] = a0\n  6180: a0 = u64 [a2 + 0xb0]\n  6184: u64 [s1 + 0xe8] = a0\n  6188: a0 = s1 + 0x1be0\n  6192: a1 = 0x40\n  6195: ra = 178, jump @17\n      : @217 [@dyn 89] (gas: 12)\n  6201: a1 = u64 [s1 + 0xf8]\n  6205: a0 = u64 [s1 + 0xe0]\n  6209: a2 = u64 [s1 + 0xe8]\n  6213: a0 = a0 | a2\n  6216: a3 = u64 [s1 + 0xf0]\n  6220: a2 = a1 | a3\n  6223: a2 = a2 | a0\n  6226: a2 = a2 >> 0x20\n  6229: a0 = a0 | a3\n  6232: a0 = a0 << 0x20\n  6235: a0 = a0 | a2\n  6238: jump @219 if a0 == 0\n      : @218 (gas: 1)\n  6241: jump @609\n      : @219 (gas: 12)\n  6244: a0 = s1 + 0x1878\n  6248: a3 = a0 + 0x300\n  6252: a2 = u64 [a3 + 0x80]\n  6256: u64 [s1 + 0xd0] = a2\n  6260: a2 = u64 [a3 + 0x78]\n  6263: u64 [s1 + 0xc8] = a2\n  6267: a2 = u64 [a3 + 0x70]\n  6270: u64 [s1 + 0xc0] = a2\n  6274: a0 = u64 [a3 + 0x68]\n  6277: u64 [s1 + 0xd8] = a0\n  6281: a0 = s1 + 0x1bc0\n  6285: ra = 180, jump @17\n      : @220 [@dyn 90] (gas: 1)\n  6291: t0 = 182, jump @1016\n      : @221 [@dyn 91] (gas: 1)\n  6297: jump @223 if a0 == 0\n      : @222 (gas: 1)\n  6300: jump @609\n      : @223 (gas: 10)\n  6303: a0 = u64 [s1 + 0xf0]\n  6307: a1 = u64 [s1 + 0xe0]\n  6311: a0 = a0 | a1\n  6314: a1 = 0xffffffe0\n  6324: a3 = u64 [s1 + 0xf8]\n  6328: a1 = a3 <u a1\n  6331: a2 = u64 [s1 + 0xe8]\n  6335: a1 = 0 if a2 != 0\n  6337: a1 = 0 if a0 != 0\n  6339: jump @225 if a1 != 0\n      : @224 (gas: 1)\n  6342: jump @609\n      : @225 (gas: 15)\n  6345: a2 = a3\n  6347: a0 = s1 + 0x1878\n  6351: t0 = u64 [a0 + 0x360]\n  6355: a3 = a0 + 0x300\n  6359: a5 = u64 [a3 + 0x58]\n  6362: a1 = u64 [a3 + 0x48]\n  6365: a4 = u64 [a3 + 0x50]\n  6368: a0 = a1 | a5\n  6371: a3 = a4 | t0\n  6374: a0 = a0 | a3\n  6377: a0 = a0 >> 0x20\n  6380: a3 = a3 | a5\n  6383: a3 = a3 << 0x20\n  6386: a0 = a0 | a3\n  6389: jump @227 if a0 == 0\n      : @226 (gas: 1)\n  6392: jump @609\n      : @227 (gas: 8)\n  6395: i32 a0 = a2 + 0x20\n  6398: u64 [s1 + 0x80] = a0\n  6402: a0 = u64 [s1 + 0xd8]\n  6406: u64 [s1 + 0xa0] = a1\n  6410: u64 [s1 + 0x98] = a4\n  6414: u64 [s1 + 0x90] = t0\n  6418: u64 [s1 + 0x88] = a5\n  6422: ra = 184, jump @29\n      : @228 [@dyn 92] (gas: 4)\n  6428: u64 [s1 + 0x78] = a0\n  6431: a0 = u64 [s1 + 0x80]\n  6435: a1 = u64 [s1 + 0xa0]\n  6439: ra = 186, jump @29\n      : @229 [@dyn 93] (gas: 4)\n  6445: a1 = a0\n  6447: a0 = u64 [s1 + 0x78]\n  6450: a2 = u64 [s1 + 0xa0]\n  6454: ra = 188, jump @0\n      : @230 [@dyn 94] (gas: 13)\n  6460: t2 = u64 [s1 + 0x88]\n  6464: t1 = u64 [s1 + 0x90]\n  6468: t0 = u64 [s1 + 0x98]\n  6472: a0 = u64 [s1 + 0xd8]\n  6476: a1 = u64 [s1 + 0xa0]\n  6480: a0 = a0 + a1\n  6483: a1 = a0 <u a1\n  6486: a2 = u64 [s1 + 0xc0]\n  6490: a2 = a2 + t0\n  6493: a2 = a2 + a1\n  6496: a3 = a2 ^ t0\n  6499: a4 = a2 <u t0\n  6502: t0 = 190, jump @1013\n      : @231 [@dyn 95] (gas: 1)\n  6508: jump @233 if a1 == 0\n      : @232 (gas: 1)\n  6511: jump @609\n      : @233 (gas: 3)\n  6514: t0 = 0xc0\n  6518: a2 = s1 + 0x1878\n  6522: fallthrough\n      : @234 [@dyn 96] (gas: 6)\n  6523: u64 [a2 + 832] = 0\n  6527: u64 [a2 + 824] = 0\n  6531: u64 [a2 + 816] = 0\n  6535: a1 = s1 + 0x1ba0\n  6539: u64 [a2 + 808] = 0\n  6543: ra = 194, jump @19\n      : @235 [@dyn 97] (gas: 13)\n  6549: a0 = sp + 0xffffffffffffffe0\n  6552: a3 = a0 & 0xffffffffffffffe0\n  6555: sp = a3\n  6557: a0 = u64 [s1 + 0x90]\n  6561: a1 = u64 [s1 + 0x88]\n  6565: a0 = a0 | a1\n  6568: a1 = 0xffffffe0\n  6578: a2 = u64 [s1 + 0xa0]\n  6582: a1 = a2 <u a1\n  6585: a4 = u64 [s1 + 0x98]\n  6589: a1 = 0 if a4 != 0\n  6591: a1 = 0 if a0 != 0\n  6593: jump @237 if a1 != 0\n      : @236 (gas: 1)\n  6596: jump @609\n      : @237 (gas: 5)\n  6599: i32 a1 = a2 + 0x20\n  6602: u64 [s1 + 0xd0] = a1\n  6606: a0 = u64 [s1 + 0xd8]\n  6610: u64 [s1 + 0xd8] = a3\n  6614: ra = 196, jump @29\n      : @238 [@dyn 98] (gas: 29)\n  6620: a1 = sp + 0xffffffffffffffe0\n  6623: a1 = a1 & 0xffffffffffffffe0\n  6626: u64 [s1 + 0xc8] = a1\n  6630: sp = a1\n  6632: i32 a0 = a0 + 0\n  6634: i32 a2 = a1 + 0\n  6636: a1 = u64 [s1 + 0xd0]\n  6640: ecalli 6 // 'hash_keccak_256'\n  6642: a3 = u64 [s1 + 0xc8]\n  6646: a0 = u64 [a3 + 0x18]\n  6649: a1 = u64 [a3 + 0x10]\n  6652: a2 = u64 [a3 + 0x8]\n  6655: a3 = u64 [a3]\n  6657: a5 = reverse a0\n  6659: a4 = reverse a1\n  6661: a0 = reverse a2\n  6663: a1 = reverse a3\n  6665: u64 [s1 + 0xc8] = a1\n  6669: a2 = u64 [s1 + 0xd8]\n  6673: u64 [a2 + 0x18] = a1\n  6676: u64 [s1 + 0xd0] = a0\n  6680: u64 [a2 + 0x10] = a0\n  6683: u64 [s1 + 0xc0] = a4\n  6687: u64 [a2 + 0x8] = a4\n  6690: u64 [s1 + 0xa0] = a5\n  6694: u64 [a2] = a5\n  6696: a1 = a2\n  6698: a0 = s1 + 0x1b80\n  6702: ra = 198, jump @21\n      : @239 [@dyn 99] (gas: 14)\n  6708: a4 = s1 + 0x1878\n  6712: a5 = a4 + 0x300\n  6716: a2 = u64 [a5 + 0x8]\n  6719: a0 = u64 [a5 + 0x10]\n  6722: a1 = u64 [a5 + 0x18]\n  6725: a3 = u64 [a5 + 0x20]\n  6728: a5 = a4 + 0x200\n  6732: u64 [a5 + 0xe0] = a3\n  6736: u64 [a5 + 0xd8] = a1\n  6740: u64 [a5 + 0xd0] = a0\n  6744: a0 = s1 + 0x1b60\n  6748: a1 = s1 + 0x1b40\n  6752: u64 [a5 + 0xc8] = a2\n  6756: ra = 200, jump @848\n      : @240 [@dyn 100] (gas: 10)\n  6762: a3 = s1 + 0x1878\n  6766: a4 = a3 + 0x200\n  6770: a0 = u64 [a4 + 0xf8]\n  6774: a1 = u64 [a3 + 0x300]\n  6778: a2 = u64 [a4 + 0xf0]\n  6782: a3 = u64 [a4 + 0xe8]\n  6786: a1 = a1 | a2\n  6789: a0 = a0 | a3\n  6792: a0 = a0 | a1\n  6795: jump @242 if a0 == 0\n      : @241 (gas: 1)\n  6798: jump @610\n      : @242 (gas: 3)\n  6801: a0 = s1 + 0x1580\n  6805: a1 = 0x40\n  6808: ra = 202, jump @17\n      : @243 [@dyn 101] (gas: 16)\n  6814: a2 = s1 + 0x1078\n  6818: a5 = a2 + 0x500\n  6822: a3 = u64 [a5 + 0x20]\n  6825: a4 = u64 [a5 + 0x18]\n  6828: a0 = u64 [a5 + 0x10]\n  6831: a1 = u64 [a5 + 0x8]\n  6834: u64 [s1 + 0xf0] = a0\n  6838: a0 = a0 | a3\n  6841: u64 [s1 + 0xf8] = a1\n  6845: a1 = a1 | a4\n  6848: a1 = a1 | a0\n  6851: a1 = a1 >> 0x20\n  6854: a0 = a0 | a4\n  6857: a0 = a0 << 0x20\n  6860: a0 = a0 | a1\n  6863: jump @245 if a0 == 0\n      : @244 (gas: 1)\n  6866: jump @609\n      : @245 (gas: 10)\n  6869: u64 [a2 + 1272] = 0\n  6873: u64 [a2 + 1264] = 0\n  6877: u64 [a2 + 1256] = 0\n  6881: a0 = 0x8c379a000000000\n  6891: a1 = s1 + 0x1560\n  6895: u64 [a2 + 0x500] = a0\n  6899: a0 = u64 [s1 + 0xf8]\n  6903: u64 [s1 + 0xe8] = a3\n  6907: u64 [s1 + 0xe0] = a4\n  6911: ra = 204, jump @19\n      : @246 [@dyn 102] (gas: 12)\n  6917: a0 = u64 [s1 + 0xe8]\n  6921: a2 = u64 [s1 + 0xe0]\n  6925: a2 = a2 | a0\n  6928: a3 = 0x100000000\n  6938: a0 = 0xfffffffc\n  6948: a1 = u64 [s1 + 0xf8]\n  6952: a0 = a1 <u a0\n  6955: a1 = u64 [s1 + 0xf0]\n  6959: a0 = 0 if a1 != 0\n  6961: u64 [s1 + 0xe8] = a2\n  6965: a0 = 0 if a2 != 0\n  6967: jump @248 if a0 != 0\n      : @247 (gas: 1)\n  6970: jump @609\n      : @248 (gas: 10)\n  6973: a0 = u64 [s1 + 0xf8]\n  6977: i32 a0 = a0 + 0x4\n  6980: a2 = s1 + 0x1078\n  6984: u64 [a2 + 1248] = 0\n  6988: u64 [a2 + 1240] = 0\n  6992: u64 [a2 + 1224] = 0x20\n  6997: a1 = s1 + 0x1540\n  7001: u64 [a2 + 1232] = 0\n  7005: u64 [s1 + 0xe0] = a3\n  7009: ra = 206, jump @19\n      : @249 [@dyn 103] (gas: 3)\n  7015: a0 = u64 [s1 + 0xe0]\n  7019: a0 = a0 + 0xffffffffffffffdc\n  7022: t0 = 208, jump @1020\n      : @250 [@dyn 104] (gas: 1)\n  7028: jump @252 if a0 != 0\n      : @251 (gas: 1)\n  7031: jump @609\n      : @252 (gas: 9)\n  7034: a0 = u64 [s1 + 0xf8]\n  7038: i32 a0 = a0 + 0x24\n  7041: a2 = s1 + 0x1078\n  7045: u64 [a2 + 1216] = 0\n  7049: u64 [a2 + 1208] = 0\n  7053: u64 [a2 + 1192] = 0xe\n  7058: a1 = s1 + 0x1520\n  7062: u64 [a2 + 1200] = 0\n  7066: ra = 210, jump @19\n      : @253 [@dyn 105] (gas: 2)\n  7072: a0 = 0xffffffbc\n  7082: t0 = 212, jump @1020\n      : @254 [@dyn 106] (gas: 1)\n  7088: jump @256 if a0 != 0\n      : @255 (gas: 1)\n  7091: jump @609\n      : @256 (gas: 12)\n  7094: a0 = u64 [s1 + 0xf8]\n  7098: i32 a0 = a0 + 0x44\n  7101: a1 = u64 [0x20040]\n  7106: a2 = s1 + 0x1078\n  7110: u64 [a2 + 1168] = 0\n  7114: u64 [a2 + 0x4a0] = a1\n  7118: a1 = 0x20666f756e640000\n  7128: u64 [a2 + 0x498] = a1\n  7132: a1 = s1 + 0x1500\n  7136: u64 [a2 + 1160] = 0\n  7140: ra = 0x286\n  7144: jump @19\n      : @257 (gas: 1)\n  7147: jump @259 if a0 == 2066532988\n      : @258 (gas: 1)\n  7154: jump @738\n      : @259 (gas: 10)\n  7157: u64 [a2 + 1024] = 0\n  7161: u64 [a2 + 1016] = 0\n  7165: u64 [a2 + 1008] = 0\n  7169: u64 [a2 + 1000] = 0\n  7173: a0 = s1 + 0x2000\n  7177: i32 a0 = a0 + 0x460\n  7181: ra = 0xd6\n  7185: ecalli 11 // 'value_transferred'\n  7187: t0 = 0xd8\n  7191: jump @1045\n      : @260 [@dyn 107] (gas: 1)\n  7194: t0 = 216, jump @1045\n      : @261 [@dyn 108] (gas: 8)\n  7200: a0 = u64 [a4 + 0xf8]\n  7204: a1 = u64 [a3 + 0x400]\n  7208: a2 = u64 [a4 + 0xf0]\n  7212: a3 = u64 [a4 + 0xe8]\n  7216: a1 = a1 | a2\n  7219: a0 = a0 | a3\n  7222: a0 = a0 | a1\n  7225: jump @263 if a0 == 0\n      : @262 (gas: 1)\n  7228: jump @750\n      : @263 (gas: 3)\n  7231: a0 = u64 [s1 + 0xf8]\n  7235: a0 = i32 [a0]\n  7237: jump @265 if a0 >u 35\n      : @264 (gas: 1)\n  7241: jump @751\n      : @265 (gas: 6)\n  7244: a0 = s1 + 0x2000\n  7248: i32 a0 = a0 + 0x480\n  7252: a1 = 0x4\n  7255: ra = 0xda\n  7259: ecalli 1 // 'call_data_load'\n  7261: fallthrough\n      : @266 [@dyn 109] (gas: 6)\n  7262: a5 = s1 + 0x2078\n  7266: a3 = a5 + 0x400\n  7270: a0 = u64 [a3 + 0x20]\n  7273: a1 = u64 [a3 + 0x18]\n  7276: a2 = u64 [a3 + 0x10]\n  7279: t0 = 220, jump @1027\n      : @267 [@dyn 110] (gas: 1)\n  7285: jump @269 if a4 != 0\n      : @268 (gas: 1)\n  7288: jump @752\n      : @269 (gas: 26)\n  7291: a3 = u64 [a5 + 0x408]\n  7295: a4 = u64 [s1 + 0xf8]\n  7299: t0 = u32 [a4]\n  7301: a5 = a3 + 0x4\n  7304: a3 = a5 <u a3\n  7307: a4 = a2 + a3\n  7310: a2 = a4 <u a2\n  7313: a2 = a3 if a3 == 0\n  7316: a2 = a2 + a1\n  7319: a1 = a2 <u a1\n  7322: a3 = a0 + a1\n  7325: a0 = s1 + 0x1078\n  7329: u64 [a0 + 512] = 0\n  7333: u64 [a0 + 504] = 0\n  7337: u64 [a0 + 496] = 0\n  7341: u64 [a0 + 0x1e8] = t0\n  7345: a1 = a0 + 0x200\n  7349: u64 [a1 + 0x8] = a5\n  7352: u64 [a1 + 0x10] = a4\n  7355: u64 [a1 + 0x18] = a2\n  7358: a4 = a0\n  7360: a0 = s1 + 0x12a0\n  7364: a1 = s1 + 0x1280\n  7368: a2 = s1 + 0x1260\n  7372: u64 [a4 + 0x220] = a3\n  7376: ra = 222, jump @820\n      : @270 [@dyn 111] (gas: 13)\n  7382: a0 = s1 + 0x1078\n  7386: a2 = a0 + 0x200\n  7390: a1 = u64 [a2 + 0x40]\n  7393: u64 [s1 + 0xf0] = a1\n  7397: a1 = u64 [a2 + 0x38]\n  7400: u64 [s1 + 0xe8] = a1\n  7404: a1 = u64 [a2 + 0x30]\n  7407: u64 [s1 + 0xf8] = a1\n  7411: a0 = u64 [a2 + 0x28]\n  7414: u64 [s1 + 0xe0] = a0\n  7418: a0 = s1 + 0x1240\n  7422: a1 = 0x40\n  7425: ra = 224, jump @17\n      : @271 [@dyn 112] (gas: 1)\n  7431: t0 = 226, jump @1018\n      : @272 [@dyn 113] (gas: 1)\n  7437: jump @274 if a0 == 0\n      : @273 (gas: 1)\n  7440: jump @609\n      : @274 (gas: 12)\n  7443: a0 = s1 + 0x1078\n  7447: a3 = a0 + 0x100\n  7451: a2 = u64 [a3 + 0xe0]\n  7455: u64 [s1 + 0xd0] = a2\n  7459: a2 = u64 [a3 + 0xd8]\n  7463: u64 [s1 + 0xc8] = a2\n  7467: a2 = u64 [a3 + 0xd0]\n  7471: u64 [s1 + 0xc0] = a2\n  7475: a0 = u64 [a3 + 0xc8]\n  7479: u64 [s1 + 0xd8] = a0\n  7483: a0 = s1 + 0x1220\n  7487: ra = 228, jump @17\n      : @275 [@dyn 114] (gas: 1)\n  7493: t0 = 230, jump @1016\n      : @276 [@dyn 115] (gas: 1)\n  7499: jump @278 if a0 == 0\n      : @277 (gas: 1)\n  7502: jump @609\n      : @278 (gas: 1)\n  7505: t0 = 232, jump @1015\n      : @279 [@dyn 116] (gas: 1)\n  7511: jump @281 if a1 != 0\n      : @280 (gas: 1)\n  7514: jump @609\n      : @281 (gas: 14)\n  7517: a0 = s1 + 0x1078\n  7521: t0 = u64 [a0 + 0x1c0]\n  7525: a2 = a0 + 0x100\n  7529: a5 = u64 [a2 + 0xb8]\n  7533: a1 = u64 [a2 + 0xa8]\n  7537: a3 = u64 [a2 + 0xb0]\n  7541: a0 = a1 | a5\n  7544: a2 = a3 | t0\n  7547: a0 = a0 | a2\n  7550: a0 = a0 >> 0x20\n  7553: a2 = a2 | a5\n  7556: a2 = a2 << 0x20\n  7559: a0 = a0 | a2\n  7562: jump @283 if a0 == 0\n      : @282 (gas: 1)\n  7565: jump @609\n      : @283 (gas: 8)\n  7568: i32 a0 = a4 + 0x20\n  7571: u64 [s1 + 0xe0] = a0\n  7575: a0 = u64 [s1 + 0xd8]\n  7579: u64 [s1 + 0xf8] = a1\n  7583: u64 [s1 + 0xf0] = a3\n  7587: u64 [s1 + 0xe8] = t0\n  7591: u64 [s1 + 0xb8] = a5\n  7595: ra = 234, jump @29\n      : @284 [@dyn 117] (gas: 4)\n  7601: u64 [s1 + 0xb0] = a0\n  7605: a0 = u64 [s1 + 0xe0]\n  7609: a1 = u64 [s1 + 0xf8]\n  7613: ra = 236, jump @29\n      : @285 [@dyn 118] (gas: 4)\n  7619: a1 = a0\n  7621: a0 = u64 [s1 + 0xb0]\n  7625: a2 = u64 [s1 + 0xf8]\n  7629: ra = 238, jump @0\n      : @286 [@dyn 119] (gas: 13)\n  7635: t2 = u64 [s1 + 0xb8]\n  7639: t1 = u64 [s1 + 0xe8]\n  7643: t0 = u64 [s1 + 0xf0]\n  7647: a0 = u64 [s1 + 0xd8]\n  7651: a1 = u64 [s1 + 0xf8]\n  7655: a0 = a0 + a1\n  7658: a1 = a0 <u a1\n  7661: a2 = u64 [s1 + 0xc0]\n  7665: a2 = a2 + t0\n  7668: a2 = a2 + a1\n  7671: a3 = a2 ^ t0\n  7674: a4 = a2 <u t0\n  7677: t0 = 240, jump @1013\n      : @287 [@dyn 120] (gas: 1)\n  7683: jump @289 if a1 == 0\n      : @288 (gas: 1)\n  7686: jump @609\n      : @289 (gas: 7)\n  7689: a2 = s1 + 0x1078\n  7693: u64 [a2 + 416] = 0\n  7697: u64 [a2 + 408] = 0\n  7701: u64 [a2 + 400] = 0\n  7705: a1 = s1 + 0x1200\n  7709: u64 [a2 + 392] = 0x1\n  7714: ra = 242, jump @19\n      : @290 [@dyn 121] (gas: 6)\n  7720: a0 = sp + 0xffffffffffffffe0\n  7723: a3 = a0 & 0xffffffffffffffe0\n  7726: sp = a3\n  7728: a0 = u64 [s1 + 0xe8]\n  7732: a1 = u64 [s1 + 0xb8]\n  7736: t0 = 244, jump @1040\n      : @291 [@dyn 122] (gas: 1)\n  7742: jump @293 if a1 != 0\n      : @292 (gas: 1)\n  7745: jump @609\n      : @293 (gas: 5)\n  7748: i32 a1 = a2 + 0x20\n  7751: u64 [s1 + 0xf0] = a1\n  7755: a0 = u64 [s1 + 0xd8]\n  7759: u64 [s1 + 0xf8] = a3\n  7763: ra = 246, jump @29\n      : @294 [@dyn 123] (gas: 12)\n  7769: a1 = sp + 0xffffffffffffffe0\n  7772: a1 = a1 & 0xffffffffffffffe0\n  7775: u64 [s1 + 0xe8] = a1\n  7779: sp = a1\n  7781: i32 a0 = a0 + 0\n  7783: i32 a2 = a1 + 0\n  7785: a1 = u64 [s1 + 0xf0]\n  7789: ra = 0xf8\n  7793: ecalli 6 // 'hash_keccak_256'\n  7795: a3 = u64 [s1 + 0xe8]\n  7799: t0 = 0xfa\n  7803: jump @1017\n      : @295 [@dyn 124] (gas: 2)\n  7806: a3 = u64 [s1 + 0xe8]\n  7810: t0 = 250, jump @1017\n      : @296 [@dyn 125] (gas: 12)\n  7816: u64 [s1 + 0xa8] = a3\n  7820: a4 = u64 [s1 + 0xf8]\n  7824: u64 [a4 + 0x18] = a3\n  7827: u64 [s1 + 0xb0] = a2\n  7831: u64 [a4 + 0x10] = a2\n  7834: u64 [s1 + 0xb8] = a1\n  7838: u64 [a4 + 0x8] = a1\n  7841: u64 [s1 + 0xc0] = a0\n  7845: u64 [a4] = a0\n  7847: a1 = a4\n  7849: a0 = s1 + 0x11e0\n  7853: ra = 252, jump @21\n      : @297 [@dyn 126] (gas: 17)\n  7859: a4 = s1 + 0x1078\n  7863: a5 = a4 + 0x100\n  7867: a0 = u64 [a5 + 0x80]\n  7871: a1 = u64 [a5 + 0x78]\n  7874: a2 = u64 [a5 + 0x70]\n  7877: a3 = u64 [a5 + 0x68]\n  7880: u64 [s1 + 0x58] = a0\n  7883: u64 [a5 + 0x40] = a0\n  7886: u64 [s1 + 0x50] = a1\n  7889: u64 [a5 + 0x38] = a1\n  7892: u64 [s1 + 0x48] = a2\n  7895: u64 [a5 + 0x30] = a2\n  7898: a0 = s1 + 0x11c0\n  7902: a1 = s1 + 0x11a0\n  7906: u64 [s1 + 0x40] = a3\n  7909: u64 [a5 + 0x28] = a3\n  7912: ra = 254, jump @1002\n      : @298 [@dyn 127] (gas: 3)\n  7918: t0 = 0x100\n  7922: a1 = s1 + 0x1078\n  7926: fallthrough\n      : @299 [@dyn 128] (gas: 12)\n  7927: a2 = a1 + 0x100\n  7931: a0 = u64 [a2 + 0x48]\n  7934: u64 [s1 + 0xe0] = a0\n  7938: a0 = u64 [a2 + 0x50]\n  7941: u64 [s1 + 0xd8] = a0\n  7945: a0 = u64 [a2 + 0x58]\n  7948: u64 [s1 + 0xd0] = a0\n  7952: a0 = u64 [a2 + 0x60]\n  7955: u64 [s1 + 0xc8] = a0\n  7959: a0 = s1 + 0x1180\n  7963: a1 = 0x40\n  7966: ra = 258, jump @17\n      : @300 [@dyn 129] (gas: 25)\n  7972: a0 = s1 + 0x1078\n  7976: a2 = u64 [a0 + 0x120]\n  7980: u64 [s1 + 0xf8] = a2\n  7984: a1 = u64 [a0 + 0x118]\n  7988: u64 [s1 + 0xf0] = a1\n  7992: a4 = u64 [a0 + 0x110]\n  7996: u64 [s1 + 0xe8] = a4\n  8000: a5 = u64 [a0 + 0x108]\n  8004: u64 [s1 + 0x8] = a5\n  8007: a3 = u64 [s1 + 0xc8]\n  8011: u64 [a0 + 0xe0] = a3\n  8015: a3 = u64 [s1 + 0xd0]\n  8019: u64 [a0 + 0xd8] = a3\n  8023: a3 = u64 [s1 + 0xd8]\n  8027: u64 [a0 + 0xd0] = a3\n  8031: a3 = u64 [s1 + 0xe0]\n  8035: u64 [a0 + 0xc8] = a3\n  8039: u64 [a0 + 0x100] = a2\n  8043: u64 [a0 + 0xf8] = a1\n  8047: u64 [a0 + 0xf0] = a4\n  8051: a2 = a0\n  8053: a0 = s1 + 0x1160\n  8057: a1 = s1 + 0x1140\n  8061: u64 [a2 + 0xe8] = a5\n  8065: ra = 260, jump @810\n      : @301 [@dyn 130] (gas: 6)\n  8071: a0 = u64 [s1 + 0x8]\n  8074: a1 = u64 [s1 + 0xf8]\n  8078: a2 = u64 [s1 + 0xe8]\n  8082: a2 = a2 | a1\n  8085: a3 = u64 [s1 + 0xf0]\n  8089: t0 = 262, jump @1034\n      : @302 [@dyn 131] (gas: 1)\n  8095: jump @304 if a1 == 0\n      : @303 (gas: 1)\n  8098: jump @609\n      : @304 (gas: 11)\n  8101: a3 = s1 + 0x1078\n  8105: a1 = u64 [s1 + 0x40]\n  8108: u64 [a3 + 0xa8] = a1\n  8112: a1 = u64 [s1 + 0x48]\n  8115: u64 [a3 + 0xb0] = a1\n  8119: a1 = u64 [s1 + 0x50]\n  8122: u64 [a3 + 0xb8] = a1\n  8126: a1 = s1 + 0x1120\n  8130: a2 = u64 [s1 + 0x58]\n  8133: u64 [a3 + 0xc0] = a2\n  8137: ra = 264, jump @19\n      : @305 [@dyn 132] (gas: 27)\n  8143: a1 = u64 [s1 + 0x8]\n  8146: a0 = a1 + 0x20\n  8149: u64 [s1 + 0x10] = a0\n  8152: a0 = a0 <u a1\n  8155: a2 = u64 [s1 + 0xe8]\n  8159: a1 = a2 + a0\n  8162: u64 [s1 + 0x28] = a1\n  8165: a1 = a1 <u a2\n  8168: a1 = a0 if a0 == 0\n  8171: a0 = u64 [s1 + 0xf0]\n  8175: a1 = a1 + a0\n  8178: u64 [s1 + 0x20] = a1\n  8181: a0 = a1 <u a0\n  8184: u64 [s1 + 0xf0] = a0\n  8188: a0 = u64 [s1 + 0xa8]\n  8192: a1 = s1 + 0x1078\n  8196: u64 [a1 + 0xa0] = a0\n  8200: a0 = u64 [s1 + 0xb0]\n  8204: u64 [a1 + 0x98] = a0\n  8208: a0 = u64 [s1 + 0xb8]\n  8212: u64 [a1 + 0x90] = a0\n  8216: a2 = a1\n  8218: a1 = s1 + 0x1100\n  8222: a0 = u64 [s1 + 0xc0]\n  8226: u64 [a2 + 0x88] = a0\n  8230: a0 = 0\n  8232: ra = 266, jump @19\n      : @306 [@dyn 133] (gas: 6)\n  8238: a0 = sp + 0xffffffffffffffe0\n  8241: a0 = a0 & 0xffffffffffffffe0\n  8244: u64 [s1 + 0x90] = a0\n  8248: sp = a0\n  8250: a1 = i32 [0x20074]\n  8255: jump @308 if a1 >u 31\n      : @307 (gas: 2)\n  8259: u32 [0x20074] = 0x20\n  8265: fallthrough\n      : @308 (gas: 52)\n  8266: a0 = u64 [s1 + 0xf8]\n  8270: a1 = u64 [s1 + 0xf0]\n  8274: a0 = a0 + a1\n  8277: u64 [s1 + 0x18] = a0\n  8280: a0 = 0xffffffff\n  8290: u64 [s1 + 0x98] = a0\n  8294: a0 = sp + 0xffffffffffffffe0\n  8297: a2 = a0 & 0xffffffffffffffe0\n  8300: u64 [s1 + 0xf8] = a2\n  8304: sp = a2\n  8306: a0 = 0x20080\n  8311: i32 a0 = a0 + 0\n  8313: i32 a2 = a2 + 0\n  8315: a1 = 0x20\n  8318: ecalli 6 // 'hash_keccak_256'\n  8320: a2 = 0\n  8322: a3 = 0\n  8324: a5 = 0\n  8326: t0 = 0\n  8328: a0 = u64 [s1 + 0xf8]\n  8332: t2 = u64 [a0 + 0x18]\n  8335: a1 = u64 [a0 + 0x10]\n  8338: a4 = u64 [a0 + 0x8]\n  8341: t1 = u64 [a0]\n  8343: t2 = reverse t2\n  8345: ra = reverse a1\n  8347: a4 = reverse a4\n  8349: a1 = reverse t1\n  8351: a0 = u64 [s1 + 0x90]\n  8355: u64 [s1 + 0xd8] = a1\n  8359: u64 [a0 + 0x18] = a1\n  8362: u64 [s1 + 0xf0] = a4\n  8366: u64 [a0 + 0x10] = a4\n  8369: a1 = ra\n  8371: u64 [s1 + 0xc8] = a1\n  8375: u64 [a0 + 0x8] = a1\n  8378: a1 = t2\n  8380: u64 [s1 + 0xd0] = a1\n  8384: u64 [a0] = a1\n  8386: a0 = 0x100000000\n  8396: u64 [s1 + 0x30] = a0\n  8399: a0 = 0xffffffe0\n  8409: u64 [s1 + 0x38] = a0\n  8412: a0 = u64 [s1 + 0x10]\n  8415: u64 [s1 + 0xb0] = a0\n  8419: a0 = u64 [s1 + 0x28]\n  8422: u64 [s1 + 0xa8] = a0\n  8426: a0 = u64 [s1 + 0x20]\n  8429: u64 [s1 + 0xb8] = a0\n  8433: a0 = u64 [s1 + 0x18]\n  8436: u64 [s1 + 0xc0] = a0\n  8440: fallthrough\n      : @309 (gas: 23)\n  8441: a0 = u64 [s1 + 0x40]\n  8444: u64 [s1 + 0x78] = a2\n  8447: a0 = a2 <u a0\n  8450: a2 = u64 [s1 + 0x48]\n  8453: a1 = a3 ^ a2\n  8456: u64 [s1 + 0x70] = a3\n  8459: a2 = a3 <u a2\n  8462: a2 = a0 if a1 == 0\n  8465: a4 = u64 [s1 + 0x50]\n  8468: a0 = a5 <u a4\n  8471: a3 = u64 [s1 + 0x58]\n  8474: a1 = t0 ^ a3\n  8477: u64 [s1 + 0x68] = t0\n  8480: a3 = t0 <u a3\n  8483: a3 = a0 if a1 == 0\n  8486: u64 [s1 + 0x60] = a5\n  8489: a0 = a5 ^ a4\n  8492: a0 = a0 | a1\n  8495: a3 = a2 if a0 == 0\n  8498: u64 [s1 + 0x88] = a3\n  8502: a0 = s1 + 0x10e0\n  8506: a1 = 0x40\n  8509: ra = 268, jump @17\n      : @310 [@dyn 134] (gas: 14)\n  8515: ra = s1 + 0x1078\n  8519: t2 = u64 [ra + 0x80]\n  8523: a0 = ra\n  8525: a1 = u64 [a0 + 0x78]\n  8528: a3 = u64 [a0 + 0x68]\n  8531: a5 = u64 [a0 + 0x70]\n  8534: a0 = a3 | a1\n  8537: a4 = a5 | t2\n  8540: a2 = u64 [s1 + 0x88]\n  8544: u64 [s1 + 0xf8] = a3\n  8548: u64 [s1 + 0xa0] = t2\n  8552: u64 [s1 + 0xe0] = a5\n  8556: u64 [s1 + 0xe8] = a1\n  8560: jump @312 if a2 != 0\n      : @311 (gas: 1)\n  8563: jump @708\n      : @312 (gas: 14)\n  8566: u64 [s1 + 0x88] = a0\n  8570: a2 = s1 + 0x7ff\n  8574: a2 = a2 + 0x79\n  8577: a0 = a2 + 0x700\n  8581: u64 [a0 + 0x8] = a3\n  8584: u64 [a0 + 0x10] = a5\n  8587: u64 [a0 + 0x18] = a1\n  8590: a0 = s1 + 0x7ff\n  8594: a0 = a0 + 0x781\n  8598: u64 [a2 + 0x720] = t2\n  8602: u64 [s1 + 0x80] = a4\n  8606: ra = 0x10e\n  8610: t0 = 0x31c\n  8614: jump @1026\n      : @313 [@dyn 135] (gas: 4)\n  8617: a0 = s1 + 0x7ff\n  8621: a0 = a0 + 0x761\n  8625: a1 = u64 [s1 + 0x90]\n  8629: ra = 272, jump @21\n      : @314 [@dyn 136] (gas: 9)\n  8635: a0 = u64 [s1 + 0x88]\n  8639: a2 = u64 [s1 + 0x80]\n  8643: a0 = a0 | a2\n  8646: a0 = a0 >> 0x20\n  8649: a1 = u64 [s1 + 0xe8]\n  8653: a1 = a1 | a2\n  8656: a1 = a1 << 0x20\n  8659: a0 = a0 | a1\n  8662: jump @316 if a0 == 0\n      : @315 (gas: 1)\n  8665: jump @609\n      : @316 (gas: 19)\n  8668: a3 = s1 + 0x7ff\n  8672: a3 = a3 + 0x79\n  8675: a5 = a3 + 0x600\n  8679: a0 = u64 [a5 + 0xf8]\n  8683: a1 = u64 [a5 + 0xf0]\n  8687: a2 = u64 [a5 + 0xe8]\n  8691: a4 = u64 [s1 + 0x98]\n  8695: a0 = a0 & a4\n  8698: a4 = 0xffffffffffffffff\n  8701: a1 = a1 & a4\n  8704: a2 = a2 & a4\n  8707: u64 [a3 + 1760] = 0\n  8711: u64 [a5 + 0xc8] = a2\n  8715: u64 [a5 + 0xd0] = a1\n  8719: a1 = s1 + 0x7ff\n  8723: a1 = a1 + 0x741\n  8727: u64 [a5 + 0xd8] = a0\n  8731: a0 = u64 [s1 + 0xf8]\n  8735: ra = 274, jump @19\n      : @317 [@dyn 137] (gas: 23)\n  8741: a0 = u64 [s1 + 0xd0]\n  8745: a0 = a0 + 0x1\n  8748: a1 = a0 <u 0x1\n  8751: a2 = u64 [s1 + 0xc8]\n  8755: a1 = a1 + a2\n  8758: a2 = a0 | a1\n  8761: a2 = a2 <u 0x1\n  8764: a3 = u64 [s1 + 0xf0]\n  8768: a2 = a2 + a3\n  8771: u64 [s1 + 0xf0] = a3\n  8775: a3 = a2 <u a3\n  8778: a4 = u64 [s1 + 0xd8]\n  8782: a3 = a3 + a4\n  8785: a4 = s1 + 0x2078\n  8789: a5 = a4 + 0x400\n  8793: u64 [a5 + 0x30] = a1\n  8796: u64 [a5 + 0x28] = a0\n  8799: u64 [a5 + 0x38] = a2\n  8802: u64 [a5 + 0x40] = a3\n  8805: a0 = s1 + 0x7ff\n  8809: a0 = a0 + 0x721\n  8813: a1 = s1 + 0x24a0\n  8817: ra = 276, jump @21\n      : @318 [@dyn 138] (gas: 10)\n  8823: a0 = u64 [s1 + 0xa0]\n  8827: a2 = u64 [s1 + 0xe8]\n  8831: a2 = a2 | a0\n  8834: a0 = u64 [s1 + 0x38]\n  8837: a4 = u64 [s1 + 0xf8]\n  8841: a0 = a4 <u a0\n  8844: a1 = u64 [s1 + 0xe0]\n  8848: a0 = 0 if a1 != 0\n  8850: a0 = 0 if a2 != 0\n  8852: jump @320 if a0 != 0\n      : @319 (gas: 1)\n  8855: jump @609\n      : @320 (gas: 18)\n  8858: a3 = s1 + 0x7ff\n  8862: a3 = a3 + 0x79\n  8865: a0 = u64 [a3 + 0x6b8]\n  8869: a1 = u64 [a3 + 0x6b0]\n  8873: u64 [s1 + 0x88] = a2\n  8877: a2 = u64 [a3 + 0x6a8]\n  8881: a5 = u64 [s1 + 0x98]\n  8885: t0 = a0 & a5\n  8888: a1 = a1 & 0xffffffffffffffff\n  8891: a2 = a2 & 0xffffffffffffffff\n  8894: i32 a0 = a4 + 0x20\n  8897: u64 [a3 + 1696] = 0\n  8901: u64 [a3 + 0x688] = a2\n  8905: u64 [a3 + 0x690] = a1\n  8909: a1 = s1 + 0x7ff\n  8913: a1 = a1 + 0x701\n  8917: u64 [a3 + 0x698] = t0\n  8921: ra = 278, jump @19\n      : @321 [@dyn 139] (gas: 5)\n  8927: a1 = u64 [s1 + 0xd0]\n  8931: a0 = a1 + 0x2\n  8934: a1 = a0 <u a1\n  8937: a3 = u64 [s1 + 0xc8]\n  8941: t0 = 280, jump @1030\n      : @322 [@dyn 140] (gas: 15)\n  8947: a1 = u64 [s1 + 0xf0]\n  8951: a3 = a3 + a1\n  8954: a1 = a3 <u a1\n  8957: a4 = u64 [s1 + 0xd8]\n  8961: a1 = a1 + a4\n  8964: a4 = s1 + 0x2078\n  8968: a5 = a4 + 0x400\n  8972: u64 [a5 + 0x50] = a2\n  8975: u64 [a5 + 0x48] = a0\n  8978: u64 [a5 + 0x58] = a3\n  8981: u64 [a5 + 0x60] = a1\n  8984: a0 = s1 + 0x7ff\n  8988: a0 = a0 + 0x6e1\n  8992: a1 = s1 + 0x24c0\n  8996: ra = 282, jump @21\n      : @323 [@dyn 141] (gas: 9)\n  9002: a5 = u64 [s1 + 0xf8]\n  9006: a0 = u64 [s1 + 0x30]\n  9009: a0 = a0 + 0xffffffffffffffc0\n  9012: a0 = a5 <u a0\n  9015: a1 = u64 [s1 + 0xe0]\n  9019: a0 = 0 if a1 != 0\n  9021: a1 = u64 [s1 + 0x88]\n  9025: a0 = 0 if a1 != 0\n  9027: jump @325 if a0 != 0\n      : @324 (gas: 1)\n  9030: jump @609\n      : @325 (gas: 15)\n  9033: a2 = s1 + 0x7ff\n  9037: a2 = a2 + 0x79\n  9040: t0 = u64 [a2 + 0x680]\n  9044: a1 = u64 [a2 + 0x678]\n  9048: a3 = u64 [a2 + 0x670]\n  9052: a4 = u64 [a2 + 0x668]\n  9056: i32 a0 = a5 + 0x40\n  9059: a5 = a2 + 0x600\n  9063: u64 [a5 + 0x48] = a4\n  9066: u64 [a5 + 0x50] = a3\n  9069: u64 [a5 + 0x58] = a1\n  9072: a1 = s1 + 0x7ff\n  9076: a1 = a1 + 0x6c1\n  9080: u64 [a2 + 0x660] = t0\n  9084: ra = 284, jump @19\n      : @326 [@dyn 142] (gas: 12)\n  9090: a3 = u64 [s1 + 0xb8]\n  9094: a4 = u64 [s1 + 0xb0]\n  9098: a0 = a4 | a3\n  9101: a2 = u64 [s1 + 0xc0]\n  9105: a5 = u64 [s1 + 0xa8]\n  9109: a1 = a5 | a2\n  9112: a0 = a0 | a1\n  9115: a0 = a0 >> 0x20\n  9118: a1 = a1 | a3\n  9121: a1 = a1 << 0x20\n  9124: a0 = a0 | a1\n  9127: jump @328 if a0 == 0\n      : @327 (gas: 1)\n  9130: jump @609\n      : @328 (gas: 18)\n  9133: t0 = s1 + 0x7ff\n  9137: t0 = t0 + 0x79\n  9140: a0 = u64 [s1 + 0xf8]\n  9144: u64 [t0 + 0x628] = a0\n  9148: a0 = u64 [s1 + 0xe0]\n  9152: u64 [t0 + 0x630] = a0\n  9156: a0 = u64 [s1 + 0xe8]\n  9160: u64 [t0 + 0x638] = a0\n  9164: a1 = s1 + 0x7ff\n  9168: a1 = a1 + 0x6a1\n  9172: a0 = u64 [s1 + 0xa0]\n  9176: u64 [t0 + 0x640] = a0\n  9180: a0 = a4\n  9182: u64 [s1 + 0xc0] = a2\n  9186: u64 [s1 + 0xb8] = a3\n  9190: u64 [s1 + 0xb0] = a4\n  9194: u64 [s1 + 0xa8] = a5\n  9198: ra = 286, jump @19\n      : @329 [@dyn 143] (gas: 55)\n  9204: a1 = u64 [s1 + 0xb0]\n  9208: a0 = a1 + 0x20\n  9211: u64 [s1 + 0xf8] = a0\n  9215: a2 = a0 <u a1\n  9218: a1 = u64 [s1 + 0xa8]\n  9222: a0 = a1 + a2\n  9225: u64 [s1 + 0xe8] = a0\n  9229: a3 = a0 <u a1\n  9232: a3 = a2 if a2 == 0\n  9235: a0 = u64 [s1 + 0xb8]\n  9239: t2 = a0 + a3\n  9242: a3 = t2 <u a0\n  9245: a0 = u64 [s1 + 0xc0]\n  9249: a0 = a0 + a3\n  9252: u64 [s1 + 0xc0] = a0\n  9256: a0 = u64 [s1 + 0xd0]\n  9260: ra = a0 + 0x3\n  9263: a4 = ra <u a0\n  9266: a0 = u64 [s1 + 0xc8]\n  9270: t1 = a0 + a4\n  9273: a5 = t1 <u a0\n  9276: a5 = a4 if a4 == 0\n  9279: a0 = u64 [s1 + 0xf0]\n  9283: a5 = a5 + a0\n  9286: a4 = a5 <u a0\n  9289: a0 = u64 [s1 + 0xd8]\n  9293: a0 = a0 + a4\n  9296: a2 = u64 [s1 + 0x78]\n  9299: a2 = a2 + 0x1\n  9302: a4 = a2 <u 0x1\n  9305: a3 = u64 [s1 + 0x70]\n  9308: a3 = a3 + a4\n  9311: a4 = a2 | a3\n  9314: a4 = a4 <u 0x1\n  9317: a1 = u64 [s1 + 0x60]\n  9320: a4 = a4 + a1\n  9323: a1 = a4 <u a1\n  9326: t0 = u64 [s1 + 0x68]\n  9329: t0 = t0 + a1\n  9332: a1 = u64 [s1 + 0x90]\n  9336: u64 [a1 + 0x8] = t1\n  9339: u64 [a1] = ra\n  9341: u64 [a1 + 0x10] = a5\n  9344: u64 [s1 + 0xd8] = a0\n  9348: u64 [a1 + 0x18] = a0\n  9351: a0 = u64 [s1 + 0xf8]\n  9355: u64 [s1 + 0xb0] = a0\n  9359: a0 = u64 [s1 + 0xe8]\n  9363: u64 [s1 + 0xa8] = a0\n  9367: u64 [s1 + 0xb8] = t2\n  9371: u64 [s1 + 0xd0] = ra\n  9375: u64 [s1 + 0xc8] = t1\n  9379: u64 [s1 + 0xf0] = a5\n  9383: a5 = a4\n  9385: jump @309\n      : @330 (gas: 9)\n  9388: u64 [a2 + 320] = 0\n  9392: u64 [a2 + 312] = 0\n  9396: u64 [a2 + 304] = 0\n  9400: u64 [a2 + 296] = 0\n  9404: a0 = s1 + 0x2000\n  9408: i32 a0 = a0 + 0x1a0\n  9412: ra = 0x120\n  9416: ecalli 11 // 'value_transferred'\n  9418: fallthrough\n      : @331 [@dyn 144] (gas: 3)\n  9419: a3 = s1 + 0x2078\n  9423: a4 = a3 + 0x100\n  9427: t0 = 290, jump @1044\n      : @332 [@dyn 145] (gas: 1)\n  9433: jump @334 if a0 == 0\n      : @333 (gas: 1)\n  9436: jump @753\n      : @334 (gas: 3)\n  9439: a0 = u64 [s1 + 0xf8]\n  9443: a0 = i32 [a0]\n  9445: jump @336 if a0 >u 67\n      : @335 (gas: 1)\n  9449: jump @754\n      : @336 (gas: 6)\n  9452: a0 = s1 + 0x2000\n  9456: i32 a0 = a0 + 0x1c0\n  9460: a1 = 0x4\n  9463: ra = 0x124\n  9467: ecalli 1 // 'call_data_load'\n  9469: fallthrough\n      : @337 [@dyn 146] (gas: 6)\n  9470: a5 = s1 + 0x2078\n  9474: a3 = a5 + 0x100\n  9478: a0 = u64 [a3 + 0x60]\n  9481: a1 = u64 [a3 + 0x58]\n  9484: a2 = u64 [a3 + 0x50]\n  9487: t0 = 294, jump @1027\n      : @338 [@dyn 147] (gas: 1)\n  9493: jump @340 if a4 != 0\n      : @339 (gas: 1)\n  9496: jump @755\n      : @340 (gas: 23)\n  9499: a3 = u64 [a5 + 0x148]\n  9503: a4 = u64 [s1 + 0xf8]\n  9507: t0 = u32 [a4]\n  9509: a5 = a3 + 0x4\n  9512: a3 = a5 <u a3\n  9515: a4 = a2 + a3\n  9518: a2 = a4 <u a2\n  9521: a2 = a3 if a3 == 0\n  9524: a2 = a2 + a1\n  9527: a1 = a2 <u a1\n  9530: a3 = a0 + a1\n  9533: u64 [s1 + 1848] = 0\n  9537: u64 [s1 + 1840] = 0\n  9541: u64 [s1 + 1832] = 0\n  9545: u64 [s1 + 0x720] = t0\n  9549: u64 [s1 + 0x740] = a5\n  9553: u64 [s1 + 0x748] = a4\n  9557: u64 [s1 + 0x750] = a2\n  9561: a0 = s1 + 0x760\n  9565: a1 = s1 + 0x740\n  9569: a2 = s1 + 0x720\n  9573: u64 [s1 + 0x758] = a3\n  9577: ra = 296, jump @820\n      : @341 [@dyn 148] (gas: 15)\n  9583: a1 = s1 + 0x700\n  9587: a0 = u64 [a1 + 0x78]\n  9590: u64 [s1 + 0xd8] = a0\n  9594: a0 = u64 [a1 + 0x70]\n  9597: u64 [s1 + 0xe0] = a0\n  9601: a0 = u64 [a1 + 0x68]\n  9604: u64 [s1 + 0xe8] = a0\n  9608: a0 = u64 [a1 + 0x60]\n  9611: u64 [s1 + 0xf0] = a0\n  9615: a0 = s1 + 0x2000\n  9619: i32 a0 = a0 + 0x1e0\n  9623: a1 = 0x24\n  9626: ra = 0x12a\n  9630: ecalli 1 // 'call_data_load'\n  9632: fallthrough\n      : @342 [@dyn 149] (gas: 6)\n  9633: a5 = s1 + 0x2078\n  9637: a3 = a5 + 0x100\n  9641: a0 = u64 [a3 + 0x80]\n  9645: a1 = u64 [a3 + 0x78]\n  9648: a2 = u64 [a3 + 0x70]\n  9651: t0 = 300, jump @1027\n      : @343 [@dyn 150] (gas: 1)\n  9657: jump @345 if a4 != 0\n      : @344 (gas: 1)\n  9660: jump @756\n      : @345 (gas: 24)\n  9663: a3 = u64 [a5 + 0x168]\n  9667: a4 = u64 [s1 + 0xf8]\n  9671: t0 = u32 [a4]\n  9673: a5 = a3 + 0x4\n  9676: a3 = a5 <u a3\n  9679: a4 = a2 + a3\n  9682: a2 = a4 <u a2\n  9685: a2 = a3 if a3 == 0\n  9688: a2 = a2 + a1\n  9691: a1 = a2 <u a1\n  9694: a3 = a0 + a1\n  9697: u64 [s1 + 1752] = 0\n  9701: u64 [s1 + 1744] = 0\n  9705: u64 [s1 + 1736] = 0\n  9709: u64 [s1 + 0x6c0] = t0\n  9713: u64 [s1 + 0x6e0] = a5\n  9717: a5 = s1 + 0x600\n  9721: u64 [a5 + 0xe8] = a4\n  9725: u64 [a5 + 0xf0] = a2\n  9729: a0 = s1 + 0x700\n  9733: a1 = s1 + 0x6e0\n  9737: a2 = s1 + 0x6c0\n  9741: u64 [a5 + 0xf8] = a3\n  9745: ra = 302, jump @820\n      : @346 [@dyn 151] (gas: 12)\n  9751: a1 = s1 + 0x700\n  9755: a0 = u64 [a1 + 0x18]\n  9758: u64 [s1 + 0xa0] = a0\n  9762: a0 = u64 [a1 + 0x10]\n  9765: u64 [s1 + 0xa8] = a0\n  9769: a0 = u64 [a1 + 0x8]\n  9772: u64 [s1 + 0xb0] = a0\n  9776: a0 = u64 [a1]\n  9778: u64 [s1 + 0xb8] = a0\n  9782: a0 = s1 + 0x6a0\n  9786: a1 = 0x40\n  9789: ra = 304, jump @17\n      : @347 [@dyn 152] (gas: 6)\n  9795: a2 = u64 [s1 + 0xe0]\n  9799: a4 = u64 [s1 + 0xf0]\n  9803: a0 = a4 | a2\n  9806: a1 = u64 [s1 + 0xd8]\n  9810: a3 = u64 [s1 + 0xe8]\n  9814: t0 = 306, jump @1022\n      : @348 [@dyn 153] (gas: 1)\n  9820: jump @350 if a0 == 0\n      : @349 (gas: 1)\n  9823: jump @609\n      : @350 (gas: 12)\n  9826: a1 = a4\n  9828: a2 = s1 + 0x600\n  9832: a0 = u64 [a2 + 0xb8]\n  9836: u64 [s1 + 0xd0] = a0\n  9840: a0 = u64 [a2 + 0xb0]\n  9844: u64 [s1 + 0xc8] = a0\n  9848: a0 = u64 [a2 + 0xa8]\n  9852: u64 [s1 + 0xc0] = a0\n  9856: a0 = u64 [a2 + 0xa0]\n  9860: u64 [s1 + 0xf8] = a0\n  9864: a0 = s1 + 0x680\n  9868: ra = 308, jump @17\n      : @351 [@dyn 154] (gas: 6)\n  9874: a2 = u64 [s1 + 0xc8]\n  9878: a0 = u64 [s1 + 0xf8]\n  9882: a0 = a0 | a2\n  9885: a1 = u64 [s1 + 0xd0]\n  9889: a3 = u64 [s1 + 0xc0]\n  9893: t0 = 310, jump @1022\n      : @352 [@dyn 155] (gas: 1)\n  9899: jump @354 if a0 == 0\n      : @353 (gas: 1)\n  9902: jump @609\n      : @354 (gas: 10)\n  9905: a0 = u64 [s1 + 0xe0]\n  9909: a1 = u64 [s1 + 0xd8]\n  9913: a0 = a0 | a1\n  9916: a1 = 0xffffffe0\n  9926: a3 = u64 [s1 + 0xf0]\n  9930: a1 = a3 <u a1\n  9933: a2 = u64 [s1 + 0xe8]\n  9937: a1 = 0 if a2 != 0\n  9939: a1 = 0 if a0 != 0\n  9941: jump @356 if a1 != 0\n      : @355 (gas: 1)\n  9944: jump @609\n      : @356 (gas: 14)\n  9947: a2 = a3\n  9949: t0 = u64 [s1 + 0x698]\n  9953: a0 = s1 + 0x600\n  9957: a5 = u64 [a0 + 0x90]\n  9961: a1 = u64 [a0 + 0x80]\n  9965: a4 = u64 [a0 + 0x88]\n  9969: a0 = a1 | a5\n  9972: a3 = a4 | t0\n  9975: a0 = a0 | a3\n  9978: a0 = a0 >> 0x20\n  9981: a3 = a3 | a5\n  9984: a3 = a3 << 0x20\n  9987: a0 = a0 | a3\n  9990: jump @358 if a0 == 0\n      : @357 (gas: 1)\n  9993: jump @609\n      : @358 (gas: 8)\n  9996: i32 a0 = a2 + 0x20\n  9999: u64 [s1 + 0x78] = a0\n 10002: a0 = u64 [s1 + 0xf8]\n 10006: u64 [s1 + 0x98] = a1\n 10010: u64 [s1 + 0x90] = a4\n 10014: u64 [s1 + 0x88] = t0\n 10018: u64 [s1 + 0x80] = a5\n 10022: ra = 312, jump @29\n      : @359 [@dyn 156] (gas: 4)\n 10028: u64 [s1 + 0x70] = a0\n 10031: a0 = u64 [s1 + 0x78]\n 10034: a1 = u64 [s1 + 0x98]\n 10038: ra = 314, jump @29\n      : @360 [@dyn 157] (gas: 4)\n 10044: a1 = a0\n 10046: a0 = u64 [s1 + 0x70]\n 10049: a2 = u64 [s1 + 0x98]\n 10053: ra = 316, jump @0\n      : @361 [@dyn 158] (gas: 13)\n 10059: t2 = u64 [s1 + 0x80]\n 10063: t1 = u64 [s1 + 0x88]\n 10067: t0 = u64 [s1 + 0x90]\n 10071: a0 = u64 [s1 + 0xf8]\n 10075: a1 = u64 [s1 + 0x98]\n 10079: a0 = a0 + a1\n 10082: a1 = a0 <u a1\n 10085: a2 = u64 [s1 + 0xc0]\n 10089: a2 = a2 + t0\n 10092: a2 = a2 + a1\n 10095: a3 = a2 ^ t0\n 10098: a4 = a2 <u t0\n 10101: t0 = 318, jump @1013\n      : @362 [@dyn 159] (gas: 1)\n 10107: jump @364 if a1 == 0\n      : @363 (gas: 1)\n 10110: jump @609\n      : @364 (gas: 6)\n 10113: u64 [s1 + 1656] = 0\n 10117: u64 [s1 + 1648] = 0\n 10121: u64 [s1 + 1640] = 0\n 10125: a1 = s1 + 0x660\n 10129: u64 [s1 + 1632] = 0\n 10133: ra = 320, jump @19\n      : @365 [@dyn 160] (gas: 10)\n 10139: a0 = u64 [s1 + 0x88]\n 10143: a1 = u64 [s1 + 0x80]\n 10147: a0 = a0 | a1\n 10150: a1 = 0xffffffe0\n 10160: a2 = u64 [s1 + 0x98]\n 10164: a1 = a2 <u a1\n 10167: a3 = u64 [s1 + 0x90]\n 10171: a1 = 0 if a3 != 0\n 10173: a1 = 0 if a0 != 0\n 10175: jump @367 if a1 != 0\n      : @366 (gas: 1)\n 10178: jump @609\n      : @367 (gas: 4)\n 10181: i32 a1 = a2 + 0x20\n 10184: u64 [s1 + 0xd0] = a1\n 10188: a0 = u64 [s1 + 0xf8]\n 10192: ra = 322, jump @29\n      : @368 [@dyn 161] (gas: 12)\n 10198: a1 = sp + 0xffffffffffffffe0\n 10201: a1 = a1 & 0xffffffffffffffe0\n 10204: u64 [s1 + 0xf8] = a1\n 10208: sp = a1\n 10210: i32 a0 = a0 + 0\n 10212: i32 a2 = a1 + 0\n 10214: a1 = u64 [s1 + 0xd0]\n 10218: ra = 0x144\n 10222: ecalli 6 // 'hash_keccak_256'\n 10224: a3 = u64 [s1 + 0xf8]\n 10228: t0 = 0x146\n 10232: jump @1017\n      : @369 [@dyn 162] (gas: 2)\n 10235: a3 = u64 [s1 + 0xf8]\n 10239: t0 = 326, jump @1017\n      : @370 [@dyn 163] (gas: 9)\n 10245: a4 = s1 + 0x2078\n 10249: a5 = a4 + 0x100\n 10253: u64 [a5 + 0xa0] = a3\n 10257: u64 [a5 + 0x98] = a2\n 10261: u64 [a5 + 0x90] = a1\n 10265: u64 [a5 + 0x88] = a0\n 10269: a0 = s1 + 0x640\n 10273: a1 = s1 + 0x2200\n 10277: ra = 328, jump @21\n      : @371 [@dyn 164] (gas: 11)\n 10283: a2 = u64 [s1 + 0x640]\n 10287: a0 = u64 [s1 + 0x648]\n 10291: a1 = u64 [s1 + 0x650]\n 10295: a3 = u64 [s1 + 0x658]\n 10299: u64 [s1 + 0x618] = a3\n 10303: u64 [s1 + 0x610] = a1\n 10307: u64 [s1 + 0x608] = a0\n 10311: a0 = s1 + 0x620\n 10315: a1 = s1 + 0x600\n 10319: u64 [s1 + 0x600] = a2\n 10323: ra = 330, jump @848\n      : @372 [@dyn 165] (gas: 12)\n 10329: a4 = s1 + 0x600\n 10333: a0 = u64 [a4 + 0x30]\n 10336: a1 = u64 [a4 + 0x38]\n 10339: a2 = u64 [a4 + 0x28]\n 10342: a3 = u64 [a4 + 0x20]\n 10345: a1 = a1 | a2\n 10348: a0 = a0 | a3\n 10351: a0 = a0 | a1\n 10354: u64 [s1 + 0xc8] = a0\n 10358: a0 = s1 + 0x5e0\n 10362: a1 = 0x40\n 10365: ra = 332, jump @17\n      : @373 [@dyn 166] (gas: 8)\n 10371: a1 = s1 + 0x500\n 10375: a4 = u64 [a1 + 0xf8]\n 10379: a5 = u64 [a1 + 0xf0]\n 10383: a3 = u64 [a1 + 0xe8]\n 10387: a0 = u64 [a1 + 0xe0]\n 10391: u64 [s1 + 0xf8] = a0\n 10395: a1 = u64 [s1 + 0xc8]\n 10399: jump @375 if a1 == 0\n      : @374 (gas: 1)\n 10402: jump @627\n      : @375 (gas: 12)\n 10405: a1 = s1 + 0x500\n 10409: u64 [a1 + 0x40] = a0\n 10412: u64 [a1 + 0x48] = a3\n 10415: u64 [a1 + 0x50] = a5\n 10418: a0 = s1 + 0x540\n 10422: u64 [a1 + 0x58] = a4\n 10425: u64 [s1 + 0xd0] = a3\n 10429: u64 [s1 + 0xc0] = a4\n 10433: u64 [s1 + 0x98] = a5\n 10437: ra = 0x14e\n 10441: t0 = 0x30c\n 10445: jump @1026\n      : @376 [@dyn 167] (gas: 12)\n 10448: a4 = u64 [s1 + 0x98]\n 10452: a3 = u64 [s1 + 0xc0]\n 10456: a2 = u64 [s1 + 0xf8]\n 10460: a0 = a2 | a4\n 10463: a1 = u64 [s1 + 0xd0]\n 10467: a1 = a1 | a3\n 10470: a0 = a0 | a1\n 10473: a0 = a0 >> 0x20\n 10476: a1 = a1 | a4\n 10479: a1 = a1 << 0x20\n 10482: a0 = a0 | a1\n 10485: jump @378 if a0 == 0\n      : @377 (gas: 1)\n 10488: jump @609\n      : @378 (gas: 12)\n 10491: a0 = u64 [s1 + 0xf0]\n 10495: a3 = s1 + 0x500\n 10499: u64 [a3 + 0x20] = a0\n 10502: a0 = u64 [s1 + 0xe8]\n 10506: u64 [a3 + 0x28] = a0\n 10509: a0 = u64 [s1 + 0xe0]\n 10513: u64 [a3 + 0x30] = a0\n 10516: a1 = s1 + 0x520\n 10520: a0 = u64 [s1 + 0xd8]\n 10524: u64 [a3 + 0x38] = a0\n 10527: a0 = a2\n 10529: ra = 336, jump @19\n      : @379 [@dyn 168] (gas: 6)\n 10535: a3 = u64 [s1 + 0xd0]\n 10539: a1 = u64 [s1 + 0xf8]\n 10543: a0 = u64 [s1 + 0x98]\n 10547: a2 = u64 [s1 + 0xc0]\n 10551: a2 = a2 | a0\n 10554: t0 = 338, jump @1041\n      : @380 [@dyn 169] (gas: 1)\n 10560: jump @382 if a0 != 0\n      : @381 (gas: 1)\n 10563: jump @609\n      : @382 (gas: 16)\n 10566: u64 [s1 + 0xc8] = a2\n 10570: i32 a2 = a1 + 0x20\n 10573: a0 = u64 [s1 + 0xb8]\n 10577: a3 = s1 + 0x500\n 10581: u64 [a3] = a0\n 10583: a0 = u64 [s1 + 0xb0]\n 10587: u64 [a3 + 0x8] = a0\n 10590: a0 = u64 [s1 + 0xa8]\n 10594: u64 [a3 + 0x10] = a0\n 10597: a1 = s1 + 0x500\n 10601: a0 = u64 [s1 + 0xa0]\n 10605: u64 [a3 + 0x18] = a0\n 10608: u64 [s1 + 0x88] = a2\n 10612: a0 = a2\n 10614: u64 [s1 + 0xc0] = a4\n 10618: ra = 340, jump @19\n      : @383 [@dyn 170] (gas: 6)\n 10624: a0 = 0x30080\n 10629: u64 [s1 + 0x98] = a0\n 10633: i32 a0 = a0 + 0\n 10635: u64 [s1 + 0x90] = a0\n 10639: ecalli 3 // 'caller'\n 10641: fallthrough\n      : @384 (gas: 9)\n 10642: a4 = u64 [s1 + 0xf8]\n 10646: a0 = u64 [s1 + 0xc0]\n 10650: a0 = a0 + 0xffffffffffffffc0\n 10653: a0 = a4 <u a0\n 10656: a1 = u64 [s1 + 0xd0]\n 10660: a0 = 0 if a1 != 0\n 10662: a1 = u64 [s1 + 0xc8]\n 10666: a0 = 0 if a1 != 0\n 10668: jump @386 if a0 != 0\n      : @385 (gas: 1)\n 10671: jump @609\n      : @386 (gas: 23)\n 10674: a2 = u64 [s1 + 0x98]\n 10678: a0 = u64 [a2 + 0x8]\n 10681: a1 = i32 [a2 + 0x10]\n 10684: a2 = u64 [a2]\n 10686: a0 = reverse a0\n 10688: a3 = a0 << 0x20\n 10691: a1 = reverse a1\n 10693: a1 = a1 >> 0x20\n 10696: a3 = a3 | a1\n 10699: a0 = a0 >> 0x20\n 10702: a1 = reverse a2\n 10704: a2 = a1 << 0x20\n 10707: a2 = a2 | a0\n 10710: a1 = a1 >> 0x20\n 10713: i32 a0 = a4 + 0x40\n 10716: u64 [s1 + 1272] = 0\n 10720: a4 = s1 + 0x400\n 10724: u64 [a4 + 0xf0] = a1\n 10728: u64 [a4 + 0xe8] = a2\n 10732: a1 = s1 + 0x4e0\n 10736: u64 [a4 + 0xe0] = a3\n 10740: u64 [s1 + 0x70] = a0\n 10743: ra = 342, jump @19\n      : @387 [@dyn 171] (gas: 4)\n 10749: a0 = s1 + 0x2000\n 10753: i32 a0 = a0 + 0x220\n 10757: ecalli 7 // 'now'\n 10759: fallthrough\n      : @388 (gas: 8)\n 10760: a4 = u64 [s1 + 0xf8]\n 10764: a0 = 0xffffffa0\n 10774: a0 = a4 <u a0\n 10777: a1 = u64 [s1 + 0xd0]\n 10781: a0 = 0 if a1 != 0\n 10783: a1 = u64 [s1 + 0xc8]\n 10787: a0 = 0 if a1 != 0\n 10789: jump @390 if a0 != 0\n      : @389 (gas: 1)\n 10792: jump @609\n      : @390 (gas: 14)\n 10795: a3 = s1 + 0x2078\n 10799: a0 = a3 + 0x100\n 10803: a5 = u64 [a0 + 0xa8]\n 10807: a1 = u64 [a0 + 0xb0]\n 10811: a2 = u64 [a0 + 0xb8]\n 10815: a3 = u64 [a0 + 0xc0]\n 10819: i32 a0 = a4 + 0x60\n 10822: u64 [s1 + 0x4d8] = a3\n 10826: u64 [s1 + 0x4d0] = a2\n 10830: u64 [s1 + 0x4c8] = a1\n 10834: a1 = s1 + 0x4c0\n 10838: u64 [s1 + 0x4c0] = a5\n 10842: u64 [s1 + 0x60] = a0\n 10845: ra = 344, jump @19\n      : @391 [@dyn 172] (gas: 3)\n 10851: a0 = s1 + 0x4a0\n 10855: a1 = 0x40\n 10858: ra = 346, jump @17\n      : @392 [@dyn 173] (gas: 12)\n 10864: a1 = s1 + 0x400\n 10868: a0 = u64 [a1 + 0xb8]\n 10872: u64 [s1 + 0xc8] = a0\n 10876: a0 = u64 [a1 + 0xb0]\n 10880: u64 [s1 + 0xc0] = a0\n 10884: a0 = u64 [a1 + 0xa8]\n 10888: u64 [s1 + 0x80] = a0\n 10892: a0 = u64 [a1 + 0xa0]\n 10896: u64 [s1 + 0xd0] = a0\n 10900: a0 = s1 + 0x480\n 10904: a1 = u64 [s1 + 0xf0]\n 10908: ra = 348, jump @17\n      : @393 [@dyn 174] (gas: 6)\n 10914: a0 = u64 [s1 + 0xc8]\n 10918: a1 = u64 [s1 + 0x80]\n 10922: a0 = a0 | a1\n 10925: a2 = u64 [s1 + 0xc0]\n 10929: a1 = u64 [s1 + 0xd0]\n 10933: t0 = 350, jump @1036\n      : @394 [@dyn 175] (gas: 1)\n 10939: jump @396 if a0 == 0\n      : @395 (gas: 1)\n 10942: jump @609\n      : @396 (gas: 17)\n 10945: a4 = s1 + 0x400\n 10949: a2 = u64 [a4 + 0x98]\n 10953: a3 = u64 [a4 + 0x90]\n 10957: a0 = u64 [a4 + 0x80]\n 10961: a1 = u64 [a4 + 0x88]\n 10965: u64 [s1 + 0x68] = a0\n 10968: a0 = a0 | a3\n 10971: u64 [s1 + 0x58] = a1\n 10974: u64 [s1 + 0x50] = a2\n 10977: a1 = a1 | a2\n 10980: a0 = a0 | a1\n 10983: a0 = a0 >> 0x20\n 10986: u64 [s1 + 0x48] = a3\n 10989: a1 = a1 | a3\n 10992: a1 = a1 << 0x20\n 10995: a0 = a0 | a1\n 10998: jump @398 if a0 == 0\n      : @397 (gas: 1)\n 11001: jump @609\n      : @398 (gas: 3)\n 11004: a0 = u64 [s1 + 0xd0]\n 11008: a1 = u64 [s1 + 0x68]\n 11011: ra = 352, jump @29\n      : @399 [@dyn 176] (gas: 4)\n 11017: u64 [s1 + 0x40] = a0\n 11020: a0 = u64 [s1 + 0x78]\n 11023: a1 = u64 [s1 + 0x68]\n 11026: ra = 354, jump @29\n      : @400 [@dyn 177] (gas: 4)\n 11032: a1 = a0\n 11034: a0 = u64 [s1 + 0x40]\n 11037: a2 = u64 [s1 + 0x68]\n 11040: ra = 356, jump @0\n      : @401 [@dyn 178] (gas: 7)\n 11046: a1 = u64 [s1 + 0x68]\n 11049: a0 = u64 [s1 + 0xd0]\n 11053: a0 = a0 + a1\n 11056: a1 = a0 <u a1\n 11059: a4 = u64 [s1 + 0x58]\n 11062: a2 = u64 [s1 + 0x80]\n 11066: t0 = 358, jump @1028\n      : @402 [@dyn 179] (gas: 9)\n 11072: a3 = u64 [s1 + 0x48]\n 11075: a1 = u64 [s1 + 0xc0]\n 11079: a1 = a1 + a3\n 11082: t0 = a1 <u a3\n 11085: a5 = u64 [s1 + 0x50]\n 11088: a3 = u64 [s1 + 0xc8]\n 11092: a5 = a5 + a3\n 11095: a3 = a5 + t0\n 11098: t0 = 360, jump @1014\n      : @403 [@dyn 180] (gas: 1)\n 11104: jump @405 if a1 == 0\n      : @404 (gas: 1)\n 11107: jump @609\n      : @405 (gas: 6)\n 11110: u64 [s1 + 1144] = 0\n 11114: u64 [s1 + 1136] = 0\n 11118: u64 [s1 + 1128] = 0\n 11122: a1 = s1 + 0x460\n 11126: u64 [s1 + 1120] = 0\n 11130: ra = 362, jump @19\n      : @406 [@dyn 181] (gas: 10)\n 11136: a0 = u64 [s1 + 0x50]\n 11139: a1 = u64 [s1 + 0x48]\n 11142: a0 = a0 | a1\n 11145: a1 = 0xffffffe0\n 11155: a2 = u64 [s1 + 0x68]\n 11158: a1 = a2 <u a1\n 11161: a2 = u64 [s1 + 0x58]\n 11164: a1 = 0 if a2 != 0\n 11166: a1 = 0 if a0 != 0\n 11168: jump @408 if a1 != 0\n      : @407 (gas: 1)\n 11171: jump @609\n      : @408 (gas: 5)\n 11174: a0 = u64 [s1 + 0x68]\n 11177: i32 a1 = a0 + 0x20\n 11180: u64 [s1 + 0xc8] = a1\n 11184: a0 = u64 [s1 + 0xd0]\n 11188: ra = 364, jump @29\n      : @409 [@dyn 182] (gas: 24)\n 11194: a1 = sp + 0xffffffffffffffe0\n 11197: a1 = a1 & 0xffffffffffffffe0\n 11200: u64 [s1 + 0xd0] = a1\n 11204: sp = a1\n 11206: i32 a0 = a0 + 0\n 11208: i32 a2 = a1 + 0\n 11210: a1 = u64 [s1 + 0xc8]\n 11214: ecalli 6 // 'hash_keccak_256'\n 11216: a3 = u64 [s1 + 0xd0]\n 11220: a0 = u64 [a3 + 0x18]\n 11223: a1 = u64 [a3 + 0x10]\n 11226: a2 = u64 [a3 + 0x8]\n 11229: a3 = u64 [a3]\n 11231: a0 = reverse a0\n 11233: u64 [s1 + 0xc0] = a0\n 11237: a0 = reverse a1\n 11239: u64 [s1 + 0xc8] = a0\n 11243: a0 = reverse a2\n 11245: u64 [s1 + 0x80] = a0\n 11249: a0 = reverse a3\n 11251: u64 [s1 + 0xd0] = a0\n 11255: a0 = s1 + 0x440\n 11259: a1 = u64 [s1 + 0xf8]\n 11263: ra = 366, jump @17\n      : @410 [@dyn 183] (gas: 20)\n 11269: a4 = s1 + 0x400\n 11273: a0 = u64 [a4 + 0x40]\n 11276: a1 = u64 [a4 + 0x48]\n 11279: a2 = u64 [a4 + 0x50]\n 11282: a3 = u64 [a4 + 0x58]\n 11285: u64 [a4 + 0x18] = a3\n 11288: u64 [a4 + 0x10] = a2\n 11291: u64 [a4 + 0x8] = a1\n 11294: u64 [a4] = a0\n 11296: a0 = u64 [s1 + 0xd0]\n 11300: u64 [a4 + 0x38] = a0\n 11303: a0 = u64 [s1 + 0x80]\n 11307: u64 [a4 + 0x30] = a0\n 11310: a0 = u64 [s1 + 0xc8]\n 11314: u64 [a4 + 0x28] = a0\n 11317: a0 = s1 + 0x420\n 11321: a1 = s1 + 0x400\n 11325: a2 = u64 [s1 + 0xc0]\n 11329: u64 [a4 + 0x20] = a2\n 11332: ra = 368, jump @923\n      : @411 [@dyn 184] (gas: 3)\n 11338: a0 = s1 + 0x3e0\n 11342: a1 = u64 [s1 + 0x88]\n 11346: ra = 370, jump @17\n      : @412 [@dyn 185] (gas: 27)\n 11352: t0 = u64 [s1 + 0x3e0]\n 11356: t1 = u64 [s1 + 0x3e8]\n 11360: t2 = u64 [s1 + 0x3f0]\n 11364: a4 = u64 [s1 + 0x3f8]\n 11368: a3 = u64 [s1 + 0xc0]\n 11372: a3 = a3 + 0x1\n 11375: a5 = a3 <u 0x1\n 11378: a0 = u64 [s1 + 0xc8]\n 11382: a5 = a5 + a0\n 11385: a2 = a3 | a5\n 11388: a2 = a2 <u 0x1\n 11391: a0 = u64 [s1 + 0x80]\n 11395: a2 = a2 + a0\n 11398: a1 = a2 <u a0\n 11401: a0 = u64 [s1 + 0xd0]\n 11405: a1 = a1 + a0\n 11408: u64 [s1 + 0x3b8] = a4\n 11412: u64 [s1 + 0x3b0] = t2\n 11416: u64 [s1 + 0x3a8] = t1\n 11420: u64 [s1 + 0x3a0] = t0\n 11424: u64 [s1 + 0x3d8] = a1\n 11428: u64 [s1 + 0x3d0] = a2\n 11432: u64 [s1 + 0x3c8] = a5\n 11436: a0 = s1 + 0x3c0\n 11440: a1 = s1 + 0x3a0\n 11444: u64 [s1 + 0x3c0] = a3\n 11448: ra = 372, jump @923\n      : @413 [@dyn 186] (gas: 3)\n 11454: a0 = s1 + 0x380\n 11458: a1 = u64 [s1 + 0x70]\n 11461: ra = 374, jump @17\n      : @414 [@dyn 187] (gas: 14)\n 11467: a0 = u64 [s1 + 0x380]\n 11471: u64 [s1 + 0xf8] = a0\n 11475: a0 = u64 [s1 + 0x388]\n 11479: u64 [s1 + 0x88] = a0\n 11483: a0 = u32 [s1 + 0x390]\n 11487: u64 [s1 + 0x78] = a0\n 11490: a0 = sp + 0xffffffffffffffe0\n 11493: a5 = a0 & 0xffffffffffffffe0\n 11496: sp = a5\n 11498: a1 = u64 [s1 + 0xc0]\n 11502: a0 = a1 + 0x2\n 11505: a1 = a0 <u a1\n 11508: a3 = u64 [s1 + 0xc8]\n 11512: t0 = 376, jump @1030\n      : @415 [@dyn 188] (gas: 13)\n 11518: a1 = u64 [s1 + 0x80]\n 11522: a3 = a3 + a1\n 11525: a1 = a3 <u a1\n 11528: a4 = u64 [s1 + 0xd0]\n 11532: a4 = a4 + a1\n 11535: a1 = a5\n 11537: u64 [s1 + 0x70] = a5\n 11540: u64 [a5 + 0x18] = a4\n 11543: u64 [a5 + 0x10] = a3\n 11546: u64 [a5 + 0x8] = a2\n 11549: u64 [a5] = a0\n 11551: a0 = s1 + 0x360\n 11555: ra = 378, jump @21\n      : @416 [@dyn 189] (gas: 16)\n 11561: a0 = u32 [s1 + 0x374]\n 11565: a0 = a0 << 0x20\n 11568: a1 = u64 [s1 + 0x378]\n 11572: a2 = u64 [s1 + 0x78]\n 11575: a0 = a0 | a2\n 11578: a3 = s1 + 0x2078\n 11582: a2 = u64 [s1 + 0x88]\n 11586: a4 = a3 + 0x100\n 11590: u64 [a4 + 0xd0] = a2\n 11594: a2 = u64 [s1 + 0xf8]\n 11598: u64 [a4 + 0xc8] = a2\n 11602: u64 [a4 + 0xe0] = a1\n 11606: u64 [a4 + 0xd8] = a0\n 11610: a1 = s1 + 0x2240\n 11614: a0 = u64 [s1 + 0x70]\n 11617: ra = 380, jump @23\n      : @417 [@dyn 190] (gas: 3)\n 11623: a0 = s1 + 0x340\n 11627: a1 = u64 [s1 + 0x60]\n 11630: ra = 382, jump @17\n      : @418 [@dyn 191] (gas: 29)\n 11636: t0 = u64 [s1 + 0x340]\n 11640: t1 = u64 [s1 + 0x348]\n 11644: a0 = u64 [s1 + 0xc0]\n 11648: a2 = a0 + 0x3\n 11651: a3 = a2 <u a0\n 11654: a0 = u64 [s1 + 0xc8]\n 11658: a4 = a0 + a3\n 11661: a5 = a4 <u a0\n 11664: a5 = a3 if a3 == 0\n 11667: t2 = u64 [s1 + 0x350]\n 11671: a0 = u64 [s1 + 0x80]\n 11675: a5 = a5 + a0\n 11678: a0 = a5 <u a0\n 11681: a1 = u64 [s1 + 0xd0]\n 11685: a0 = a0 + a1\n 11688: a1 = u64 [s1 + 0x358]\n 11692: a3 = s1 + 0x2078\n 11696: u64 [a3 + 0x200] = a0\n 11700: a0 = a3 + 0x100\n 11704: u64 [a0 + 0xf8] = a5\n 11708: u64 [a0 + 0xf0] = a4\n 11712: u64 [a0 + 0xe8] = a2\n 11716: u64 [a3 + 0x220] = a1\n 11720: u64 [a3 + 0x218] = t2\n 11724: u64 [a3 + 0x210] = t1\n 11728: u64 [a3 + 0x208] = t0\n 11732: a0 = s1 + 0x2260\n 11736: a1 = s1 + 0x2280\n 11740: ra = 384, jump @23\n      : @419 [@dyn 192] (gas: 6)\n 11746: a0 = u64 [s1 + 0x90]\n 11750: ra = 0x182\n 11754: ecalli 3 // 'caller'\n 11756: a2 = u64 [s1 + 0x98]\n 11760: t0 = 0x184\n 11764: jump @1025\n      : @420 [@dyn 193] (gas: 2)\n 11767: a2 = u64 [s1 + 0x98]\n 11771: t0 = 388, jump @1025\n      : @421 [@dyn 194] (gas: 7)\n 11777: u64 [s1 + 824] = 0\n 11781: u64 [s1 + 0x330] = a1\n 11785: u64 [s1 + 0x328] = a0\n 11789: a1 = s1 + 0x320\n 11793: u64 [s1 + 0x320] = a3\n 11797: a0 = 0\n 11799: ra = 390, jump @19\n      : @422 [@dyn 195] (gas: 7)\n 11805: u64 [s1 + 792] = 0\n 11809: u64 [s1 + 784] = 0\n 11813: u64 [s1 + 768] = 0x2\n 11818: a0 = 0x20\n 11821: a1 = s1 + 0x300\n 11825: u64 [s1 + 776] = 0\n 11829: ra = 392, jump @19\n      : @423 [@dyn 196] (gas: 4)\n 11835: a0 = 0x20074\n 11840: u64 [s1 + 0xd0] = a0\n 11844: a0 = i32 [0x20074]\n 11849: jump @425 if a0 >u 63\n      : @424 (gas: 3)\n 11853: a1 = u64 [s1 + 0xd0]\n 11857: u32 [a1 + 0] = 0x40\n 11860: fallthrough\n      : @425 (gas: 14)\n 11861: a0 = sp + 0xffffffffffffffe0\n 11864: a2 = a0 & 0xffffffffffffffe0\n 11867: u64 [s1 + 0xf8] = a2\n 11871: sp = a2\n 11873: a0 = 0x20080\n 11878: i32 a0 = a0 + 0\n 11880: i32 a2 = a2 + 0\n 11882: a1 = 0x40\n 11885: u64 [s1 + 0xc8] = a0\n 11889: ra = 0x18a\n 11893: ecalli 6 // 'hash_keccak_256'\n 11895: a3 = u64 [s1 + 0xf8]\n 11899: t0 = 0x18c\n 11903: jump @1035\n      : @426 [@dyn 197] (gas: 2)\n 11906: a3 = u64 [s1 + 0xf8]\n 11910: t0 = 396, jump @1035\n      : @427 [@dyn 198] (gas: 15)\n 11916: a3 = u64 [s1 + 0xd8]\n 11920: u64 [s1 + 0x2d8] = a3\n 11924: a3 = u64 [s1 + 0xe0]\n 11928: u64 [s1 + 0x2d0] = a3\n 11932: a3 = u64 [s1 + 0xe8]\n 11936: u64 [s1 + 0x2c8] = a3\n 11940: a3 = u64 [s1 + 0xf0]\n 11944: u64 [s1 + 0x2c0] = a3\n 11948: u64 [s1 + 0x2f8] = a2\n 11952: u64 [s1 + 0x2f0] = a1\n 11956: u64 [s1 + 0x2e8] = a0\n 11960: a0 = s1 + 0x2e0\n 11964: a1 = s1 + 0x2c0\n 11968: u64 [s1 + 0x2e0] = a4\n 11972: ra = 398, jump @971\n      : @428 [@dyn 199] (gas: 8)\n 11978: a0 = s1 + 0x2078\n 11982: u64 [a0 + 576] = 0\n 11986: u64 [a0 + 568] = 0\n 11990: u64 [a0 + 560] = 0\n 11994: u64 [a0 + 552] = 0x3\n 11999: a0 = s1 + 0x2a0\n 12003: a1 = s1 + 0x22a0\n 12007: ra = 400, jump @21\n      : @429 [@dyn 200] (gas: 17)\n 12013: a2 = s1 + 0x200\n 12017: a0 = u64 [a2 + 0xa0]\n 12021: a3 = u64 [a2 + 0xb8]\n 12025: a1 = u64 [a2 + 0xa8]\n 12029: a4 = u64 [a2 + 0xb0]\n 12033: a0 = a0 + 0x1\n 12036: a2 = a0 <u 0x1\n 12039: a1 = a1 + a2\n 12042: a2 = a0 | a1\n 12045: a2 = a2 <u 0x1\n 12048: a2 = a2 + a4\n 12051: a4 = a2 <u a4\n 12054: a3 = a3 + a4\n 12057: a4 = a1 | a3\n 12060: a5 = a0 | a2\n 12063: a4 = a4 | a5\n 12066: jump @431 if a4 != 0\n      : @430 (gas: 1)\n 12069: jump @763\n      : @431 (gas: 13)\n 12072: a4 = s1 + 0x2078\n 12076: u64 [a4 + 608] = 0\n 12080: u64 [a4 + 600] = 0\n 12084: u64 [a4 + 592] = 0\n 12088: u64 [a4 + 584] = 0x3\n 12093: a5 = a4 + 0x200\n 12097: u64 [a5 + 0x68] = a0\n 12100: u64 [a5 + 0x70] = a1\n 12103: u64 [a5 + 0x78] = a2\n 12106: u64 [a5 + 0x80] = a3\n 12110: a0 = s1 + 0x22c0\n 12114: a1 = s1 + 0x22e0\n 12118: ra = 402, jump @23\n      : @432 [@dyn 201] (gas: 13)\n 12124: a0 = u64 [s1 + 0xd8]\n 12128: u64 [s1 + 0x278] = a0\n 12132: a0 = u64 [s1 + 0xe0]\n 12136: u64 [s1 + 0x270] = a0\n 12140: a0 = u64 [s1 + 0xe8]\n 12144: u64 [s1 + 0x268] = a0\n 12148: a0 = s1 + 0x280\n 12152: a1 = s1 + 0x260\n 12156: a2 = u64 [s1 + 0xf0]\n 12160: u64 [s1 + 0x260] = a2\n 12164: ra = 0x194\n 12168: t0 = 0x3d6\n 12172: jump @1046\n      : @433 [@dyn 202] (gas: 11)\n 12175: a0 = u64 [s1 + 0x298]\n 12179: u64 [s1 + 0xd8] = a0\n 12183: a0 = u64 [s1 + 0x290]\n 12187: u64 [s1 + 0x88] = a0\n 12191: a0 = u64 [s1 + 0x288]\n 12195: u64 [s1 + 0xc0] = a0\n 12199: a0 = u64 [s1 + 0x280]\n 12203: u64 [s1 + 0xd0] = a0\n 12207: a0 = s1 + 0x240\n 12211: a1 = 0x40\n 12214: ra = 406, jump @17\n      : @434 [@dyn 203] (gas: 17)\n 12220: a4 = s1 + 0x200\n 12224: a2 = u64 [a4 + 0x58]\n 12227: a3 = u64 [a4 + 0x50]\n 12230: a0 = u64 [a4 + 0x48]\n 12233: a1 = u64 [a4 + 0x40]\n 12236: u64 [s1 + 0xf0] = a0\n 12240: u64 [s1 + 0xe8] = a2\n 12244: a0 = a0 | a2\n 12247: u64 [s1 + 0xf8] = a1\n 12251: a1 = a1 | a3\n 12254: a1 = a1 | a0\n 12257: a1 = a1 >> 0x20\n 12260: u64 [s1 + 0xe0] = a3\n 12264: a0 = a0 | a3\n 12267: a0 = a0 << 0x20\n 12270: a0 = a0 | a1\n 12273: jump @436 if a0 == 0\n      : @435 (gas: 1)\n 12276: jump @609\n      : @436 (gas: 7)\n 12279: u64 [s1 + 568] = 0\n 12283: u64 [s1 + 560] = 0\n 12287: u64 [s1 + 552] = 0\n 12291: a1 = s1 + 0x220\n 12295: u64 [s1 + 544] = 0x40\n 12300: a0 = u64 [s1 + 0xf8]\n 12304: ra = 408, jump @19\n      : @437 [@dyn 204] (gas: 3)\n 12310: a1 = u64 [s1 + 0xf8]\n 12314: a0 = a1 + 0x40\n 12317: t0 = 410, jump @1033\n      : @438 [@dyn 205] (gas: 19)\n 12323: a4 = u64 [s1 + 0xe8]\n 12327: a4 = a4 + a1\n 12330: a5 = s1 + 0x100\n 12334: u64 [a5 + 0xc8] = a2\n 12338: u64 [a5 + 0xc0] = a0\n 12342: a0 = u64 [s1 + 0xa0]\n 12346: u64 [a5 + 0xf8] = a0\n 12350: a0 = u64 [s1 + 0xa8]\n 12354: u64 [a5 + 0xf0] = a0\n 12358: a0 = u64 [s1 + 0xb0]\n 12362: u64 [a5 + 0xe8] = a0\n 12366: a0 = u64 [s1 + 0xb8]\n 12370: u64 [a5 + 0xe0] = a0\n 12374: u64 [a5 + 0xd0] = a3\n 12378: a0 = s1 + 0x200\n 12382: a1 = s1 + 0x1e0\n 12386: a2 = s1 + 0x1c0\n 12390: u64 [a5 + 0xd8] = a4\n 12394: ra = 412, jump @881\n      : @439 [@dyn 206] (gas: 13)\n 12400: a1 = s1 + 0x200\n 12404: a0 = u64 [a1 + 0x18]\n 12407: u64 [s1 + 0xa8] = a0\n 12411: a0 = u64 [a1 + 0x10]\n 12414: u64 [s1 + 0xa0] = a0\n 12418: a0 = u64 [a1 + 0x8]\n 12421: u64 [s1 + 0xb0] = a0\n 12425: a0 = u64 [a1]\n 12427: u64 [s1 + 0xb8] = a0\n 12431: a0 = s1 + 0x2000\n 12435: i32 a0 = a0 + 0x300\n 12439: ecalli 7 // 'now'\n 12441: fallthrough\n      : @440 (gas: 10)\n 12442: a0 = u64 [s1 + 0xe0]\n 12446: a1 = u64 [s1 + 0xe8]\n 12450: a0 = a0 | a1\n 12453: a1 = 0xffffffe0\n 12463: a2 = u64 [s1 + 0xf8]\n 12467: a1 = a2 <u a1\n 12470: a2 = u64 [s1 + 0xf0]\n 12474: a1 = 0 if a2 != 0\n 12476: a1 = 0 if a0 != 0\n 12478: jump @442 if a1 != 0\n      : @441 (gas: 1)\n 12481: jump @609\n      : @442 (gas: 15)\n 12484: a0 = s1 + 0x2078\n 12488: a5 = a0 + 0x200\n 12492: a2 = u64 [a5 + 0x88]\n 12496: a1 = u64 [a5 + 0x90]\n 12500: a3 = u64 [a5 + 0x98]\n 12504: a4 = u64 [a5 + 0xa0]\n 12508: a0 = u64 [s1 + 0xf8]\n 12512: i32 a0 = a0 + 0x20\n 12515: a5 = s1 + 0x100\n 12519: u64 [a5 + 0xb8] = a4\n 12523: u64 [a5 + 0xb0] = a3\n 12527: u64 [a5 + 0xa8] = a1\n 12531: a1 = s1 + 0x1a0\n 12535: u64 [a5 + 0xa0] = a2\n 12539: ra = 414, jump @19\n      : @443 [@dyn 207] (gas: 3)\n 12545: a0 = u64 [s1 + 0x90]\n 12549: ecalli 3 // 'caller'\n 12551: fallthrough\n      : @444 (gas: 30)\n 12552: t0 = u64 [s1 + 0xb8]\n 12556: ra = u64 [s1 + 0xf8]\n 12560: t1 = t0 <u ra\n 12563: a5 = u64 [s1 + 0xf0]\n 12567: a1 = u64 [s1 + 0xb0]\n 12571: a3 = a1 ^ a5\n 12574: a2 = a1 <u a5\n 12577: a2 = t1 if a3 == 0\n 12580: a3 = u64 [s1 + 0xe0]\n 12584: a4 = u64 [s1 + 0xa0]\n 12588: a0 = a4 - a3\n 12591: t2 = a4 <u a3\n 12594: a4 = u64 [s1 + 0xe8]\n 12598: a3 = u64 [s1 + 0xa8]\n 12602: a4 = a3 - a4\n 12605: a4 = a4 - t2\n 12608: a3 = a0 <u a2\n 12611: a4 = a4 - a3\n 12614: a2 = a0 - a2\n 12617: a1 = a1 - a5\n 12620: a0 = a1 - t1\n 12623: a1 = t0 - ra\n 12626: a0 = a0 | a4\n 12629: a3 = a1 | a2\n 12632: a3 = a3 | a0\n 12635: a0 = a0 | a2\n 12638: a3 = a3 >> 0x20\n 12641: a0 = a0 << 0x20\n 12644: a0 = a0 | a3\n 12647: jump @446 if a0 == 0\n      : @445 (gas: 1)\n 12650: jump @609\n      : @446 (gas: 42)\n 12653: a3 = u64 [s1 + 0x98]\n 12657: a0 = u64 [a3 + 0x8]\n 12660: a2 = i32 [a3 + 0x10]\n 12663: a3 = u64 [a3]\n 12665: a4 = reverse a0\n 12667: a0 = a4 << 0x20\n 12670: a2 = reverse a2\n 12672: a2 = a2 >> 0x20\n 12675: t0 = a2 | a0\n 12678: a4 = a4 >> 0x20\n 12681: a3 = reverse a3\n 12683: a2 = a3 << 0x20\n 12686: t1 = a2 | a4\n 12689: a3 = a3 >> 0x20\n 12692: u64 [s1 + 344] = 0\n 12696: a0 = u64 [s1 + 0x88]\n 12700: u64 [s1 + 0x170] = a0\n 12704: a0 = u64 [s1 + 0xc0]\n 12708: u64 [s1 + 0x168] = a0\n 12712: a0 = u64 [s1 + 0xd0]\n 12716: u64 [s1 + 0x160] = a0\n 12720: a4 = u64 [0x20050]\n 12725: a5 = u64 [0x20058]\n 12730: a0 = u64 [0x20060]\n 12735: a2 = u64 [0x20068]\n 12740: u64 [s1 + 0x198] = a4\n 12744: a4 = s1 + 0x100\n 12748: u64 [a4 + 0x90] = a5\n 12752: u64 [a4 + 0x88] = a0\n 12756: u64 [a4 + 0x80] = a2\n 12760: u64 [a4 + 0x50] = a3\n 12763: a0 = u64 [s1 + 0xd8]\n 12767: u64 [a4 + 0x78] = a0\n 12770: u64 [s1 + 0x148] = t1\n 12774: a2 = s1 + 0x180\n 12778: a3 = s1 + 0x160\n 12782: a4 = s1 + 0x140\n 12786: u64 [s1 + 0x140] = t0\n 12790: a0 = u64 [s1 + 0xf8]\n 12794: ra = 0x1a0\n 12798: t0 = 0x8\n 12801: jump @1046\n      : @447 [@dyn 208] (gas: 6)\n 12804: a0 = 0\n 12806: a1 = u64 [s1 + 0xc8]\n 12810: a2 = 0\n 12812: ecalli 8 // 'seal_return'\n 12814: a1 = 0x20080\n 12819: jump @739\n      : @448 (gas: 9)\n 12822: u64 [a2 + 1600] = 0\n 12826: u64 [a2 + 1592] = 0\n 12830: u64 [a2 + 1584] = 0\n 12834: u64 [a2 + 1576] = 0\n 12838: a0 = s1 + 0x2000\n 12842: i32 a0 = a0 + 0x6a0\n 12846: ra = 0x1a2\n 12850: ecalli 11 // 'value_transferred'\n 12852: fallthrough\n      : @449 [@dyn 209] (gas: 3)\n 12853: a3 = s1 + 0x2078\n 12857: a4 = a3 + 0x600\n 12861: t0 = 420, jump @1044\n      : @450 [@dyn 210] (gas: 1)\n 12867: jump @452 if a0 == 0\n      : @451 (gas: 1)\n 12870: jump @757\n      : @452 (gas: 3)\n 12873: a0 = u64 [s1 + 0xf8]\n 12877: a0 = i32 [a0]\n 12879: jump @454 if a0 >u 35\n      : @453 (gas: 1)\n 12883: jump @758\n      : @454 (gas: 6)\n 12886: a0 = s1 + 0x2000\n 12890: i32 a0 = a0 + 0x6c0\n 12894: a1 = 0x4\n 12897: ra = 0x1a6\n 12901: ecalli 1 // 'call_data_load'\n 12903: fallthrough\n      : @455 [@dyn 211] (gas: 6)\n 12904: a5 = s1 + 0x2078\n 12908: a3 = a5 + 0x600\n 12912: a0 = u64 [a3 + 0x60]\n 12915: a1 = u64 [a3 + 0x58]\n 12918: a2 = u64 [a3 + 0x50]\n 12921: t0 = 424, jump @1027\n      : @456 [@dyn 212] (gas: 1)\n 12927: jump @458 if a4 != 0\n      : @457 (gas: 1)\n 12930: jump @759\n      : @458 (gas: 25)\n 12933: a3 = u64 [a5 + 0x648]\n 12937: a4 = u64 [s1 + 0xf8]\n 12941: t0 = u32 [a4]\n 12943: t1 = a5\n 12945: a5 = a3 + 0x4\n 12948: a3 = a5 <u a3\n 12951: a4 = a2 + a3\n 12954: a2 = a4 <u a2\n 12957: a2 = a3 if a3 == 0\n 12960: a2 = a2 + a1\n 12963: a1 = a2 <u a1\n 12966: a3 = a0 + a1\n 12969: u64 [t1 + 160] = 0\n 12973: u64 [t1 + 152] = 0\n 12977: u64 [t1 + 144] = 0\n 12981: u64 [t1 + 0x88] = t0\n 12985: u64 [t1 + 0xa8] = a5\n 12989: a5 = t1\n 12991: u64 [a5 + 0xb0] = a4\n 12995: u64 [a5 + 0xb8] = a2\n 12999: a0 = s1 + 0x2140\n 13003: a1 = s1 + 0x2120\n 13007: a2 = s1 + 0x2100\n 13011: u64 [a5 + 0xc0] = a3\n 13015: ra = 426, jump @820\n      : @459 [@dyn 213] (gas: 12)\n 13021: a1 = s1 + 0x2078\n 13025: a0 = u64 [a1 + 0xe0]\n 13029: u64 [s1 + 0xc8] = a0\n 13033: a0 = u64 [a1 + 0xd8]\n 13037: u64 [s1 + 0xc0] = a0\n 13041: a0 = u64 [a1 + 0xd0]\n 13045: u64 [s1 + 0xd0] = a0\n 13049: a0 = u64 [a1 + 0xc8]\n 13053: u64 [s1 + 0xd8] = a0\n 13057: a0 = s1 + 0x20e0\n 13061: a1 = 0x40\n 13064: ra = 428, jump @17\n      : @460 [@dyn 214] (gas: 18)\n 13070: a0 = s1 + 0x2078\n 13074: a1 = u64 [a0 + 0x80]\n 13078: u64 [s1 + 0xe8] = a1\n 13082: a2 = u64 [a0 + 0x78]\n 13085: u64 [s1 + 0xe0] = a2\n 13089: a4 = u64 [a0 + 0x70]\n 13092: u64 [s1 + 0xf0] = a4\n 13096: a3 = u64 [a0 + 0x68]\n 13099: u64 [s1 + 0xf8] = a3\n 13103: u64 [a0 + 0x60] = a1\n 13106: u64 [a0 + 0x58] = a2\n 13109: u64 [a0 + 0x50] = a4\n 13112: a1 = a0\n 13114: a0 = s1 + 0x20c0\n 13118: u64 [a1 + 0x48] = a3\n 13121: ra = 0x1ae\n 13125: t0 = 0x30c\n 13129: jump @1026\n      : @461 [@dyn 215] (gas: 6)\n 13132: a0 = u64 [s1 + 0xe8]\n 13136: a1 = u64 [s1 + 0xf0]\n 13140: a0 = a0 | a1\n 13143: a2 = u64 [s1 + 0xe0]\n 13147: a1 = u64 [s1 + 0xf8]\n 13151: t0 = 432, jump @1036\n      : @462 [@dyn 216] (gas: 1)\n 13157: jump @464 if a0 == 0\n      : @463 (gas: 1)\n 13160: jump @609\n      : @464 (gas: 8)\n 13163: a0 = s1 + 0x2078\n 13167: u64 [a0 + 64] = 0\n 13170: u64 [a0 + 56] = 0\n 13173: u64 [a0 + 48] = 0\n 13176: a1 = s1 + 0x20a0\n 13180: u64 [a0 + 40] = 0x60\n 13184: a0 = u64 [s1 + 0xf8]\n 13188: ra = 434, jump @19\n      : @465 [@dyn 217] (gas: 11)\n 13194: a0 = u64 [s1 + 0xe8]\n 13198: a2 = u64 [s1 + 0xe0]\n 13202: a2 = a2 | a0\n 13205: a3 = 0x100000000\n 13215: a0 = 0xffffffe0\n 13225: a1 = u64 [s1 + 0xf8]\n 13229: a0 = a1 <u a0\n 13232: a1 = u64 [s1 + 0xf0]\n 13236: a0 = 0 if a1 != 0\n 13238: a0 = 0 if a2 != 0\n 13240: jump @467 if a0 != 0\n      : @466 (gas: 1)\n 13243: jump @609\n      : @467 (gas: 13)\n 13246: a0 = u64 [s1 + 0xf8]\n 13250: i32 a0 = a0 + 0x20\n 13253: a1 = s1 + 0x2078\n 13257: u64 [s1 + 0xe8] = a2\n 13261: a2 = a1\n 13263: a4 = 0\n 13265: u64 [a1 + 32] = 0\n 13268: u64 [a1 + 24] = 0\n 13271: u64 [a2 + 8] = 0x60\n 13275: a1 = s1 + 0x2080\n 13279: u64 [a2 + 16] = 0\n 13282: u64 [s1 + 0xe0] = a3\n 13286: ra = 436, jump @19\n      : @468 [@dyn 218] (gas: 9)\n 13292: a2 = u64 [s1 + 0xe8]\n 13296: a0 = u64 [s1 + 0xe0]\n 13300: a0 = a0 + 0xffffffffffffffc0\n 13303: a1 = u64 [s1 + 0xf8]\n 13307: a0 = a1 <u a0\n 13310: a1 = u64 [s1 + 0xf0]\n 13314: a0 = 0 if a1 != 0\n 13316: a0 = 0 if a2 != 0\n 13318: jump @470 if a0 != 0\n      : @469 (gas: 1)\n 13321: jump @609\n      : @470 (gas: 9)\n 13324: a0 = u64 [s1 + 0xf8]\n 13328: i32 a0 = a0 + 0x40\n 13331: a2 = s1 + 0x2078\n 13335: u64 [a2 + 0] = 0\n 13337: u64 [a2 + 4294967288] = 0\n 13340: u64 [a2 + 4294967280] = 0\n 13343: a1 = s1 + 0x2060\n 13347: u64 [a2 + 4294967272] = 0\n 13350: ra = 438, jump @19\n      : @471 [@dyn 219] (gas: 2)\n 13356: a0 = 0xffffffa0\n 13366: t0 = 440, jump @1020\n      : @472 [@dyn 220] (gas: 1)\n 13372: jump @474 if a0 != 0\n      : @473 (gas: 1)\n 13375: jump @609\n      : @474 (gas: 5)\n 13378: a0 = u64 [s1 + 0xf8]\n 13382: i32 a0 = a0 + 0x60\n 13385: t0 = 0x1ba\n 13389: a2 = s1 + 0x1878\n 13393: fallthrough\n      : @475 [@dyn 221] (gas: 6)\n 13394: u64 [a2 + 2016] = 0\n 13398: u64 [a2 + 2008] = 0\n 13402: u64 [a2 + 2000] = 0\n 13406: a1 = s1 + 0x2040\n 13410: u64 [a2 + 1992] = 0\n 13414: ra = 444, jump @19\n      : @476 [@dyn 222] (gas: 3)\n 13420: a0 = s1 + 0x2020\n 13424: a1 = 0x40\n 13427: ra = 446, jump @17\n      : @477 [@dyn 223] (gas: 12)\n 13433: a1 = u64 [s1 + 0xd8]\n 13437: a4 = u64 [s1 + 0xc0]\n 13441: a0 = a1 | a4\n 13444: a2 = u64 [s1 + 0xd0]\n 13448: a3 = u64 [s1 + 0xc8]\n 13452: a2 = a2 | a3\n 13455: a0 = a0 | a2\n 13458: a0 = a0 >> 0x20\n 13461: a2 = a2 | a4\n 13464: a2 = a2 << 0x20\n 13467: a0 = a0 | a2\n 13470: jump @479 if a0 == 0\n      : @478 (gas: 1)\n 13473: jump @609\n      : @479 (gas: 12)\n 13476: a0 = s1 + 0x1878\n 13480: a3 = a0 + 0x700\n 13484: a2 = u64 [a3 + 0xc0]\n 13488: u64 [s1 + 0xf0] = a2\n 13492: a2 = u64 [a3 + 0xb8]\n 13496: u64 [s1 + 0xe8] = a2\n 13500: a2 = u64 [a3 + 0xb0]\n 13504: u64 [s1 + 0xe0] = a2\n 13508: a0 = u64 [a3 + 0xa8]\n 13512: u64 [s1 + 0xf8] = a0\n 13516: a0 = s1 + 0x2000\n 13520: ra = 448, jump @17\n      : @480 [@dyn 224] (gas: 6)\n 13526: a2 = u64 [s1 + 0xe8]\n 13530: a0 = u64 [s1 + 0xf8]\n 13534: a0 = a0 | a2\n 13537: a1 = u64 [s1 + 0xf0]\n 13541: a3 = u64 [s1 + 0xe0]\n 13545: t0 = 450, jump @1022\n      : @481 [@dyn 225] (gas: 1)\n 13551: jump @483 if a0 == 0\n      : @482 (gas: 1)\n 13554: jump @609\n      : @483 (gas: 10)\n 13557: a0 = u64 [s1 + 0xc8]\n 13561: a1 = u64 [s1 + 0xc0]\n 13565: a0 = a0 | a1\n 13568: a1 = 0xffffffe0\n 13578: a3 = u64 [s1 + 0xd8]\n 13582: a1 = a3 <u a1\n 13585: a2 = u64 [s1 + 0xd0]\n 13589: a1 = 0 if a2 != 0\n 13591: a1 = 0 if a0 != 0\n 13593: jump @485 if a1 != 0\n      : @484 (gas: 1)\n 13596: jump @609\n      : @485 (gas: 15)\n 13599: a2 = a3\n 13601: a0 = s1 + 0x1878\n 13605: t0 = u64 [a0 + 0x7a0]\n 13609: a3 = a0 + 0x700\n 13613: a5 = u64 [a3 + 0x98]\n 13617: a1 = u64 [a3 + 0x88]\n 13621: a4 = u64 [a3 + 0x90]\n 13625: a0 = a1 | a5\n 13628: a3 = a4 | t0\n 13631: a0 = a0 | a3\n 13634: a0 = a0 >> 0x20\n 13637: a3 = a3 | a5\n 13640: a3 = a3 << 0x20\n 13643: a0 = a0 | a3\n 13646: jump @487 if a0 == 0\n      : @486 (gas: 1)\n 13649: jump @609\n      : @487 (gas: 8)\n 13652: i32 a0 = a2 + 0x20\n 13655: u64 [s1 + 0xb8] = a0\n 13659: a0 = u64 [s1 + 0xf8]\n 13663: u64 [s1 + 0xd8] = a1\n 13667: u64 [s1 + 0xd0] = a4\n 13671: u64 [s1 + 0xc8] = t0\n 13675: u64 [s1 + 0xc0] = a5\n 13679: ra = 452, jump @29\n      : @488 [@dyn 226] (gas: 4)\n 13685: u64 [s1 + 0xb0] = a0\n 13689: a0 = u64 [s1 + 0xb8]\n 13693: a1 = u64 [s1 + 0xd8]\n 13697: ra = 454, jump @29\n      : @489 [@dyn 227] (gas: 4)\n 13703: a1 = a0\n 13705: a0 = u64 [s1 + 0xb0]\n 13709: a2 = u64 [s1 + 0xd8]\n 13713: ra = 456, jump @0\n      : @490 [@dyn 228] (gas: 20)\n 13719: t2 = u64 [s1 + 0xc0]\n 13723: t1 = u64 [s1 + 0xc8]\n 13727: t0 = u64 [s1 + 0xd0]\n 13731: a0 = u64 [s1 + 0xf8]\n 13735: a1 = u64 [s1 + 0xd8]\n 13739: a0 = a0 + a1\n 13742: a1 = a0 <u a1\n 13745: a2 = u64 [s1 + 0xe0]\n 13749: a2 = a2 + t0\n 13752: a2 = a2 + a1\n 13755: a3 = a2 ^ t0\n 13758: a4 = a2 <u t0\n 13761: a4 = a1 if a3 == 0\n 13764: a1 = u64 [s1 + 0xe8]\n 13768: a1 = a1 + t2\n 13771: a3 = a1 <u t2\n 13774: a5 = u64 [s1 + 0xf0]\n 13778: a5 = a5 + t1\n 13781: a3 = a3 + a5\n 13784: t0 = 458, jump @1014\n      : @491 [@dyn 229] (gas: 1)\n 13790: jump @493 if a1 == 0\n      : @492 (gas: 1)\n 13793: jump @609\n      : @493 (gas: 3)\n 13796: t0 = 0x1cc\n 13800: a2 = s1 + 0x1878\n 13804: fallthrough\n      : @494 [@dyn 230] (gas: 6)\n 13805: u64 [a2 + 1920] = 0\n 13809: u64 [a2 + 1912] = 0\n 13813: u64 [a2 + 1904] = 0\n 13817: a1 = s1 + 0x1fe0\n 13821: u64 [a2 + 1896] = 0\n 13825: ra = 462, jump @19\n      : @495 [@dyn 231] (gas: 10)\n 13831: a0 = u64 [s1 + 0xc8]\n 13835: a1 = u64 [s1 + 0xc0]\n 13839: a0 = a0 | a1\n 13842: a1 = 0xffffffe0\n 13852: a2 = u64 [s1 + 0xd8]\n 13856: a1 = a2 <u a1\n 13859: a3 = u64 [s1 + 0xd0]\n 13863: a1 = 0 if a3 != 0\n 13865: a1 = 0 if a0 != 0\n 13867: jump @497 if a1 != 0\n      : @496 (gas: 1)\n 13870: jump @609\n      : @497 (gas: 4)\n 13873: i32 a1 = a2 + 0x20\n 13876: u64 [s1 + 0xf0] = a1\n 13880: a0 = u64 [s1 + 0xf8]\n 13884: ra = 464, jump @29\n      : @498 [@dyn 232] (gas: 24)\n 13890: a1 = sp + 0xffffffffffffffe0\n 13893: a1 = a1 & 0xffffffffffffffe0\n 13896: u64 [s1 + 0xf8] = a1\n 13900: sp = a1\n 13902: i32 a0 = a0 + 0\n 13904: i32 a2 = a1 + 0\n 13906: a1 = u64 [s1 + 0xf0]\n 13910: ecalli 6 // 'hash_keccak_256'\n 13912: a3 = u64 [s1 + 0xf8]\n 13916: a0 = u64 [a3 + 0x18]\n 13919: a1 = u64 [a3 + 0x10]\n 13922: a2 = u64 [a3 + 0x8]\n 13925: a3 = u64 [a3]\n 13927: a0 = reverse a0\n 13929: u64 [s1 + 0xd0] = a0\n 13933: a0 = reverse a1\n 13935: u64 [s1 + 0xd8] = a0\n 13939: a0 = reverse a2\n 13941: u64 [s1 + 0xe8] = a0\n 13945: a0 = reverse a3\n 13947: u64 [s1 + 0xe0] = a0\n 13951: a0 = s1 + 0x1fc0\n 13955: a1 = 0x40\n 13958: ra = 466, jump @17\n      : @499 [@dyn 233] (gas: 18)\n 13964: a3 = s1 + 0x1878\n 13968: a5 = a3 + 0x700\n 13972: a0 = u64 [a5 + 0x60]\n 13975: u64 [s1 + 0xc8] = a0\n 13979: a1 = u64 [a5 + 0x58]\n 13982: u64 [s1 + 0xc0] = a1\n 13986: a4 = u64 [a5 + 0x50]\n 13989: u64 [s1 + 0xf0] = a4\n 13993: a2 = u64 [a5 + 0x48]\n 13996: u64 [s1 + 0xf8] = a2\n 14000: u64 [a5 + 0x40] = a0\n 14003: u64 [a5 + 0x38] = a1\n 14006: u64 [a5 + 0x30] = a4\n 14009: a0 = s1 + 0x1fa0\n 14013: u64 [a5 + 0x28] = a2\n 14016: ra = 0x1d4\n 14020: t0 = 0x30c\n 14024: jump @1026\n      : @500 [@dyn 234] (gas: 13)\n 14027: a0 = u64 [s1 + 0xe0]\n 14031: a1 = s1 + 0x1878\n 14035: u64 [a1 + 0x700] = a0\n 14039: a0 = u64 [s1 + 0xe8]\n 14043: u64 [a1 + 0x6f8] = a0\n 14047: a0 = u64 [s1 + 0xd8]\n 14051: u64 [a1 + 0x6f0] = a0\n 14055: a3 = a1\n 14057: a0 = s1 + 0x1f80\n 14061: a1 = s1 + 0x1f60\n 14065: a2 = u64 [s1 + 0xd0]\n 14069: u64 [a3 + 0x6e8] = a2\n 14073: ra = 470, jump @857\n      : @501 [@dyn 235] (gas: 6)\n 14079: a0 = u64 [s1 + 0xc8]\n 14083: a1 = u64 [s1 + 0xf0]\n 14087: a0 = a0 | a1\n 14090: a2 = u64 [s1 + 0xc0]\n 14094: a1 = u64 [s1 + 0xf8]\n 14098: t0 = 472, jump @1036\n      : @502 [@dyn 236] (gas: 1)\n 14104: jump @504 if a0 == 0\n      : @503 (gas: 1)\n 14107: jump @609\n      : @504 (gas: 14)\n 14110: a4 = s1 + 0x1878\n 14114: a5 = a4 + 0x700\n 14118: a0 = u64 [a5 + 0x20]\n 14121: a1 = u64 [a5 + 0x18]\n 14124: a2 = u64 [a5 + 0x10]\n 14127: a3 = u64 [a5 + 0x8]\n 14130: a5 = a4 + 0x600\n 14134: u64 [a5 + 0xc8] = a3\n 14138: u64 [a5 + 0xd0] = a2\n 14142: u64 [a5 + 0xd8] = a1\n 14146: a1 = s1 + 0x1f40\n 14150: u64 [a5 + 0xe0] = a0\n 14154: a0 = u64 [s1 + 0xf8]\n 14158: ra = 474, jump @19\n      : @505 [@dyn 237] (gas: 21)\n 14164: a0 = u64 [s1 + 0xd0]\n 14168: a0 = a0 + 0x1\n 14171: a1 = a0 <u 0x1\n 14174: a2 = u64 [s1 + 0xd8]\n 14178: a1 = a1 + a2\n 14181: a2 = a0 | a1\n 14184: a2 = a2 <u 0x1\n 14187: a3 = u64 [s1 + 0xe8]\n 14191: a2 = a2 + a3\n 14194: a3 = a2 <u a3\n 14197: a4 = u64 [s1 + 0xe0]\n 14201: a3 = a3 + a4\n 14204: a4 = s1 + 0x1878\n 14208: a5 = a4 + 0x600\n 14212: u64 [a5 + 0x98] = a2\n 14216: u64 [a5 + 0x90] = a1\n 14220: u64 [a5 + 0x88] = a0\n 14224: a0 = s1 + 0x1f20\n 14228: a1 = s1 + 0x1f00\n 14232: u64 [a5 + 0xa0] = a3\n 14236: ra = 476, jump @857\n      : @506 [@dyn 238] (gas: 13)\n 14242: a0 = u64 [s1 + 0xc8]\n 14246: a2 = u64 [s1 + 0xc0]\n 14250: a2 = a2 | a0\n 14253: a0 = 0x100000000\n 14263: u64 [s1 + 0xc0] = a0\n 14267: a0 = 0xffffffe0\n 14277: a1 = u64 [s1 + 0xf8]\n 14281: a0 = a1 <u a0\n 14284: a1 = u64 [s1 + 0xf0]\n 14288: a0 = 0 if a1 != 0\n 14290: u64 [s1 + 0xc8] = a2\n 14294: a0 = 0 if a2 != 0\n 14296: jump @508 if a0 != 0\n      : @507 (gas: 1)\n 14299: jump @609\n      : @508 (gas: 15)\n 14302: a4 = s1 + 0x1878\n 14306: t0 = u64 [a4 + 0x6c0]\n 14310: a5 = a4 + 0x600\n 14314: a1 = u64 [a5 + 0xb8]\n 14318: a2 = u64 [a5 + 0xb0]\n 14322: a3 = u64 [a5 + 0xa8]\n 14326: a0 = u64 [s1 + 0xf8]\n 14330: i32 a0 = a0 + 0x20\n 14333: u64 [a5 + 0x68] = a3\n 14336: u64 [a5 + 0x70] = a2\n 14339: u64 [a5 + 0x78] = a1\n 14342: a1 = s1 + 0x1ee0\n 14346: u64 [a4 + 0x680] = t0\n 14350: u64 [s1 + 0xb8] = a0\n 14354: ra = 478, jump @19\n      : @509 [@dyn 239] (gas: 3)\n 14360: a1 = u64 [s1 + 0xd0]\n 14364: a0 = a1 + 0x2\n 14367: t0 = 480, jump @1021\n      : @510 [@dyn 240] (gas: 7)\n 14373: u64 [a5 + 0x70] = a2\n 14376: u64 [a5 + 0x68] = a0\n 14379: u64 [a5 + 0x78] = a3\n 14382: u64 [a5 + 0x80] = a1\n 14386: a0 = s1 + 0x1ec0\n 14390: a1 = s1 + 0x26e0\n 14394: ra = 482, jump @21\n      : @511 [@dyn 241] (gas: 9)\n 14400: a0 = u64 [s1 + 0xc0]\n 14404: a0 = a0 + 0xffffffffffffffc0\n 14407: a1 = u64 [s1 + 0xf8]\n 14411: a0 = a1 <u a0\n 14414: a1 = u64 [s1 + 0xf0]\n 14418: a0 = 0 if a1 != 0\n 14420: a1 = u64 [s1 + 0xc8]\n 14424: a0 = 0 if a1 != 0\n 14426: jump @513 if a0 != 0\n      : @512 (gas: 1)\n 14429: jump @609\n      : @513 (gas: 16)\n 14432: a3 = s1 + 0x1878\n 14436: a5 = a3 + 0x600\n 14440: a0 = u64 [a5 + 0x58]\n 14443: a1 = u64 [a5 + 0x50]\n 14446: a2 = u64 [a5 + 0x48]\n 14449: a0 = a0 << 0x20\n 14452: a4 = a0 >> 0x20\n 14455: a0 = u64 [s1 + 0xf8]\n 14459: i32 a0 = a0 + 0x40\n 14462: u64 [a3 + 1600] = 0\n 14466: u64 [a5 + 0x28] = a2\n 14469: u64 [a5 + 0x30] = a1\n 14472: a1 = s1 + 0x1ea0\n 14476: u64 [a5 + 0x38] = a4\n 14479: u64 [s1 + 0xc0] = a0\n 14483: ra = 484, jump @19\n      : @514 [@dyn 242] (gas: 3)\n 14489: a1 = u64 [s1 + 0xd0]\n 14493: a0 = a1 + 0x3\n 14496: t0 = 486, jump @1021\n      : @515 [@dyn 243] (gas: 7)\n 14502: u64 [a5 + 0x98] = a3\n 14506: u64 [a5 + 0x90] = a2\n 14510: u64 [a5 + 0x88] = a0\n 14514: u64 [a5 + 0xa0] = a1\n 14518: a0 = s1 + 0x1e80\n 14522: a1 = s1 + 0x2700\n 14526: ra = 488, jump @21\n      : @516 [@dyn 244] (gas: 8)\n 14532: a0 = 0xffffffa0\n 14542: a1 = u64 [s1 + 0xf8]\n 14546: a0 = a1 <u a0\n 14549: a1 = u64 [s1 + 0xf0]\n 14553: a0 = 0 if a1 != 0\n 14555: a1 = u64 [s1 + 0xc8]\n 14559: a0 = 0 if a1 != 0\n 14561: jump @609 if a0 == 0\n      : @517 (gas: 14)\n 14565: a5 = s1 + 0x1878\n 14569: a4 = u64 [a5 + 0x620]\n 14573: a1 = u64 [a5 + 0x618]\n 14577: a2 = u64 [a5 + 0x610]\n 14581: a3 = u64 [a5 + 0x608]\n 14585: a0 = u64 [s1 + 0xf8]\n 14589: i32 a0 = a0 + 0x60\n 14592: u64 [a5 + 0x5e8] = a3\n 14596: u64 [a5 + 0x5f0] = a2\n 14600: u64 [a5 + 0x5f8] = a1\n 14604: a1 = s1 + 0x1e60\n 14608: u64 [a5 + 0x600] = a4\n 14612: u64 [s1 + 0xd0] = a0\n 14616: ra = 490, jump @19\n      : @518 [@dyn 245] (gas: 3)\n 14622: a0 = s1 + 0x1e40\n 14626: a1 = 0x40\n 14629: ra = 492, jump @17\n      : @519 [@dyn 246] (gas: 3)\n 14635: t0 = 0x1ee\n 14639: a1 = s1 + 0x1878\n 14643: fallthrough\n      : @520 [@dyn 247] (gas: 17)\n 14644: a4 = a1 + 0x500\n 14648: a2 = u64 [a4 + 0xe0]\n 14652: a3 = u64 [a4 + 0xd8]\n 14656: a0 = u64 [a4 + 0xd0]\n 14660: a1 = u64 [a4 + 0xc8]\n 14664: u64 [s1 + 0xe8] = a0\n 14668: u64 [s1 + 0xe0] = a2\n 14672: a0 = a0 | a2\n 14675: u64 [s1 + 0xf0] = a1\n 14679: a1 = a1 | a3\n 14682: a1 = a1 | a0\n 14685: a1 = a1 >> 0x20\n 14688: u64 [s1 + 0xd8] = a3\n 14692: a0 = a0 | a3\n 14695: a0 = a0 << 0x20\n 14698: a0 = a0 | a1\n 14701: jump @609 if a0 != 0\n      : @521 (gas: 8)\n 14705: a2 = s1 + 0x1878\n 14709: u64 [a2 + 1472] = 0\n 14713: u64 [a2 + 1464] = 0\n 14717: u64 [a2 + 1456] = 0\n 14721: a1 = s1 + 0x1e20\n 14725: u64 [a2 + 1448] = 0x20\n 14730: a0 = u64 [s1 + 0xf0]\n 14734: ra = 496, jump @19\n      : @522 [@dyn 248] (gas: 3)\n 14740: a0 = s1 + 0x1e00\n 14744: a1 = u64 [s1 + 0xf8]\n 14748: ra = 498, jump @17\n      : @523 [@dyn 249] (gas: 13)\n 14754: a0 = u64 [s1 + 0xe0]\n 14758: a1 = u64 [s1 + 0xd8]\n 14762: a2 = a1 | a0\n 14765: a0 = 0x100000000\n 14775: u64 [s1 + 0xc8] = a0\n 14779: a0 = 0xffffffe0\n 14789: a1 = u64 [s1 + 0xf0]\n 14793: a0 = a1 <u a0\n 14796: a1 = u64 [s1 + 0xe8]\n 14800: a0 = 0 if a1 != 0\n 14802: u64 [s1 + 0xf8] = a2\n 14806: a0 = 0 if a2 != 0\n 14808: jump @609 if a0 == 0\n      : @524 (gas: 18)\n 14812: a2 = s1 + 0x1878\n 14816: a3 = a2 + 0x500\n 14820: a0 = u64 [a3 + 0xa0]\n 14824: u64 [s1 + 0x98] = a0\n 14828: a0 = u64 [a3 + 0x98]\n 14832: u64 [s1 + 0xa0] = a0\n 14836: a0 = u64 [a3 + 0x90]\n 14840: u64 [s1 + 0xa8] = a0\n 14844: a0 = u64 [a3 + 0x88]\n 14848: u64 [s1 + 0xb0] = a0\n 14852: a0 = u64 [s1 + 0xf0]\n 14856: i32 a0 = a0 + 0x20\n 14859: u64 [a2 + 1408] = 0\n 14863: u64 [a2 + 1400] = 0\n 14867: u64 [a3 + 104] = 0x80\n 14872: a1 = s1 + 0x1de0\n 14876: u64 [a2 + 1392] = 0\n 14880: ra = 500, jump @19\n      : @525 [@dyn 250] (gas: 5)\n 14886: a1 = u64 [s1 + 0xf0]\n 14890: a0 = a1 + 0xa0\n 14894: a1 = a0 <u a1\n 14897: a3 = u64 [s1 + 0xe8]\n 14901: t0 = 502, jump @1030\n      : @526 [@dyn 251] (gas: 24)\n 14907: a1 = u64 [s1 + 0xd8]\n 14911: a3 = a3 + a1\n 14914: a1 = a3 <u a1\n 14917: a4 = u64 [s1 + 0xe0]\n 14921: a4 = a4 + a1\n 14924: a1 = s1 + 0x1878\n 14928: a5 = a1 + 0x500\n 14932: u64 [a5 + 0x10] = a2\n 14935: u64 [a5 + 0x8] = a0\n 14938: a0 = u64 [s1 + 0x98]\n 14942: u64 [a5 + 0x40] = a0\n 14945: a0 = u64 [s1 + 0xa0]\n 14949: u64 [a5 + 0x38] = a0\n 14952: a0 = u64 [s1 + 0xa8]\n 14956: u64 [a5 + 0x30] = a0\n 14959: a0 = u64 [s1 + 0xb0]\n 14963: u64 [a5 + 0x28] = a0\n 14966: u64 [a5 + 0x18] = a3\n 14969: a3 = a1\n 14971: a0 = s1 + 0x1dc0\n 14975: a1 = s1 + 0x1da0\n 14979: a2 = s1 + 0x1d80\n 14983: u64 [a3 + 0x520] = a4\n 14987: ra = 504, jump @881\n      : @527 [@dyn 252] (gas: 3)\n 14993: t0 = 0x1fa\n 14997: a1 = s1 + 0x1878\n 15001: fallthrough\n      : @528 [@dyn 253] (gas: 12)\n 15002: a2 = a1 + 0x500\n 15006: a0 = u64 [a2 + 0x60]\n 15009: u64 [s1 + 0x98] = a0\n 15013: a0 = u64 [a2 + 0x58]\n 15016: u64 [s1 + 0xa0] = a0\n 15020: a0 = u64 [a2 + 0x50]\n 15023: u64 [s1 + 0xa8] = a0\n 15027: a0 = u64 [a2 + 0x48]\n 15030: u64 [s1 + 0xb0] = a0\n 15034: a0 = s1 + 0x1d60\n 15038: a1 = u64 [s1 + 0xb8]\n 15042: ra = 508, jump @17\n      : @529 [@dyn 254] (gas: 3)\n 15048: a0 = u64 [s1 + 0xc8]\n 15052: a0 = a0 + 0xffffffffffffffc0\n 15055: t0 = 510, jump @1032\n      : @530 [@dyn 255] (gas: 1)\n 15061: jump @609 if a0 == 0\n      : @531 (gas: 54)\n 15065: a1 = s1 + 0x1878\n 15069: a0 = u64 [a1 + 0x500]\n 15073: u64 [s1 + 0xb8] = a0\n 15077: a0 = u64 [a1 + 0x4f8]\n 15081: u64 [s1 + 0xc8] = a0\n 15085: a0 = u64 [s1 + 0xf0]\n 15089: a1 = u64 [s1 + 0xb0]\n 15093: a2 = a1 <u a0\n 15096: t2 = a0\n 15098: a3 = u64 [s1 + 0xe8]\n 15102: a4 = u64 [s1 + 0xa8]\n 15106: t0 = a4 ^ a3\n 15109: a0 = a4 <u a3\n 15112: a0 = a2 if t0 == 0\n 15115: t1 = u64 [s1 + 0xd8]\n 15119: t0 = u64 [s1 + 0xa0]\n 15123: ra = t0 - t1\n 15126: a3 = a4 - a3\n 15129: a4 = a3 - a2\n 15132: a3 = a1 - t2\n 15135: a2 = a3 + 0xffffffffffffffe0\n 15138: a5 = a2 <u a3\n 15141: a3 = a4 + a5\n 15144: a3 = a3 + 0xffffffffffffffff\n 15147: a1 = a3 ^ a4\n 15150: a4 = a3 <u a4\n 15153: a4 = a5 if a1 == 0\n 15156: t0 = t0 <u t1\n 15159: a5 = u64 [s1 + 0xe0]\n 15163: a1 = u64 [s1 + 0x98]\n 15167: a5 = a1 - a5\n 15170: a5 = a5 - t0\n 15173: a1 = ra <u a0\n 15176: a5 = a5 - a1\n 15179: t0 = s1 + 0x1878\n 15183: a1 = u64 [t0 + 0x4f0]\n 15187: u64 [s1 + 0x88] = a1\n 15191: a0 = ra - a0\n 15194: a1 = a0 <u 0x1\n 15197: a5 = a5 - a1\n 15200: a1 = u64 [t0 + 0x4e8]\n 15204: u64 [s1 + 0x90] = a1\n 15208: a0 = a0 + 0xffffffffffffffff\n 15211: a4 = a4 + a0\n 15214: a0 = a4 <u a0\n 15217: a5 = a5 + a0\n 15220: i32 a0 = t2 + 0x40\n 15223: u64 [t0 + 0x4c8] = a2\n 15227: a2 = t0 + 0x400\n 15231: u64 [a2 + 0xd0] = a3\n 15235: u64 [a2 + 0xd8] = a4\n 15239: a1 = s1 + 0x1d40\n 15243: u64 [a2 + 0xe0] = a5\n 15247: ra = 512, jump @19\n      : @532 [@dyn 256] (gas: 23)\n 15253: a0 = s1 + 0x1878\n 15257: a1 = u64 [s1 + 0x98]\n 15261: a2 = a0 + 0x400\n 15265: u64 [a2 + 0x80] = a1\n 15269: a1 = u64 [s1 + 0xa0]\n 15273: u64 [a2 + 0x78] = a1\n 15276: a1 = u64 [s1 + 0xa8]\n 15280: u64 [a2 + 0x70] = a1\n 15283: a1 = u64 [s1 + 0xb0]\n 15287: u64 [a2 + 0x68] = a1\n 15290: a1 = u64 [s1 + 0xb8]\n 15294: u64 [a2 + 0xa0] = a1\n 15298: a1 = u64 [s1 + 0xc8]\n 15302: u64 [a2 + 0x98] = a1\n 15306: a1 = u64 [s1 + 0x88]\n 15310: u64 [a2 + 0x90] = a1\n 15314: a4 = a0\n 15316: a0 = s1 + 0x1d20\n 15320: a1 = s1 + 0x1d00\n 15324: a2 = s1 + 0x1ce0\n 15328: a3 = u64 [s1 + 0x90]\n 15332: u64 [a4 + 0x488] = a3\n 15336: ra = 514, jump @881\n      : @533 [@dyn 257] (gas: 3)\n 15342: t0 = 0x204\n 15346: a1 = s1 + 0x1878\n 15350: fallthrough\n      : @534 [@dyn 258] (gas: 12)\n 15351: a2 = a1 + 0x400\n 15355: a0 = u64 [a2 + 0xc0]\n 15359: u64 [s1 + 0xa8] = a0\n 15363: a0 = u64 [a2 + 0xb8]\n 15367: u64 [s1 + 0xa0] = a0\n 15371: a0 = u64 [a2 + 0xb0]\n 15375: u64 [s1 + 0xb0] = a0\n 15379: a0 = u64 [a2 + 0xa8]\n 15383: u64 [s1 + 0xb8] = a0\n 15387: a0 = s1 + 0x1cc0\n 15391: a1 = u64 [s1 + 0xc0]\n 15395: ra = 518, jump @17\n      : @535 [@dyn 259] (gas: 4)\n 15401: a0 = 0x100000000\n 15411: u64 [s1 + 0xc8] = a0\n 15415: a0 = 0xffffffa0\n 15425: t0 = 520, jump @1032\n      : @536 [@dyn 260] (gas: 1)\n 15431: jump @609 if a0 == 0\n      : @537 (gas: 16)\n 15435: a5 = s1 + 0x1878\n 15439: a1 = u64 [a5 + 0x458]\n 15443: a2 = u64 [a5 + 0x450]\n 15447: a3 = u64 [a5 + 0x448]\n 15451: a4 = 0xffffffff\n 15461: a4 = a4 & a1\n 15464: a2 = a2 & 0xffffffffffffffff\n 15467: a3 = a3 & 0xffffffffffffffff\n 15470: a0 = u64 [s1 + 0xf0]\n 15474: i32 a0 = a0 + 0x60\n 15477: u64 [a5 + 1088] = 0\n 15481: u64 [a5 + 0x428] = a3\n 15485: u64 [a5 + 0x430] = a2\n 15489: a1 = s1 + 0x1ca0\n 15493: u64 [a5 + 0x438] = a4\n 15497: ra = 522, jump @19\n      : @538 [@dyn 261] (gas: 3)\n 15503: a0 = s1 + 0x1c80\n 15507: a1 = u64 [s1 + 0xd0]\n 15511: ra = 524, jump @17\n      : @539 [@dyn 262] (gas: 3)\n 15517: a0 = u64 [s1 + 0xc8]\n 15521: a0 = a0 + 0xffffffffffffff80\n 15524: t0 = 526, jump @1032\n      : @540 [@dyn 263] (gas: 1)\n 15530: jump @609 if a0 == 0\n      : @541 (gas: 15)\n 15534: a5 = s1 + 0x1878\n 15538: t0 = u64 [a5 + 0x420]\n 15542: a0 = a5 + 0x400\n 15546: a1 = u64 [a0 + 0x18]\n 15549: a3 = u64 [a0 + 0x10]\n 15552: a4 = u64 [a0 + 0x8]\n 15555: a0 = u64 [s1 + 0xf0]\n 15559: i32 a0 = a0 + 0x80\n 15563: a2 = a5 + 0x300\n 15567: u64 [a2 + 0xe8] = a4\n 15571: u64 [a2 + 0xf0] = a3\n 15575: u64 [a2 + 0xf8] = a1\n 15579: a1 = s1 + 0x1c60\n 15583: u64 [a5 + 0x400] = t0\n 15587: ra = 528, jump @19\n      : @542 [@dyn 264] (gas: 31)\n 15593: t0 = u64 [s1 + 0xb8]\n 15597: ra = u64 [s1 + 0xf0]\n 15601: t1 = t0 <u ra\n 15604: a5 = u64 [s1 + 0xe8]\n 15608: a1 = u64 [s1 + 0xb0]\n 15612: a3 = a1 ^ a5\n 15615: a2 = a1 <u a5\n 15618: a2 = t1 if a3 == 0\n 15621: a3 = u64 [s1 + 0xd8]\n 15625: a4 = u64 [s1 + 0xa0]\n 15629: a0 = a4 - a3\n 15632: t2 = a4 <u a3\n 15635: a4 = u64 [s1 + 0xe0]\n 15639: a3 = u64 [s1 + 0xa8]\n 15643: a4 = a3 - a4\n 15646: a4 = a4 - t2\n 15649: a3 = a0 <u a2\n 15652: a4 = a4 - a3\n 15655: a3 = a0 - a2\n 15658: a2 = a1 - a5\n 15661: a2 = a2 - t1\n 15664: a0 = t0 - ra\n 15667: a2 = a2 | a4\n 15670: a4 = a0\n 15672: a0 = a0 | a3\n 15675: a0 = a0 | a2\n 15678: a1 = a2 | a3\n 15681: a0 = a0 >> 0x20\n 15684: a1 = a1 << 0x20\n 15687: a0 = a0 | a1\n 15690: jump @609 if a0 != 0\n      : @543 (gas: 5)\n 15694: a0 = u64 [s1 + 0xf0]\n 15698: a1 = a4\n 15700: u64 [s1 + 0xf8] = a4\n 15704: ra = 0x2fa\n 15708: jump @29\n      : @544 (gas: 8)\n 15711: u64 [a2 + 1152] = 0\n 15715: u64 [a2 + 1144] = 0\n 15719: u64 [a2 + 1136] = 0\n 15723: u64 [a2 + 1128] = 0\n 15727: a0 = s1 + 0x2000\n 15731: i32 a0 = a0 + 0x4e0\n 15735: ecalli 11 // 'value_transferred'\n 15737: fallthrough\n      : @545 (gas: 10)\n 15738: a3 = s1 + 0x2078\n 15742: a4 = a3 + 0x400\n 15746: a0 = u64 [a4 + 0x78]\n 15749: a1 = u64 [a4 + 0x80]\n 15753: a2 = u64 [a4 + 0x70]\n 15756: a3 = u64 [a4 + 0x68]\n 15759: a1 = a1 | a2\n 15762: a0 = a0 | a3\n 15765: a0 = a0 | a1\n 15768: jump @547 if a0 == 0\n      : @546 (gas: 1)\n 15771: jump @760\n      : @547 (gas: 3)\n 15774: a0 = u64 [s1 + 0xf8]\n 15778: a0 = i32 [a0]\n 15780: jump @549 if a0 >u 67\n      : @548 (gas: 1)\n 15784: jump @761\n      : @549 (gas: 6)\n 15787: a0 = s1 + 0x2000\n 15791: i32 a0 = a0 + 0x500\n 15795: a1 = 0x4\n 15798: ra = 0x212\n 15802: ecalli 1 // 'call_data_load'\n 15804: fallthrough\n      : @550 [@dyn 265] (gas: 6)\n 15805: a5 = s1 + 0x2078\n 15809: a3 = a5 + 0x400\n 15813: a0 = u64 [a3 + 0xa0]\n 15817: a1 = u64 [a3 + 0x98]\n 15821: a2 = u64 [a3 + 0x90]\n 15825: t0 = 532, jump @1027\n      : @551 [@dyn 266] (gas: 1)\n 15831: jump @553 if a4 != 0\n      : @552 (gas: 1)\n 15834: jump @762\n      : @553 (gas: 26)\n 15837: a3 = u64 [a5 + 0x488]\n 15841: a4 = u64 [s1 + 0xf8]\n 15845: t0 = u32 [a4]\n 15847: a5 = a3 + 0x4\n 15850: a3 = a5 <u a3\n 15853: a4 = a2 + a3\n 15856: a2 = a4 <u a2\n 15859: a2 = a3 if a3 == 0\n 15862: a2 = a2 + a1\n 15865: a1 = a2 <u a1\n 15868: a3 = a0 + a1\n 15871: a0 = s1 + 0x1078\n 15875: u64 [a0 + 1088] = 0\n 15879: u64 [a0 + 1080] = 0\n 15883: u64 [a0 + 1072] = 0\n 15887: u64 [a0 + 0x428] = t0\n 15891: a1 = a0 + 0x400\n 15895: u64 [a1 + 0x48] = a5\n 15898: u64 [a1 + 0x50] = a4\n 15901: u64 [a1 + 0x58] = a2\n 15904: a4 = a0\n 15906: a0 = s1 + 0x14e0\n 15910: a1 = s1 + 0x14c0\n 15914: a2 = s1 + 0x14a0\n 15918: u64 [a4 + 0x460] = a3\n 15922: ra = 534, jump @820\n      : @554 [@dyn 267] (gas: 27)\n 15928: a1 = s1 + 0x1078\n 15932: a2 = a1 + 0x400\n 15936: a0 = u64 [a2 + 0x80]\n 15940: u64 [s1 + 0xf0] = a0\n 15944: a0 = u64 [a2 + 0x78]\n 15947: u64 [s1 + 0xe8] = a0\n 15951: a0 = u64 [a2 + 0x70]\n 15954: u64 [s1 + 0xf8] = a0\n 15958: a0 = u64 [a2 + 0x68]\n 15961: u64 [s1 + 0xe0] = a0\n 15965: a0 = s1 + 0x2000\n 15969: i32 a0 = a0 + 0x520\n 15973: a1 = 0x24\n 15976: ecalli 1 // 'call_data_load'\n 15978: a1 = s1 + 0x2078\n 15982: a2 = a1 + 0x400\n 15986: a0 = u64 [a2 + 0xc0]\n 15990: u64 [s1 + 0xa0] = a0\n 15994: a0 = u64 [a2 + 0xb8]\n 15998: u64 [s1 + 0xa8] = a0\n 16002: a0 = u64 [a2 + 0xb0]\n 16006: u64 [s1 + 0xb0] = a0\n 16010: a0 = u64 [a2 + 0xa8]\n 16014: u64 [s1 + 0xb8] = a0\n 16018: a0 = s1 + 0x1480\n 16022: a1 = 0x40\n 16025: ra = 536, jump @17\n      : @555 [@dyn 268] (gas: 1)\n 16031: t0 = 538, jump @1018\n      : @556 [@dyn 269] (gas: 1)\n 16037: jump @609 if a0 != 0\n      : @557 (gas: 12)\n 16041: a0 = s1 + 0x1078\n 16045: a3 = a0 + 0x400\n 16049: a2 = u64 [a3 + 0x20]\n 16052: u64 [s1 + 0xd0] = a2\n 16056: a2 = u64 [a3 + 0x18]\n 16059: u64 [s1 + 0xc8] = a2\n 16063: a2 = u64 [a3 + 0x10]\n 16066: u64 [s1 + 0xc0] = a2\n 16070: a0 = u64 [a3 + 0x8]\n 16073: u64 [s1 + 0xd8] = a0\n 16077: a0 = s1 + 0x1460\n 16081: ra = 540, jump @17\n      : @558 [@dyn 270] (gas: 1)\n 16087: t0 = 542, jump @1016\n      : @559 [@dyn 271] (gas: 1)\n 16093: jump @609 if a0 != 0\n      : @560 (gas: 1)\n 16097: t0 = 544, jump @1015\n      : @561 [@dyn 272] (gas: 1)\n 16103: jump @609 if a1 == 0\n      : @562 (gas: 14)\n 16107: a0 = s1 + 0x1078\n 16111: t0 = u64 [a0 + 0x400]\n 16115: a2 = a0 + 0x300\n 16119: a5 = u64 [a2 + 0xf8]\n 16123: a1 = u64 [a2 + 0xe8]\n 16127: a3 = u64 [a2 + 0xf0]\n 16131: a0 = a1 | a5\n 16134: a2 = a3 | t0\n 16137: a0 = a0 | a2\n 16140: a0 = a0 >> 0x20\n 16143: a2 = a2 | a5\n 16146: a2 = a2 << 0x20\n 16149: a0 = a0 | a2\n 16152: jump @609 if a0 != 0\n      : @563 (gas: 8)\n 16156: i32 a0 = a4 + 0x20\n 16159: u64 [s1 + 0xe0] = a0\n 16163: a0 = u64 [s1 + 0xd8]\n 16167: u64 [s1 + 0xf8] = a1\n 16171: u64 [s1 + 0xf0] = a3\n 16175: u64 [s1 + 0xe8] = t0\n 16179: u64 [s1 + 0x98] = a5\n 16183: ra = 546, jump @29\n      : @564 [@dyn 273] (gas: 4)\n 16189: u64 [s1 + 0x90] = a0\n 16193: a0 = u64 [s1 + 0xe0]\n 16197: a1 = u64 [s1 + 0xf8]\n 16201: ra = 548, jump @29\n      : @565 [@dyn 274] (gas: 4)\n 16207: a1 = a0\n 16209: a0 = u64 [s1 + 0x90]\n 16213: a2 = u64 [s1 + 0xf8]\n 16217: ra = 550, jump @0\n      : @566 [@dyn 275] (gas: 13)\n 16223: t2 = u64 [s1 + 0x98]\n 16227: t1 = u64 [s1 + 0xe8]\n 16231: t0 = u64 [s1 + 0xf0]\n 16235: a0 = u64 [s1 + 0xd8]\n 16239: a1 = u64 [s1 + 0xf8]\n 16243: a0 = a0 + a1\n 16246: a1 = a0 <u a1\n 16249: a2 = u64 [s1 + 0xc0]\n 16253: a2 = a2 + t0\n 16256: a2 = a2 + a1\n 16259: a3 = a2 ^ t0\n 16262: a4 = a2 <u t0\n 16265: t0 = 552, jump @1013\n      : @567 [@dyn 276] (gas: 1)\n 16271: jump @609 if a1 != 0\n      : @568 (gas: 7)\n 16275: a2 = s1 + 0x1078\n 16279: u64 [a2 + 992] = 0\n 16283: u64 [a2 + 984] = 0\n 16287: u64 [a2 + 976] = 0\n 16291: a1 = s1 + 0x1440\n 16295: u64 [a2 + 968] = 0x1\n 16300: ra = 554, jump @19\n      : @569 [@dyn 277] (gas: 6)\n 16306: a0 = sp + 0xffffffffffffffe0\n 16309: a3 = a0 & 0xffffffffffffffe0\n 16312: sp = a3\n 16314: a0 = u64 [s1 + 0xe8]\n 16318: a1 = u64 [s1 + 0x98]\n 16322: t0 = 556, jump @1040\n      : @570 [@dyn 278] (gas: 1)\n 16328: jump @609 if a1 == 0\n      : @571 (gas: 5)\n 16332: i32 a1 = a2 + 0x20\n 16335: u64 [s1 + 0xf8] = a1\n 16339: a0 = u64 [s1 + 0xd8]\n 16343: u64 [s1 + 0xd8] = a3\n 16347: ra = 558, jump @29\n      : @572 [@dyn 279] (gas: 1)\n 16353: t0 = 560, jump @1031\n      : @573 [@dyn 280] (gas: 5)\n 16359: ra = 0x232\n 16363: ecalli 6 // 'hash_keccak_256'\n 16365: a3 = u64 [s1 + 0xf0]\n 16369: t0 = 0x234\n 16373: jump @1017\n      : @574 [@dyn 281] (gas: 2)\n 16376: a3 = u64 [s1 + 0xf0]\n 16380: t0 = 564, jump @1017\n      : @575 [@dyn 282] (gas: 12)\n 16386: u64 [s1 + 0xe0] = a3\n 16390: a4 = u64 [s1 + 0xd8]\n 16394: u64 [a4 + 0x18] = a3\n 16397: u64 [s1 + 0xe8] = a2\n 16401: u64 [a4 + 0x10] = a2\n 16404: u64 [s1 + 0xf0] = a1\n 16408: u64 [a4 + 0x8] = a1\n 16411: u64 [s1 + 0xf8] = a0\n 16415: u64 [a4] = a0\n 16417: a1 = a4\n 16419: a0 = s1 + 0x1420\n 16423: ra = 566, jump @21\n      : @576 [@dyn 283] (gas: 22)\n 16429: ra = s1 + 0x1078\n 16433: a2 = ra + 0x300\n 16437: a0 = u64 [a2 + 0xb0]\n 16441: a1 = u64 [a2 + 0xa8]\n 16445: t2 = u64 [ra + 0x3b8]\n 16449: a5 = u64 [a2 + 0xc0]\n 16453: t1 = u64 [s1 + 0xb0]\n 16457: a4 = t1 ^ a0\n 16460: a0 = t1 <u a0\n 16463: t0 = u64 [s1 + 0xb8]\n 16467: a1 = t0 <u a1\n 16470: a1 = a0 if a4 != 0\n 16473: a3 = u64 [s1 + 0xa0]\n 16477: a0 = a3 ^ a5\n 16480: a2 = a3 <u a5\n 16483: a5 = u64 [s1 + 0xa8]\n 16487: a4 = a5 <u t2\n 16490: a4 = a2 if a0 != 0\n 16493: a2 = a5 ^ t2\n 16496: a0 = a0 | a2\n 16499: a1 = a4 if a0 != 0\n 16502: jump @578 if a1 != 0\n      : @577 (gas: 1)\n 16505: jump @769\n      : @578 (gas: 21)\n 16508: a0 = sp + 0xffffffffffffffe0\n 16511: a0 = a0 & 0xffffffffffffffe0\n 16514: u64 [s1 + 0xd8] = a0\n 16518: sp = a0\n 16520: a4 = ra + 0x300\n 16524: u64 [a4 + 0x40] = a3\n 16527: u64 [a4 + 0x38] = a5\n 16530: u64 [ra + 0x330] = t1\n 16534: u64 [ra + 0x328] = t0\n 16538: a0 = u64 [s1 + 0xe0]\n 16542: u64 [a4 + 0x60] = a0\n 16545: a0 = u64 [s1 + 0xe8]\n 16549: u64 [a4 + 0x58] = a0\n 16552: a0 = u64 [s1 + 0xf0]\n 16556: u64 [a4 + 0x50] = a0\n 16559: a0 = s1 + 0x13e0\n 16563: a1 = s1 + 0x13c0\n 16567: a2 = s1 + 0x13a0\n 16571: a3 = u64 [s1 + 0xf8]\n 16575: u64 [a4 + 0x48] = a3\n 16578: ra = 568, jump @911\n      : @579 [@dyn 284] (gas: 20)\n 16584: a0 = s1 + 0x1078\n 16588: a4 = u64 [a0 + 0x378]\n 16592: u64 [s1 + 0xe0] = a4\n 16596: a0 = s1 + 0x1078\n 16600: a1 = u64 [a0 + 0x380]\n 16604: u64 [s1 + 0xf8] = a1\n 16608: a0 = s1 + 0x1078\n 16612: a2 = u64 [a0 + 0x368]\n 16616: u64 [s1 + 0xe8] = a2\n 16620: a0 = s1 + 0x1078\n 16624: a0 = u64 [a0 + 0x370]\n 16628: u64 [s1 + 0xf0] = a0\n 16632: a3 = u64 [s1 + 0xd8]\n 16636: u64 [a3 + 0x10] = a4\n 16639: u64 [a3 + 0x18] = a1\n 16642: u64 [a3] = a2\n 16644: u64 [a3 + 0x8] = a0\n 16647: a1 = a3\n 16649: a0 = s1 + 0x1380\n 16653: ra = 570, jump @21\n      : @580 [@dyn 285] (gas: 30)\n 16659: a0 = s1 + 0x1078\n 16663: a0 = u64 [a0 + 0x318]\n 16667: u64 [s1 + 0xc8] = a0\n 16671: a0 = s1 + 0x1078\n 16675: a0 = u64 [a0 + 0x310]\n 16679: u64 [s1 + 0xd0] = a0\n 16683: a0 = s1 + 0x1078\n 16687: a0 = u64 [a0 + 0x308]\n 16691: u64 [s1 + 0xd8] = a0\n 16695: a0 = u64 [s1 + 0xe8]\n 16699: a0 = a0 + 0x1\n 16702: a1 = a0 <u 0x1\n 16705: a2 = u64 [s1 + 0xf0]\n 16709: a1 = a1 + a2\n 16712: a2 = s1 + 0x2078\n 16716: a3 = a2 + 0x400\n 16720: u64 [a3 + 0xd0] = a1\n 16724: a1 = a1 | a0\n 16727: u64 [a3 + 0xc8] = a0\n 16731: a0 = a1 <u 0x1\n 16734: a1 = u64 [s1 + 0xe0]\n 16738: a0 = a0 + a1\n 16741: u64 [a3 + 0xd8] = a0\n 16745: a0 = a0 <u a1\n 16748: a1 = u64 [s1 + 0xf8]\n 16752: a0 = a0 + a1\n 16755: u64 [a3 + 0xe0] = a0\n 16759: a0 = s1 + 0x1360\n 16763: a1 = s1 + 0x2540\n 16767: ra = 572, jump @21\n      : @581 [@dyn 286] (gas: 8)\n 16773: a0 = s1 + 0x1078\n 16777: a0 = u32 [a0 + 0x2f8]\n 16781: u64 [s1 + 0xc0] = a0\n 16785: a1 = u64 [s1 + 0xe8]\n 16789: a0 = a1 + 0x2\n 16792: a1 = a0 <u a1\n 16795: a3 = u64 [s1 + 0xf0]\n 16799: t0 = 574, jump @1030\n      : @582 [@dyn 287] (gas: 20)\n 16805: a1 = s1 + 0x1078\n 16809: a1 = u64 [a1 + 0x2f0]\n 16813: u64 [s1 + 0xf0] = a1\n 16817: a1 = u64 [s1 + 0xe0]\n 16821: a3 = a3 + a1\n 16824: a1 = a3 <u a1\n 16827: a4 = u64 [s1 + 0xf8]\n 16831: a1 = a1 + a4\n 16834: a4 = s1 + 0x1078\n 16838: a4 = u64 [a4 + 0x2e8]\n 16842: u64 [s1 + 0xe8] = a4\n 16846: a4 = s1 + 0x2078\n 16850: u64 [a4 + 0x500] = a1\n 16854: a1 = a4 + 0x400\n 16858: u64 [a1 + 0xf8] = a3\n 16862: u64 [a1 + 0xf0] = a2\n 16866: u64 [a1 + 0xe8] = a0\n 16870: a0 = s1 + 0x1340\n 16874: a1 = s1 + 0x2560\n 16878: ra = 576, jump @21\n      : @583 [@dyn 288] (gas: 15)\n 16884: a0 = s1 + 0x1078\n 16888: a0 = u64 [a0 + 0x2e0]\n 16892: u64 [s1 + 0xb8] = a0\n 16896: a0 = s1 + 0x1078\n 16900: a0 = u64 [a0 + 0x2d8]\n 16904: u64 [s1 + 0xb0] = a0\n 16908: a0 = s1 + 0x1078\n 16912: a0 = u64 [a0 + 0x2d0]\n 16916: u64 [s1 + 0xa8] = a0\n 16920: a0 = s1 + 0x1078\n 16924: a0 = u64 [a0 + 0x2c8]\n 16928: u64 [s1 + 0xa0] = a0\n 16932: a0 = s1 + 0x1320\n 16936: a1 = 0x40\n 16939: ra = 578, jump @17\n      : @584 [@dyn 289] (gas: 14)\n 16945: a3 = s1 + 0x1078\n 16949: a1 = a3 + 0x200\n 16953: a5 = u64 [a1 + 0xc0]\n 16957: t0 = u64 [a3 + 0x2b8]\n 16961: a4 = u64 [a1 + 0xb0]\n 16965: a0 = u64 [a1 + 0xa8]\n 16969: a2 = a4 | a5\n 16972: a1 = a0 | t0\n 16975: a1 = a1 | a2\n 16978: a1 = a1 >> 0x20\n 16981: a2 = a2 | t0\n 16984: a2 = a2 << 0x20\n 16987: a1 = a1 | a2\n 16990: jump @609 if a1 != 0\n      : @585 (gas: 18)\n 16994: u64 [s1 + 0xe0] = a4\n 16998: a1 = 0xffffffff\n 17008: a2 = u64 [s1 + 0xc8]\n 17012: a2 = a2 & a1\n 17015: a1 = u64 [s1 + 0xd0]\n 17019: a1 = a1 & 0xffffffffffffffff\n 17022: u64 [s1 + 0xd0] = a5\n 17026: a5 = u64 [s1 + 0xd8]\n 17030: a4 = a5 & 0xffffffffffffffff\n 17033: u64 [a3 + 672] = 0\n 17037: a5 = a3 + 0x200\n 17041: u64 [a5 + 0x88] = a4\n 17045: u64 [a5 + 0x90] = a1\n 17049: a1 = s1 + 0x1300\n 17053: u64 [a5 + 0x98] = a2\n 17057: u64 [s1 + 0xf8] = a0\n 17061: u64 [s1 + 0xd8] = t0\n 17065: ra = 580, jump @19\n      : @586 [@dyn 290] (gas: 6)\n 17071: a3 = u64 [s1 + 0xe0]\n 17075: a1 = u64 [s1 + 0xf8]\n 17079: a0 = u64 [s1 + 0xd0]\n 17083: a2 = u64 [s1 + 0xd8]\n 17087: a2 = a2 | a0\n 17090: t0 = 582, jump @1041\n      : @587 [@dyn 291] (gas: 1)\n 17096: jump @609 if a0 == 0\n      : @588 (gas: 15)\n 17100: i32 a0 = a1 + 0x20\n 17103: a1 = s1 + 0x1078\n 17107: u64 [s1 + 0xd8] = a4\n 17111: a4 = a1\n 17113: u64 [a1 + 640] = 0\n 17117: a1 = u64 [s1 + 0xe8]\n 17121: a3 = a4 + 0x200\n 17125: u64 [a3 + 0x68] = a1\n 17128: a1 = u64 [s1 + 0xf0]\n 17132: u64 [a3 + 0x70] = a1\n 17135: a1 = s1 + 0x12e0\n 17139: u64 [s1 + 0xf0] = a2\n 17143: a2 = u64 [s1 + 0xc0]\n 17147: u64 [a3 + 0x78] = a2\n 17150: ra = 584, jump @19\n      : @589 [@dyn 292] (gas: 9)\n 17156: a3 = u64 [s1 + 0xf8]\n 17160: a0 = u64 [s1 + 0xd8]\n 17164: a0 = a0 + 0xffffffffffffffc0\n 17167: a0 = a3 <u a0\n 17170: a1 = u64 [s1 + 0xe0]\n 17174: a0 = 0 if a1 != 0\n 17176: a1 = u64 [s1 + 0xf0]\n 17180: a0 = 0 if a1 != 0\n 17182: jump @609 if a0 == 0\n      : @590 (gas: 13)\n 17186: i32 a0 = a3 + 0x40\n 17189: a1 = u64 [s1 + 0xa0]\n 17193: a4 = s1 + 0x1078\n 17197: a3 = a4 + 0x200\n 17201: u64 [a3 + 0x48] = a1\n 17204: a1 = u64 [s1 + 0xa8]\n 17208: u64 [a3 + 0x50] = a1\n 17211: a1 = u64 [s1 + 0xb0]\n 17215: u64 [a3 + 0x58] = a1\n 17218: a1 = s1 + 0x12c0\n 17222: a2 = u64 [s1 + 0xb8]\n 17226: u64 [a3 + 0x60] = a2\n 17229: ra = 586, jump @19\n      : @591 [@dyn 293] (gas: 3)\n 17235: a1 = 0x60\n 17238: a0 = u64 [s1 + 0xf8]\n 17242: ra = 588, jump @29\n      : @592 [@dyn 294] (gas: 5)\n 17248: i32 a1 = a0 + 0\n 17250: a2 = 0x60\n 17253: a0 = 0\n 17255: ecalli 8 // 'seal_return'\n 17257: jump @78\n      : @593 (gas: 4)\n 17260: a0 = s1 + 0x7ff\n 17264: a0 = a0 + 0x4e1\n 17268: a1 = 0x40\n 17271: ra = 590, jump @17\n      : @594 [@dyn 295] (gas: 15)\n 17277: a2 = s1 + 0x7ff\n 17281: a2 = a2 + 0x79\n 17284: t0 = u64 [a2 + 0x480]\n 17288: a1 = a2 + 0x400\n 17292: a5 = u64 [a1 + 0x78]\n 17295: a4 = u64 [a1 + 0x70]\n 17298: a0 = u64 [a1 + 0x68]\n 17301: a3 = a4 | t0\n 17304: a1 = a0 | a5\n 17307: a1 = a1 | a3\n 17310: a1 = a1 >> 0x20\n 17313: a3 = a3 | a5\n 17316: a3 = a3 << 0x20\n 17319: a1 = a1 | a3\n 17322: jump @609 if a1 != 0\n      : @595 (gas: 23)\n 17326: a1 = a0 + 0x20\n 17329: u64 [s1 + 0xf0] = a1\n 17333: t1 = a1 <u a0\n 17336: a1 = a4 + t1\n 17339: u64 [s1 + 0xf8] = a1\n 17343: a1 = a1 <u a4\n 17346: a1 = t1 if t1 == 0\n 17349: a1 = a1 + a5\n 17352: u64 [s1 + 0xe0] = a1\n 17356: a1 = a1 <u a5\n 17359: a1 = a1 + t0\n 17362: u64 [s1 + 0xe8] = a1\n 17366: u64 [a2 + 1120] = 0\n 17370: u64 [a2 + 1112] = 0\n 17374: u64 [a2 + 1104] = 0\n 17378: a1 = s1 + 0x7ff\n 17382: a1 = a1 + 0x4c1\n 17386: u64 [a2 + 1096] = 0x20\n 17391: u64 [s1 + 0xb8] = a0\n 17395: u64 [s1 + 0x58] = t0\n 17398: u64 [s1 + 0x50] = a5\n 17401: u64 [s1 + 0x80] = a4\n 17405: ra = 592, jump @19\n      : @596 [@dyn 296] (gas: 4)\n 17411: a0 = s1 + 0x7ff\n 17415: a0 = a0 + 0x4a1\n 17419: a1 = u64 [s1 + 0x48]\n 17422: ra = 594, jump @17\n      : @597 [@dyn 297] (gas: 12)\n 17428: a0 = u64 [s1 + 0xf0]\n 17432: a3 = u64 [s1 + 0xe0]\n 17436: a2 = a0 | a3\n 17439: a1 = u64 [s1 + 0xf8]\n 17443: a4 = u64 [s1 + 0xe8]\n 17447: a1 = a1 | a4\n 17450: a2 = a2 | a1\n 17453: a2 = a2 >> 0x20\n 17456: a1 = a1 | a3\n 17459: a1 = a1 << 0x20\n 17462: a1 = a1 | a2\n 17465: jump @609 if a1 != 0\n      : @598 (gas: 18)\n 17469: a5 = s1 + 0x7ff\n 17473: a5 = a5 + 0x79\n 17476: a4 = u64 [a5 + 0x440]\n 17480: u64 [s1 + 0x40] = a4\n 17483: a2 = u64 [a5 + 0x438]\n 17487: u64 [s1 + 0x38] = a2\n 17490: a1 = u64 [a5 + 0x430]\n 17494: u64 [s1 + 0x48] = a1\n 17497: a3 = u64 [a5 + 0x428]\n 17501: u64 [s1 + 0x30] = a3\n 17504: u64 [a5 + 0x408] = a3\n 17508: a3 = a5 + 0x400\n 17512: u64 [a3 + 0x10] = a1\n 17515: u64 [a3 + 0x18] = a2\n 17518: a1 = s1 + 0x7ff\n 17522: a1 = a1 + 0x481\n 17526: u64 [a3 + 0x20] = a4\n 17529: ra = 596, jump @19\n      : @599 [@dyn 298] (gas: 57)\n 17535: ra = 0\n 17537: a5 = 0\n 17539: u64 [s1 + 176] = 0\n 17543: t1 = 0\n 17545: a0 = u64 [s1 + 0xb8]\n 17549: a3 = a0 + 0x40\n 17552: t0 = a3 <u a0\n 17555: a0 = u64 [s1 + 0x80]\n 17559: a4 = a0 + t0\n 17562: a1 = u64 [s1 + 0x30]\n 17565: a2 = a1 >> 0x3b\n 17568: u64 [s1 + 0xf8] = a2\n 17572: a2 = u64 [s1 + 0x48]\n 17575: a2 = a2 << 0x5\n 17578: t2 = u64 [s1 + 0xf8]\n 17582: t2 = a2 | t2\n 17585: a2 = a1 << 0x5\n 17588: a1 = a4 + t2\n 17591: a2 = a2 + a3\n 17594: u64 [s1 + 0xf8] = a3\n 17598: u64 [s1 + 0xe8] = a2\n 17602: a2 = a2 <u a3\n 17605: a3 = a1 + a2\n 17608: a1 = a3 ^ a4\n 17611: u64 [s1 + 0xe0] = a3\n 17615: a3 = a3 <u a4\n 17618: a3 = a2 if a1 == 0\n 17621: u64 [s1 + 0xd0] = a4\n 17625: a1 = a4 <u a0\n 17628: a1 = t0 if t0 == 0\n 17631: a4 = u64 [s1 + 0x38]\n 17634: a0 = a4 >> 0x3b\n 17637: a2 = u64 [s1 + 0x40]\n 17640: a2 = a2 << 0x5\n 17643: t0 = a2 | a0\n 17646: a2 = u64 [s1 + 0x48]\n 17649: a2 = a2 >> 0x3b\n 17652: a4 = a4 << 0x5\n 17655: t2 = a4 | a2\n 17658: a4 = u64 [s1 + 0xb0]\n 17662: a0 = u64 [s1 + 0x50]\n 17665: a2 = a0 + a1\n 17668: a1 = a2 <u a0\n 17671: a0 = u64 [s1 + 0x58]\n 17674: a1 = a1 + a0\n 17677: a0 = a2 + t2\n 17680: u64 [s1 + 0xc8] = a1\n 17684: t0 = t0 + a1\n 17687: u64 [s1 + 0xc0] = a2\n 17691: a1 = a0 <u a2\n 17694: a2 = t0 + a1\n 17697: a3 = a3 + a0\n 17700: u64 [s1 + 0xd8] = a3\n 17704: a1 = a3 <u a0\n 17707: a1 = a1 + a2\n 17710: u64 [s1 + 0xf0] = a1\n 17714: fallthrough\n      : @600 (gas: 41)\n 17715: t2 = u64 [s1 + 0xb8]\n 17719: a3 = u64 [s1 + 0x80]\n 17723: a0 = u64 [s1 + 0x30]\n 17726: u64 [s1 + 0x98] = ra\n 17730: a0 = ra <u a0\n 17733: a2 = u64 [s1 + 0x48]\n 17736: a1 = a5 ^ a2\n 17739: u64 [s1 + 0x90] = a5\n 17743: a2 = a5 <u a2\n 17746: a2 = a0 if a1 == 0\n 17749: a5 = u64 [s1 + 0x38]\n 17752: ra = a4 <u a5\n 17755: a0 = a4\n 17757: a4 = u64 [s1 + 0x40]\n 17760: a1 = t1 ^ a4\n 17763: u64 [s1 + 0x88] = t1\n 17767: a4 = t1 <u a4\n 17770: a4 = ra if a1 == 0\n 17773: u64 [s1 + 0xb0] = a0\n 17777: a0 = a0 ^ a5\n 17780: a0 = a0 | a1\n 17783: a4 = a2 if a0 == 0\n 17786: t0 = u64 [s1 + 0xe8]\n 17790: t1 = t0 <u t2\n 17793: a5 = u64 [s1 + 0xe0]\n 17797: a0 = a5 ^ a3\n 17800: u64 [s1 + 0xa8] = a0\n 17804: a1 = a3\n 17806: t2 = a5 <u a3\n 17809: a3 = u64 [s1 + 0xd8]\n 17813: a0 = u64 [s1 + 0x50]\n 17816: a2 = a3 - a0\n 17819: a0 = a3 <u a0\n 17822: u64 [s1 + 0xa0] = a0\n 17826: a3 = u64 [s1 + 0xf0]\n 17830: a0 = u64 [s1 + 0x58]\n 17833: ra = a3 - a0\n 17836: a1 = a5 - a1\n 17839: a0 = u64 [s1 + 0xb8]\n 17843: a5 = t0 - a0\n 17846: jump @607 if a4 == 0\n      : @601 (gas: 12)\n 17850: t0 = u64 [s1 + 0xc0]\n 17854: a0 = u64 [s1 + 0xf8]\n 17858: a0 = a0 | t0\n 17861: a3 = u64 [s1 + 0xd0]\n 17865: a4 = u64 [s1 + 0xc8]\n 17869: a4 = a4 | a3\n 17872: a3 = a0 | a4\n 17875: a3 = a3 >> 0x20\n 17878: a4 = a4 | t0\n 17881: a4 = a4 << 0x20\n 17884: a3 = a3 | a4\n 17887: jump @609 if a3 != 0\n      : @602 (gas: 32)\n 17891: a0 = u64 [s1 + 0xa8]\n 17895: t2 = t1 if a0 == 0\n 17898: a3 = a2 <u t2\n 17901: a0 = u64 [s1 + 0xa0]\n 17905: a4 = ra - a0\n 17908: a4 = a4 - a3\n 17911: a2 = a2 - t2\n 17914: a0 = a1 - t1\n 17917: a1 = a2 <u 0x1\n 17920: t0 = a4 - a1\n 17923: a1 = a5 + 0xffffffffffffffc0\n 17926: a3 = a1 <u a5\n 17929: a5 = a0 + a3\n 17932: a5 = a5 + 0xffffffffffffffff\n 17935: a4 = a5 ^ a0\n 17938: a0 = a5 <u a0\n 17941: a0 = a3 if a4 == 0\n 17944: a2 = a2 + 0xffffffffffffffff\n 17947: a0 = a0 + a2\n 17950: a2 = a0 <u a2\n 17953: a2 = a2 + t0\n 17956: a3 = s1 + 0x7ff\n 17960: a3 = a3 + 0x79\n 17963: a4 = a3 + 0x300\n 17967: u64 [a4 + 0xe8] = a1\n 17971: u64 [a4 + 0xf0] = a5\n 17975: u64 [a4 + 0xf8] = a0\n 17979: a1 = s1 + 0x7ff\n 17983: a1 = a1 + 0x461\n 17987: u64 [a3 + 0x400] = a2\n 17991: a0 = u64 [s1 + 0xf8]\n 17995: ra = 598, jump @19\n      : @603 [@dyn 299] (gas: 12)\n 18001: a1 = u64 [s1 + 0x78]\n 18004: a4 = u64 [s1 + 0x68]\n 18007: a0 = a1 | a4\n 18010: a3 = u64 [s1 + 0x70]\n 18013: a5 = u64 [s1 + 0x60]\n 18016: a2 = a3 | a5\n 18019: a0 = a0 | a2\n 18022: a0 = a0 >> 0x20\n 18025: a2 = a2 | a4\n 18028: a2 = a2 << 0x20\n 18031: a0 = a0 | a2\n 18034: jump @609 if a0 != 0\n      : @604 (gas: 7)\n 18038: a0 = s1 + 0x7ff\n 18042: a0 = a0 + 0x441\n 18046: u64 [s1 + 0x78] = a1\n 18049: u64 [s1 + 0x70] = a3\n 18052: u64 [s1 + 0x68] = a4\n 18055: u64 [s1 + 0x60] = a5\n 18058: ra = 600, jump @17\n      : @605 [@dyn 300] (gas: 26)\n 18064: a5 = s1 + 0x7ff\n 18068: a5 = a5 + 0x79\n 18071: a3 = u64 [a5 + 0x3c8]\n 18075: a0 = u64 [a5 + 0x3d0]\n 18079: a1 = u64 [a5 + 0x3d8]\n 18083: a2 = u64 [a5 + 0x3e0]\n 18087: a4 = u64 [s1 + 0xf0]\n 18091: u64 [a5 + 0x380] = a4\n 18095: a4 = u64 [s1 + 0xd8]\n 18099: u64 [a5 + 0x378] = a4\n 18103: a4 = u64 [s1 + 0xe0]\n 18107: u64 [a5 + 0x370] = a4\n 18111: a4 = u64 [s1 + 0xe8]\n 18115: u64 [a5 + 0x368] = a4\n 18119: a4 = a5 + 0x300\n 18123: u64 [a4 + 0xa0] = a2\n 18127: u64 [a4 + 0x98] = a1\n 18131: u64 [a4 + 0x90] = a0\n 18135: a0 = s1 + 0x7ff\n 18139: a0 = a0 + 0x421\n 18143: a1 = s1 + 0x7ff\n 18147: a1 = a1 + 0x401\n 18151: a2 = s1 + 0x7ff\n 18155: a2 = a2 + 0x3e1\n 18159: u64 [a4 + 0x88] = a3\n 18163: ra = 602, jump @881\n      : @606 [@dyn 301] (gas: 59)\n 18169: t1 = s1 + 0x7ff\n 18173: t1 = t1 + 0x79\n 18176: a0 = u64 [t1 + 0x3c0]\n 18180: u64 [s1 + 0xf0] = a0\n 18184: a1 = u64 [s1 + 0x78]\n 18187: a0 = a1 + 0x20\n 18190: u64 [s1 + 0xa8] = a0\n 18194: a2 = a0 <u a1\n 18197: a0 = u64 [s1 + 0x70]\n 18200: t0 = a0 + a2\n 18203: a3 = t0 <u a0\n 18206: a3 = a2 if a2 == 0\n 18209: a0 = u64 [s1 + 0x68]\n 18212: t2 = a0 + a3\n 18215: a3 = t2 <u a0\n 18218: a0 = u64 [s1 + 0x60]\n 18221: a0 = a0 + a3\n 18224: u64 [s1 + 0x60] = a0\n 18227: a0 = u64 [s1 + 0xf8]\n 18231: a3 = a0 + 0x20\n 18234: a5 = a3 <u a0\n 18237: a0 = u64 [s1 + 0xd0]\n 18241: a4 = a0 + a5\n 18244: a0 = a4 <u a0\n 18247: a0 = a5 if a5 == 0\n 18250: a1 = u64 [t1 + 0x3b8]\n 18254: u64 [s1 + 0xd8] = a1\n 18258: a1 = u64 [s1 + 0xc0]\n 18262: a0 = a0 + a1\n 18265: a5 = a0 <u a1\n 18268: a1 = u64 [s1 + 0xc8]\n 18272: a1 = a1 + a5\n 18275: u64 [s1 + 0xc8] = a1\n 18279: ra = u64 [s1 + 0x98]\n 18283: ra = ra + 0x1\n 18286: a5 = ra <u 0x1\n 18289: a2 = u64 [s1 + 0x90]\n 18293: a2 = a2 + a5\n 18296: a5 = ra | a2\n 18299: a5 = a5 <u 0x1\n 18302: a1 = u64 [t1 + 0x3b0]\n 18306: u64 [s1 + 0xe0] = a1\n 18310: a1 = u64 [t1 + 0x3a8]\n 18314: u64 [s1 + 0xe8] = a1\n 18318: a1 = u64 [s1 + 0xb0]\n 18322: a5 = a5 + a1\n 18325: a1 = a5 <u a1\n 18328: t1 = u64 [s1 + 0x88]\n 18332: t1 = t1 + a1\n 18335: a1 = u64 [s1 + 0xa8]\n 18339: u64 [s1 + 0x78] = a1\n 18342: u64 [s1 + 0x70] = t0\n 18345: u64 [s1 + 0x68] = t2\n 18348: u64 [s1 + 0xf8] = a3\n 18352: u64 [s1 + 0xd0] = a4\n 18356: u64 [s1 + 0xc0] = a0\n 18360: a4 = a5\n 18362: a5 = a2\n 18364: jump @600\n      : @607 (gas: 18)\n 18367: a3 = u64 [s1 + 0xa8]\n 18371: t2 = t1 if a3 == 0\n 18374: a3 = a1\n 18376: a1 = a5\n 18378: a5 = a2 <u t2\n 18381: a4 = u64 [s1 + 0xa0]\n 18385: a4 = ra - a4\n 18388: a4 = a4 - a5\n 18391: a2 = a2 - t2\n 18394: a3 = a3 - t1\n 18397: a5 = a1 | a2\n 18400: a3 = a3 | a4\n 18403: a5 = a5 | a3\n 18406: a5 = a5 >> 0x20\n 18409: a2 = a2 | a3\n 18412: a2 = a2 << 0x20\n 18415: a2 = a2 | a5\n 18418: jump @609 if a2 != 0\n      : @608 (gas: 1)\n 18421: jump @770\n      : @609 (gas: 1)\n 18424: trap\n      : @610 (gas: 22)\n 18425: a0 = sp + 0xffffffffffffffe0\n 18428: a1 = a0 & 0xffffffffffffffe0\n 18431: sp = a1\n 18433: a2 = u64 [s1 + 0xa0]\n 18437: a0 = a2 + 0x2\n 18440: a4 = a0 <u a2\n 18443: a3 = u64 [s1 + 0xc0]\n 18447: a2 = a3 + a4\n 18450: a3 = a2 <u a3\n 18453: a3 = a4 if a4 == 0\n 18456: a4 = u64 [s1 + 0xd0]\n 18460: a3 = a3 + a4\n 18463: a4 = a3 <u a4\n 18466: a5 = u64 [s1 + 0xc8]\n 18470: a4 = a4 + a5\n 18473: u64 [a1 + 0x8] = a2\n 18476: u64 [a1] = a0\n 18478: u64 [a1 + 0x10] = a3\n 18481: u64 [a1 + 0x18] = a4\n 18484: a0 = s1 + 0x1b20\n 18488: u64 [s1 + 0x98] = a1\n 18492: ra = 604, jump @21\n      : @611 [@dyn 302] (gas: 15)\n 18498: a0 = s1 + 0x1878\n 18502: a1 = u64 [a0 + 0x2b0]\n 18506: u64 [s1 + 0xd0] = a1\n 18510: a1 = u64 [a0 + 0x2a8]\n 18514: u64 [s1 + 0xc8] = a1\n 18518: a0 = u32 [a0 + 0x2b8]\n 18522: u64 [s1 + 0xc0] = a0\n 18526: a0 = 0x30080\n 18531: u64 [s1 + 0xd8] = a0\n 18535: i32 a0 = a0 + 0\n 18537: u64 [s1 + 0xa0] = a0\n 18541: ra = 0x25e\n 18545: ecalli 3 // 'caller'\n 18547: t0 = 0x260\n 18551: jump @1023\n      : @612 [@dyn 303] (gas: 1)\n 18554: t0 = 608, jump @1023\n      : @613 [@dyn 304] (gas: 9)\n 18560: a2 = u64 [s1 + 0xc0]\n 18564: a1 = a1 ^ a2\n 18567: a2 = u64 [s1 + 0xc8]\n 18571: a0 = a0 ^ a2\n 18574: a0 = a0 | a1\n 18577: a1 = u64 [s1 + 0xd0]\n 18581: a1 = a1 ^ a3\n 18584: a0 = a0 | a1\n 18587: jump @635 if a0 != 0\n      : @614 (gas: 9)\n 18591: a0 = u64 [s1 + 0xa8]\n 18595: a0 = a0 << 0x20\n 18598: a0 = a0 >> 0x20\n 18601: u64 [s1 + 0xc8] = a0\n 18605: a0 = u64 [s1 + 0xa0]\n 18609: ra = 0x262\n 18613: ecalli 3 // 'caller'\n 18615: t0 = 0x264\n 18619: jump @1023\n      : @615 [@dyn 305] (gas: 1)\n 18622: t0 = 612, jump @1023\n      : @616 [@dyn 306] (gas: 12)\n 18628: a2 = u64 [s1 + 0xc8]\n 18632: a1 = a1 ^ a2\n 18635: a2 = u64 [s1 + 0xb8]\n 18639: a0 = a0 ^ a2\n 18642: a0 = a0 | a1\n 18645: a1 = u64 [s1 + 0xb0]\n 18649: a1 = a1 ^ a3\n 18652: a0 = a0 | a1\n 18655: u64 [s1 + 0xc0] = a0\n 18659: a0 = s1 + 0x1a60\n 18663: a1 = 0x40\n 18666: ra = 614, jump @17\n      : @617 [@dyn 307] (gas: 11)\n 18672: a0 = s1 + 0x1878\n 18676: a4 = u64 [a0 + 0x200]\n 18680: a1 = a0 + 0x100\n 18684: a5 = u64 [a1 + 0xf8]\n 18688: a3 = u64 [a1 + 0xf0]\n 18692: a2 = u64 [a1 + 0xe8]\n 18696: a0 = u64 [s1 + 0xc0]\n 18700: u64 [s1 + 0xd0] = a3\n 18704: u64 [s1 + 0x90] = a4\n 18708: u64 [s1 + 0x88] = a5\n 18712: jump @650 if a0 != 0\n      : @618 (gas: 8)\n 18716: a0 = a2 | a5\n 18719: a1 = a3 | a4\n 18722: a0 = a0 | a1\n 18725: a0 = a0 >> 0x20\n 18728: a1 = a1 | a5\n 18731: a1 = a1 << 0x20\n 18734: a0 = a0 | a1\n 18737: jump @609 if a0 != 0\n      : @619 (gas: 10)\n 18741: a3 = s1 + 0x1078\n 18745: u64 [a3 + 1432] = 0\n 18749: u64 [a3 + 1424] = 0\n 18753: u64 [a3 + 1416] = 0\n 18757: a0 = 0x8c379a000000000\n 18767: a1 = s1 + 0x1600\n 18771: u64 [a3 + 0x5a0] = a0\n 18775: a0 = a2\n 18777: u64 [s1 + 0xa8] = a2\n 18781: ra = 616, jump @19\n      : @620 [@dyn 308] (gas: 13)\n 18787: a2 = u64 [s1 + 0xa8]\n 18791: a0 = u64 [s1 + 0x90]\n 18795: a1 = u64 [s1 + 0x88]\n 18799: a1 = a1 | a0\n 18802: a0 = 0x100000000\n 18812: u64 [s1 + 0xf0] = a0\n 18816: a0 = 0xfffffffc\n 18826: a0 = a2 <u a0\n 18829: a3 = u64 [s1 + 0xd0]\n 18833: a0 = 0 if a3 != 0\n 18835: u64 [s1 + 0xf8] = a1\n 18839: a0 = 0 if a1 != 0\n 18841: jump @609 if a0 == 0\n      : @621 (gas: 8)\n 18845: i32 a0 = a2 + 0x4\n 18848: a3 = s1 + 0x1078\n 18852: u64 [a3 + 1408] = 0\n 18856: u64 [a3 + 1400] = 0\n 18860: u64 [a3 + 1384] = 0x20\n 18865: a1 = s1 + 0x15e0\n 18869: u64 [a3 + 1392] = 0\n 18873: ra = 618, jump @19\n      : @622 [@dyn 309] (gas: 9)\n 18879: a0 = u64 [s1 + 0xf0]\n 18883: a0 = a0 + 0xffffffffffffffdc\n 18886: a1 = u64 [s1 + 0xa8]\n 18890: a0 = a1 <u a0\n 18893: a1 = u64 [s1 + 0xd0]\n 18897: a0 = 0 if a1 != 0\n 18899: a1 = u64 [s1 + 0xf8]\n 18903: a0 = 0 if a1 != 0\n 18905: jump @609 if a0 == 0\n      : @623 (gas: 9)\n 18909: a0 = u64 [s1 + 0xa8]\n 18913: i32 a0 = a0 + 0x24\n 18916: a2 = s1 + 0x1078\n 18920: u64 [a2 + 1376] = 0\n 18924: u64 [a2 + 1368] = 0\n 18928: u64 [a2 + 1352] = 0x17\n 18933: a1 = s1 + 0x15c0\n 18937: u64 [a2 + 1360] = 0\n 18941: ra = 620, jump @19\n      : @624 [@dyn 310] (gas: 8)\n 18947: a0 = 0xffffffbc\n 18957: a1 = u64 [s1 + 0xa8]\n 18961: a0 = a1 <u a0\n 18964: a1 = u64 [s1 + 0xd0]\n 18968: a0 = 0 if a1 != 0\n 18970: a1 = u64 [s1 + 0xf8]\n 18974: a0 = 0 if a1 != 0\n 18976: jump @609 if a0 == 0\n      : @625 (gas: 13)\n 18980: a0 = u64 [s1 + 0xa8]\n 18984: i32 a0 = a0 + 0x44\n 18987: a1 = u64 [0x20028]\n 18992: a2 = u64 [0x20030]\n 18997: a3 = u64 [0x20038]\n 19002: a4 = s1 + 0x1078\n 19006: a5 = a4 + 0x500\n 19010: u64 [a5 + 0x40] = a1\n 19013: u64 [a5 + 0x38] = a2\n 19016: u64 [a5 + 0x30] = a3\n 19019: a1 = s1 + 0x15a0\n 19023: u64 [a4 + 1320] = 0\n 19027: ra = 622, jump @19\n      : @626 [@dyn 311] (gas: 4)\n 19033: a1 = 0x64\n 19036: a0 = u64 [s1 + 0xa8]\n 19040: ra = 0x288\n 19044: jump @29\n      : @627 (gas: 8)\n 19047: a2 = a0 | a5\n 19050: a1 = a3 | a4\n 19053: a2 = a2 | a1\n 19056: a2 = a2 >> 0x20\n 19059: a1 = a1 | a5\n 19062: a1 = a1 << 0x20\n 19065: a1 = a1 | a2\n 19068: jump @609 if a1 != 0\n      : @628 (gas: 10)\n 19072: u64 [s1 + 1488] = 0\n 19076: u64 [s1 + 1480] = 0\n 19080: u64 [s1 + 1472] = 0\n 19084: a2 = 0x8c379a000000000\n 19094: a1 = s1 + 0x5c0\n 19098: u64 [s1 + 0x5d8] = a2\n 19102: u64 [s1 + 0xd0] = a3\n 19106: u64 [s1 + 0xc0] = a4\n 19110: u64 [s1 + 0x98] = a5\n 19114: ra = 624, jump @19\n      : @629 [@dyn 312] (gas: 11)\n 19120: a2 = u64 [s1 + 0xd0]\n 19124: a1 = u64 [s1 + 0xf8]\n 19128: a0 = u64 [s1 + 0x98]\n 19132: a3 = u64 [s1 + 0xc0]\n 19136: a3 = a3 | a0\n 19139: a4 = 0x100000000\n 19149: a0 = 0xfffffffc\n 19159: a0 = a1 <u a0\n 19162: a0 = 0 if a2 != 0\n 19164: a0 = 0 if a3 != 0\n 19166: jump @609 if a0 == 0\n      : @630 (gas: 9)\n 19170: i32 a0 = a1 + 0x4\n 19173: u64 [s1 + 1464] = 0\n 19177: u64 [s1 + 1456] = 0\n 19181: u64 [s1 + 1440] = 0x20\n 19186: a1 = s1 + 0x5a0\n 19190: u64 [s1 + 1448] = 0\n 19194: u64 [s1 + 0xf0] = a3\n 19198: u64 [s1 + 0xe8] = a4\n 19202: ra = 626, jump @19\n      : @631 [@dyn 313] (gas: 9)\n 19208: a2 = u64 [s1 + 0xf8]\n 19212: a0 = u64 [s1 + 0xe8]\n 19216: a0 = a0 + 0xffffffffffffffdc\n 19219: a0 = a2 <u a0\n 19222: a1 = u64 [s1 + 0xd0]\n 19226: a0 = 0 if a1 != 0\n 19228: a1 = u64 [s1 + 0xf0]\n 19232: a0 = 0 if a1 != 0\n 19234: jump @609 if a0 == 0\n      : @632 (gas: 7)\n 19238: i32 a0 = a2 + 0x24\n 19241: u64 [s1 + 1432] = 0\n 19245: u64 [s1 + 1424] = 0\n 19249: u64 [s1 + 1408] = 0xb\n 19254: a1 = s1 + 0x580\n 19258: u64 [s1 + 1416] = 0\n 19262: ra = 628, jump @19\n      : @633 [@dyn 314] (gas: 8)\n 19268: a0 = 0xffffffbc\n 19278: a1 = u64 [s1 + 0xf8]\n 19282: a0 = a1 <u a0\n 19285: a1 = u64 [s1 + 0xd0]\n 19289: a0 = 0 if a1 != 0\n 19291: a1 = u64 [s1 + 0xf0]\n 19295: a0 = 0 if a1 != 0\n 19297: jump @609 if a0 == 0\n      : @634 (gas: 11)\n 19301: a0 = u64 [s1 + 0xf8]\n 19305: i32 a0 = a0 + 0x44\n 19308: a1 = u64 [0x20048]\n 19313: u64 [s1 + 1384] = 0\n 19317: u64 [s1 + 0x578] = a1\n 19321: a1 = 0x7374730000000000\n 19331: u64 [s1 + 0x570] = a1\n 19335: a1 = s1 + 0x560\n 19339: u64 [s1 + 1376] = 0\n 19343: ra = 0x286\n 19347: jump @19\n      : @635 (gas: 3)\n 19350: a0 = s1 + 0x1b00\n 19354: a1 = 0x40\n 19357: ra = 630, jump @17\n      : @636 [@dyn 315] (gas: 16)\n 19363: a2 = s1 + 0x1878\n 19367: a5 = a2 + 0x200\n 19371: a3 = u64 [a5 + 0xa0]\n 19375: a4 = u64 [a5 + 0x98]\n 19379: a0 = u64 [a5 + 0x90]\n 19383: a1 = u64 [a5 + 0x88]\n 19387: u64 [s1 + 0xf0] = a0\n 19391: a0 = a0 | a3\n 19394: u64 [s1 + 0xf8] = a1\n 19398: a1 = a1 | a4\n 19401: a1 = a1 | a0\n 19404: a1 = a1 >> 0x20\n 19407: a0 = a0 | a4\n 19410: a0 = a0 << 0x20\n 19413: a0 = a0 | a1\n 19416: jump @609 if a0 != 0\n      : @637 (gas: 10)\n 19420: u64 [a2 + 632] = 0\n 19424: u64 [a2 + 624] = 0\n 19428: u64 [a2 + 616] = 0\n 19432: a0 = 0x8c379a000000000\n 19442: a1 = s1 + 0x1ae0\n 19446: u64 [a2 + 0x280] = a0\n 19450: a0 = u64 [s1 + 0xf8]\n 19454: u64 [s1 + 0xe8] = a3\n 19458: u64 [s1 + 0xe0] = a4\n 19462: ra = 632, jump @19\n      : @638 [@dyn 316] (gas: 13)\n 19468: a0 = u64 [s1 + 0xe8]\n 19472: a2 = u64 [s1 + 0xe0]\n 19476: a2 = a2 | a0\n 19479: a0 = 0x100000000\n 19489: u64 [s1 + 0xe0] = a0\n 19493: a0 = 0xfffffffc\n 19503: a1 = u64 [s1 + 0xf8]\n 19507: a0 = a1 <u a0\n 19510: a1 = u64 [s1 + 0xf0]\n 19514: a0 = 0 if a1 != 0\n 19516: u64 [s1 + 0xe8] = a2\n 19520: a0 = 0 if a2 != 0\n 19522: jump @609 if a0 == 0\n      : @639 (gas: 5)\n 19526: a0 = u64 [s1 + 0xf8]\n 19530: i32 a0 = a0 + 0x4\n 19533: t0 = 0x27a\n 19537: a2 = s1 + 0x1878\n 19541: fallthrough\n      : @640 [@dyn 317] (gas: 6)\n 19542: u64 [a2 + 608] = 0\n 19546: u64 [a2 + 600] = 0\n 19550: u64 [a2 + 584] = 0x20\n 19555: a1 = s1 + 0x1ac0\n 19559: u64 [a2 + 592] = 0\n 19563: ra = 636, jump @19\n      : @641 [@dyn 318] (gas: 3)\n 19569: a0 = u64 [s1 + 0xe0]\n 19573: a0 = a0 + 0xffffffffffffffdc\n 19576: t0 = 638, jump @1020\n      : @642 [@dyn 319] (gas: 1)\n 19582: jump @609 if a0 == 0\n      : @643 (gas: 5)\n 19586: a0 = u64 [s1 + 0xf8]\n 19590: i32 a0 = a0 + 0x24\n 19593: t0 = 0x280\n 19597: a2 = s1 + 0x1878\n 19601: fallthrough\n      : @644 [@dyn 320] (gas: 6)\n 19602: u64 [a2 + 576] = 0\n 19606: u64 [a2 + 568] = 0\n 19610: u64 [a2 + 552] = 0x9\n 19615: a1 = s1 + 0x1aa0\n 19619: u64 [a2 + 560] = 0\n 19623: ra = 642, jump @19\n      : @645 [@dyn 321] (gas: 2)\n 19629: a0 = 0xffffffbc\n 19639: t0 = 644, jump @1020\n      : @646 [@dyn 322] (gas: 1)\n 19645: jump @609 if a0 == 0\n      : @647 (gas: 11)\n 19649: a0 = u64 [s1 + 0xf8]\n 19653: i32 a0 = a0 + 0x44\n 19656: a1 = u64 [0x20000]\n 19661: a2 = s1 + 0x1878\n 19665: u64 [a2 + 528] = 0\n 19669: u64 [a2 + 0x220] = a1\n 19673: a1 = 0x7200000000000000\n 19683: u64 [a2 + 0x218] = a1\n 19687: a1 = s1 + 0x1a80\n 19691: u64 [a2 + 520] = 0\n 19695: ra = 646, jump @19\n      : @648 [@dyn 323] (gas: 3)\n 19701: a1 = 0x64\n 19704: a0 = u64 [s1 + 0xf8]\n 19708: ra = 648, jump @29\n      : @649 [@dyn 324] (gas: 5)\n 19714: i32 a1 = a0 + 0\n 19716: a0 = 0x1\n 19719: a2 = 0x64\n 19722: ecalli 8 // 'seal_return'\n 19724: fallthrough\n      : @650 (gas: 4)\n 19725: a0 = s1 + 0x1a40\n 19729: a1 = u64 [s1 + 0xf8]\n 19733: u64 [s1 + 0xa8] = a2\n 19737: ra = 650, jump @17\n      : @651 [@dyn 325] (gas: 12)\n 19743: a4 = u64 [s1 + 0x88]\n 19747: a2 = u64 [s1 + 0xa8]\n 19751: a0 = a2 | a4\n 19754: a1 = u64 [s1 + 0xd0]\n 19758: a3 = u64 [s1 + 0x90]\n 19762: a1 = a1 | a3\n 19765: a0 = a0 | a1\n 19768: a0 = a0 >> 0x20\n 19771: a1 = a1 | a4\n 19774: a1 = a1 << 0x20\n 19777: a0 = a0 | a1\n 19780: jump @609 if a0 != 0\n      : @652 (gas: 16)\n 19784: a0 = s1 + 0x1878\n 19788: a4 = u64 [a0 + 0x1e0]\n 19792: a5 = u64 [a0 + 0x1d8]\n 19796: a1 = u64 [a0 + 0x1c8]\n 19800: a3 = u64 [a0 + 0x1d0]\n 19804: a0 = a1 | a5\n 19807: u64 [s1 + 0x78] = a3\n 19810: u64 [s1 + 0x70] = a4\n 19813: a3 = a3 | a4\n 19816: a0 = a0 | a3\n 19819: a0 = a0 >> 0x20\n 19822: u64 [s1 + 0x68] = a5\n 19825: a3 = a3 | a5\n 19828: a3 = a3 << 0x20\n 19831: a0 = a0 | a3\n 19834: jump @609 if a0 != 0\n      : @653 (gas: 3)\n 19838: a0 = a2\n 19840: u64 [s1 + 0xc0] = a1\n 19844: ra = 652, jump @29\n      : @654 [@dyn 326] (gas: 4)\n 19850: u64 [s1 + 0x60] = a0\n 19853: a0 = u64 [s1 + 0x80]\n 19857: a1 = u64 [s1 + 0xc0]\n 19861: ra = 654, jump @29\n      : @655 [@dyn 327] (gas: 4)\n 19867: a1 = a0\n 19869: a0 = u64 [s1 + 0x60]\n 19872: a2 = u64 [s1 + 0xc0]\n 19876: ra = 656, jump @0\n      : @656 [@dyn 328] (gas: 7)\n 19882: a1 = u64 [s1 + 0xc0]\n 19886: a0 = u64 [s1 + 0xa8]\n 19890: a0 = a0 + a1\n 19893: a1 = a0 <u a1\n 19896: a2 = u64 [s1 + 0xd0]\n 19900: a4 = u64 [s1 + 0x78]\n 19903: t0 = 658, jump @1028\n      : @657 [@dyn 329] (gas: 9)\n 19909: a1 = u64 [s1 + 0x88]\n 19913: a3 = u64 [s1 + 0x68]\n 19916: a1 = a1 + a3\n 19919: t0 = a1 <u a3\n 19922: a5 = u64 [s1 + 0x90]\n 19926: a3 = u64 [s1 + 0x70]\n 19929: a5 = a5 + a3\n 19932: a3 = a5 + t0\n 19935: t0 = 660, jump @1014\n      : @658 [@dyn 330] (gas: 1)\n 19941: jump @609 if a1 != 0\n      : @659 (gas: 3)\n 19945: t0 = 0x296\n 19949: a2 = s1 + 0x1878\n 19953: fallthrough\n      : @660 [@dyn 331] (gas: 6)\n 19954: u64 [a2 + 448] = 0\n 19958: u64 [a2 + 440] = 0\n 19962: u64 [a2 + 432] = 0\n 19966: a1 = s1 + 0x1a20\n 19970: u64 [a2 + 424] = 0x1\n 19975: ra = 664, jump @19\n      : @661 [@dyn 332] (gas: 14)\n 19981: a0 = sp + 0xffffffffffffffe0\n 19984: a0 = a0 & 0xffffffffffffffe0\n 19987: u64 [s1 + 0x90] = a0\n 19991: sp = a0\n 19993: a0 = u64 [s1 + 0x70]\n 19996: a1 = u64 [s1 + 0x68]\n 19999: a0 = a0 | a1\n 20002: a1 = 0xffffffe0\n 20012: a2 = u64 [s1 + 0xc0]\n 20016: a1 = a2 <u a1\n 20019: a2 = u64 [s1 + 0x78]\n 20022: a1 = 0 if a2 != 0\n 20024: a1 = 0 if a0 != 0\n 20026: jump @609 if a1 == 0\n      : @662 (gas: 5)\n 20030: a0 = u64 [s1 + 0xc0]\n 20034: i32 a1 = a0 + 0x20\n 20037: u64 [s1 + 0xd0] = a1\n 20041: a0 = u64 [s1 + 0xa8]\n 20045: ra = 666, jump @29\n      : @663 [@dyn 333] (gas: 29)\n 20051: a1 = sp + 0xffffffffffffffe0\n 20054: a1 = a1 & 0xffffffffffffffe0\n 20057: u64 [s1 + 0xc0] = a1\n 20061: sp = a1\n 20063: i32 a0 = a0 + 0\n 20065: i32 a2 = a1 + 0\n 20067: a1 = u64 [s1 + 0xd0]\n 20071: ecalli 6 // 'hash_keccak_256'\n 20073: a3 = u64 [s1 + 0xc0]\n 20077: a0 = u64 [a3 + 0x18]\n 20080: a1 = u64 [a3 + 0x10]\n 20083: a2 = u64 [a3 + 0x8]\n 20086: a3 = u64 [a3]\n 20088: a4 = reverse a0\n 20090: a1 = reverse a1\n 20092: a2 = reverse a2\n 20094: a3 = reverse a3\n 20096: a0 = u64 [s1 + 0x90]\n 20100: u64 [s1 + 0x68] = a3\n 20103: u64 [a0 + 0x18] = a3\n 20106: u64 [s1 + 0x70] = a2\n 20109: u64 [a0 + 0x10] = a2\n 20112: u64 [s1 + 0x78] = a1\n 20115: u64 [a0 + 0x8] = a1\n 20118: u64 [s1 + 0x80] = a4\n 20122: u64 [a0] = a4\n 20124: a0 = s1 + 0x1a00\n 20128: a1 = 0x40\n 20131: ra = 668, jump @17\n      : @664 [@dyn 334] (gas: 18)\n 20137: a1 = s1 + 0x1878\n 20141: a5 = a1 + 0x100\n 20145: a0 = u64 [a5 + 0xa0]\n 20149: u64 [s1 + 0xa8] = a0\n 20153: a2 = u64 [a5 + 0x98]\n 20157: u64 [s1 + 0x88] = a2\n 20161: a4 = u64 [a5 + 0x90]\n 20165: u64 [s1 + 0xc0] = a4\n 20169: a3 = u64 [a5 + 0x88]\n 20173: u64 [s1 + 0xd0] = a3\n 20177: u64 [a5 + 0x80] = a0\n 20181: u64 [a5 + 0x78] = a2\n 20184: u64 [a5 + 0x70] = a4\n 20187: a0 = s1 + 0x19e0\n 20191: u64 [a5 + 0x68] = a3\n 20194: ra = 0x29e\n 20198: t0 = 0x31c\n 20202: jump @1026\n      : @665 [@dyn 335] (gas: 4)\n 20205: a0 = u64 [s1 + 0xa0]\n 20209: ra = 0x2a0\n 20213: ecalli 3 // 'caller'\n 20215: fallthrough\n      : @666 [@dyn 336] (gas: 6)\n 20216: a0 = u64 [s1 + 0xa8]\n 20220: a1 = u64 [s1 + 0xc0]\n 20224: a0 = a0 | a1\n 20227: a2 = u64 [s1 + 0x88]\n 20231: a1 = u64 [s1 + 0xd0]\n 20235: t0 = 674, jump @1036\n      : @667 [@dyn 337] (gas: 1)\n 20241: jump @609 if a0 != 0\n      : @668 (gas: 2)\n 20245: a2 = u64 [s1 + 0xd8]\n 20249: t0 = 676, jump @1025\n      : @669 [@dyn 338] (gas: 9)\n 20255: a2 = s1 + 0x1878\n 20259: u64 [a2 + 352] = 0\n 20263: a4 = a2 + 0x100\n 20267: u64 [a4 + 0x58] = a1\n 20270: u64 [a4 + 0x50] = a0\n 20273: a1 = s1 + 0x19c0\n 20277: u64 [a4 + 0x48] = a3\n 20280: a0 = u64 [s1 + 0xd0]\n 20284: ra = 678, jump @19\n      : @670 [@dyn 339] (gas: 13)\n 20290: a0 = u64 [s1 + 0xa8]\n 20294: a1 = u64 [s1 + 0x88]\n 20298: a2 = a1 | a0\n 20301: a0 = 0x100000000\n 20311: u64 [s1 + 0x88] = a0\n 20315: a0 = 0xffffffe0\n 20325: a1 = u64 [s1 + 0xd0]\n 20329: a0 = a1 <u a0\n 20332: a1 = u64 [s1 + 0xc0]\n 20336: a0 = 0 if a1 != 0\n 20338: u64 [s1 + 0xa8] = a2\n 20342: a0 = 0 if a2 != 0\n 20344: jump @609 if a0 == 0\n      : @671 (gas: 15)\n 20348: a0 = u64 [s1 + 0xd0]\n 20352: i32 a3 = a0 + 0x20\n 20355: a0 = s1 + 0x1878\n 20359: u64 [a0 + 320] = 0\n 20363: a1 = u64 [s1 + 0xb8]\n 20367: a4 = a0 + 0x100\n 20371: u64 [a4 + 0x28] = a1\n 20374: a1 = u64 [s1 + 0xb0]\n 20378: u64 [a4 + 0x30] = a1\n 20381: a1 = s1 + 0x19a0\n 20385: a2 = u64 [s1 + 0xc8]\n 20389: u64 [a4 + 0x38] = a2\n 20392: u64 [s1 + 0x60] = a3\n 20395: a0 = a3\n 20397: ra = 680, jump @19\n      : @672 [@dyn 340] (gas: 4)\n 20403: a0 = s1 + 0x2000\n 20407: i32 a0 = a0 + 0x5a0\n 20411: ecalli 7 // 'now'\n 20413: fallthrough\n      : @673 (gas: 9)\n 20414: a0 = u64 [s1 + 0x88]\n 20418: a0 = a0 + 0xffffffffffffffc0\n 20421: a1 = u64 [s1 + 0xd0]\n 20425: a0 = a1 <u a0\n 20428: a1 = u64 [s1 + 0xc0]\n 20432: a0 = 0 if a1 != 0\n 20434: a1 = u64 [s1 + 0xa8]\n 20438: a0 = 0 if a1 != 0\n 20440: jump @609 if a0 == 0\n      : @674 (gas: 17)\n 20444: a3 = s1 + 0x2078\n 20448: a0 = a3 + 0x500\n 20452: a5 = u64 [a0 + 0x28]\n 20455: a1 = u64 [a0 + 0x30]\n 20458: a2 = u64 [a0 + 0x38]\n 20461: a3 = u64 [a0 + 0x40]\n 20464: a4 = u64 [s1 + 0xd0]\n 20468: i32 a0 = a4 + 0x40\n 20471: a4 = s1 + 0x1878\n 20475: u64 [a4 + 0x120] = a3\n 20479: a3 = a4 + 0x100\n 20483: u64 [a3 + 0x18] = a2\n 20486: u64 [a3 + 0x10] = a1\n 20489: a1 = s1 + 0x1980\n 20493: u64 [a3 + 0x8] = a5\n 20496: u64 [s1 + 0x58] = a0\n 20499: ra = 682, jump @19\n      : @675 [@dyn 341] (gas: 3)\n 20505: a0 = s1 + 0x1960\n 20509: a1 = u64 [s1 + 0x90]\n 20513: ra = 684, jump @21\n      : @676 [@dyn 342] (gas: 13)\n 20519: a0 = s1 + 0x1878\n 20523: a5 = u64 [a0 + 0x100]\n 20527: a3 = u64 [a0 + 0xf8]\n 20531: a2 = u64 [a0 + 0xf0]\n 20535: a0 = a5 >u 0\n 20537: a1 = a3 >u 0\n 20539: a1 = a0 if a5 != 0\n 20542: a4 = a3\n 20544: a0 = a3 | a5\n 20547: a3 = a2\n 20549: a2 = a2 >u 0\n 20551: a2 = a1 if a0 != 0\n 20554: jump @772 if a2 != 0\n      : @677 (gas: 23)\n 20558: a0 = s1 + 0x1878\n 20562: a0 = u64 [a0 + 0xe8]\n 20566: u64 [s1 + 0xa8] = a0\n 20570: a0 = a0 + 0x1\n 20573: a1 = a0 <u 0x1\n 20576: u64 [s1 + 0x88] = a3\n 20580: a1 = a1 + a3\n 20583: a2 = a0 | a1\n 20586: a2 = a2 <u 0x1\n 20589: u64 [s1 + 0x50] = a4\n 20592: a2 = a2 + a4\n 20595: a3 = a2 <u a4\n 20598: u64 [s1 + 0x48] = a5\n 20601: a3 = a3 + a5\n 20604: a4 = s1 + 0x2078\n 20608: a5 = a4 + 0x500\n 20612: u64 [a5 + 0x48] = a0\n 20615: u64 [a5 + 0x50] = a1\n 20618: u64 [a5 + 0x58] = a2\n 20621: u64 [a5 + 0x60] = a3\n 20624: a1 = s1 + 0x25c0\n 20628: a0 = u64 [s1 + 0x90]\n 20632: ra = 686, jump @23\n      : @678 [@dyn 343] (gas: 26)\n 20638: a0 = sp + 0xffffffffffffffe0\n 20641: a0 = a0 & 0xffffffffffffffe0\n 20644: u64 [s1 + 0xc0] = a0\n 20648: sp = a0\n 20650: a1 = s1 + 0x1878\n 20654: a0 = u64 [s1 + 0x48]\n 20657: u64 [a1 + 0x80] = a0\n 20661: a0 = u64 [s1 + 0x50]\n 20664: u64 [a1 + 0x78] = a0\n 20667: a0 = u64 [s1 + 0x88]\n 20671: u64 [a1 + 0x70] = a0\n 20674: a0 = u64 [s1 + 0xa8]\n 20678: u64 [a1 + 0x68] = a0\n 20681: a0 = u64 [s1 + 0x68]\n 20684: u64 [a1 + 0xa0] = a0\n 20688: a0 = u64 [s1 + 0x70]\n 20691: u64 [a1 + 0x98] = a0\n 20695: a0 = u64 [s1 + 0x78]\n 20698: u64 [a1 + 0x90] = a0\n 20702: a4 = a1\n 20704: a0 = s1 + 0x1920\n 20708: a1 = s1 + 0x1900\n 20712: a2 = s1 + 0x18e0\n 20716: a3 = u64 [s1 + 0x80]\n 20720: u64 [a4 + 0x88] = a3\n 20724: ra = 688, jump @911\n      : @679 [@dyn 344] (gas: 2)\n 20730: a1 = s1 + 0x1878\n 20734: fallthrough\n      : @680 (gas: 21)\n 20735: t0 = u64 [a1 + 0xd8]\n 20739: t1 = u64 [a1 + 0xc8]\n 20743: t2 = u64 [a1 + 0xe0]\n 20747: a2 = u64 [a1 + 0xd0]\n 20751: a4 = u64 [a1 + 0xb8]\n 20755: a5 = u64 [a1 + 0xc0]\n 20759: a0 = u64 [a1 + 0xa8]\n 20763: a1 = u64 [a1 + 0xb0]\n 20767: u64 [s1 + 0xa8] = a4\n 20771: a3 = u64 [s1 + 0xc0]\n 20775: u64 [a3 + 0x10] = a4\n 20778: u64 [s1 + 0x90] = a5\n 20782: u64 [a3 + 0x18] = a5\n 20785: u64 [s1 + 0x80] = a0\n 20789: u64 [a3] = a0\n 20791: a2 = a2 | t2\n 20794: a0 = t1 | t0\n 20797: a0 = a0 | a2\n 20800: u64 [s1 + 0x88] = a1\n 20804: u64 [a3 + 0x8] = a1\n 20807: jump @779 if a0 != 0\n      : @681 (gas: 5)\n 20811: a0 = 0xffffffff\n 20821: u64 [s1 + 0x78] = a0\n 20824: a0 = s1 + 0x1880\n 20828: a1 = u64 [s1 + 0xd0]\n 20832: ra = 690, jump @17\n      : @682 [@dyn 345] (gas: 14)\n 20838: a2 = s1 + 0x1878\n 20842: a0 = u64 [a2 + 0x8]\n 20845: a1 = u64 [a2 + 0x10]\n 20848: a2 = u64 [a2 + 0x18]\n 20851: a0 = a0 & 0xffffffffffffffff\n 20854: u64 [s1 + 0xd0] = a0\n 20858: a1 = a1 & 0xffffffffffffffff\n 20861: u64 [s1 + 0x70] = a1\n 20864: a0 = u64 [s1 + 0x78]\n 20867: a0 = a0 & a2\n 20870: u64 [s1 + 0x68] = a0\n 20873: a0 = s1 + 0x1860\n 20877: a1 = u64 [s1 + 0xc0]\n 20881: ra = 692, jump @21\n      : @683 [@dyn 346] (gas: 18)\n 20887: a0 = s1 + 0x1078\n 20891: a0 = u32 [a0 + 0x7fc]\n 20895: a0 = a0 << 0x20\n 20898: a1 = s1 + 0x1878\n 20902: a1 = u64 [a1]\n 20904: a2 = u64 [s1 + 0x68]\n 20907: a0 = a0 | a2\n 20910: a2 = s1 + 0x2078\n 20914: a3 = u64 [s1 + 0x70]\n 20917: a4 = a2 + 0x500\n 20921: u64 [a4 + 0x70] = a3\n 20924: a3 = u64 [s1 + 0xd0]\n 20928: u64 [a4 + 0x68] = a3\n 20931: u64 [a4 + 0x80] = a1\n 20935: u64 [a4 + 0x78] = a0\n 20938: a1 = s1 + 0x25e0\n 20942: a0 = u64 [s1 + 0xc0]\n 20946: ra = 694, jump @23\n      : @684 [@dyn 347] (gas: 3)\n 20952: a0 = s1 + 0x1840\n 20956: a1 = u64 [s1 + 0x60]\n 20959: ra = 696, jump @17\n      : @685 [@dyn 348] (gas: 36)\n 20965: a2 = s1 + 0x1078\n 20969: a3 = a2 + 0x700\n 20973: a0 = u64 [a3 + 0xc8]\n 20977: a1 = u64 [a3 + 0xd0]\n 20981: a2 = u64 [a3 + 0xd8]\n 20985: a0 = a0 & 0xffffffffffffffff\n 20988: u64 [s1 + 0xd0] = a0\n 20992: a1 = a1 & 0xffffffffffffffff\n 20995: u64 [s1 + 0xc0] = a1\n 20999: a0 = u64 [s1 + 0x78]\n 21002: a0 = a0 & a2\n 21005: u64 [s1 + 0x78] = a0\n 21008: a0 = sp + 0xffffffffffffffe0\n 21011: t0 = a0 & 0xffffffffffffffe0\n 21014: sp = t0\n 21016: a0 = u64 [s1 + 0x80]\n 21020: a0 = a0 + 0x1\n 21023: a1 = a0 <u 0x1\n 21026: a2 = u64 [s1 + 0x88]\n 21030: a5 = a2 + a1\n 21033: a2 = a0 | a5\n 21036: a2 = a2 <u 0x1\n 21039: a3 = u64 [s1 + 0xa8]\n 21043: a2 = a2 + a3\n 21046: a3 = a2 <u a3\n 21049: a4 = u64 [s1 + 0x90]\n 21053: a3 = a3 + a4\n 21056: a1 = t0\n 21058: a4 = t0\n 21060: u64 [s1 + 0x70] = a4\n 21063: u64 [a4 + 0x18] = a3\n 21066: u64 [a4 + 0x10] = a2\n 21069: u64 [a4 + 0x8] = a5\n 21072: u64 [a4] = a0\n 21074: a0 = s1 + 0x1820\n 21078: ra = 698, jump @21\n      : @686 [@dyn 349] (gas: 17)\n 21084: a1 = s1 + 0x1078\n 21088: a0 = u32 [a1 + 0x7bc]\n 21092: a0 = a0 << 0x20\n 21095: a1 = u64 [a1 + 0x7c0]\n 21099: a2 = u64 [s1 + 0x78]\n 21102: a0 = a0 | a2\n 21105: a2 = s1 + 0x2078\n 21109: a3 = u64 [s1 + 0xc0]\n 21113: a4 = a2 + 0x500\n 21117: u64 [a4 + 0x90] = a3\n 21121: a3 = u64 [s1 + 0xd0]\n 21125: u64 [a4 + 0x88] = a3\n 21129: u64 [a4 + 0xa0] = a1\n 21133: u64 [a4 + 0x98] = a0\n 21137: a1 = s1 + 0x2600\n 21141: a0 = u64 [s1 + 0x70]\n 21144: ra = 700, jump @23\n      : @687 [@dyn 350] (gas: 3)\n 21150: a0 = s1 + 0x1800\n 21154: a1 = u64 [s1 + 0x58]\n 21157: ra = 702, jump @17\n      : @688 [@dyn 351] (gas: 30)\n 21163: a1 = s1 + 0x1078\n 21167: t0 = u64 [a1 + 0x788]\n 21171: t1 = u64 [a1 + 0x790]\n 21175: a0 = u64 [s1 + 0x80]\n 21179: a2 = a0 + 0x2\n 21182: a3 = a2 <u a0\n 21185: a0 = u64 [s1 + 0x88]\n 21189: a4 = a0 + a3\n 21192: a5 = a4 <u a0\n 21195: a5 = a3 if a3 == 0\n 21198: t2 = u64 [a1 + 0x798]\n 21202: a0 = u64 [s1 + 0xa8]\n 21206: a5 = a5 + a0\n 21209: a0 = a5 <u a0\n 21212: a3 = u64 [s1 + 0x90]\n 21216: a0 = a0 + a3\n 21219: ra = u64 [a1 + 0x7a0]\n 21223: a1 = s1 + 0x2078\n 21227: a3 = a1 + 0x500\n 21231: u64 [a3 + 0xc0] = a0\n 21235: u64 [a3 + 0xb8] = a5\n 21239: u64 [a3 + 0xb0] = a4\n 21243: u64 [a3 + 0xa8] = a2\n 21247: u64 [a1 + 0x5e0] = ra\n 21251: u64 [a1 + 0x5d8] = t2\n 21255: u64 [a1 + 0x5d0] = t1\n 21259: u64 [a1 + 0x5c8] = t0\n 21263: a0 = s1 + 0x2620\n 21267: a1 = s1 + 0x2640\n 21271: ra = 704, jump @23\n      : @689 [@dyn 352] (gas: 3)\n 21277: a0 = s1 + 0x17e0\n 21281: a1 = u64 [s1 + 0x98]\n 21285: ra = 706, jump @21\n      : @690 [@dyn 353] (gas: 17)\n 21291: a1 = s1 + 0x1078\n 21295: a0 = u32 [a1 + 0x77c]\n 21299: a0 = a0 << 0x20\n 21302: a1 = u64 [a1 + 0x780]\n 21306: a2 = u64 [s1 + 0xc8]\n 21310: a0 = a0 | a2\n 21313: a2 = s1 + 0x2078\n 21317: a3 = u64 [s1 + 0xb0]\n 21321: a4 = a2 + 0x500\n 21325: u64 [a4 + 0xf0] = a3\n 21329: a3 = u64 [s1 + 0xb8]\n 21333: u64 [a4 + 0xe8] = a3\n 21337: u64 [a2 + 0x600] = a1\n 21341: u64 [a4 + 0xf8] = a0\n 21345: a1 = s1 + 0x2660\n 21349: a0 = u64 [s1 + 0x98]\n 21353: ra = 708, jump @23\n      : @691 [@dyn 354] (gas: 12)\n 21359: a0 = s1 + 0x1078\n 21363: u64 [a0 + 1888] = 0\n 21367: a1 = u64 [s1 + 0xc8]\n 21371: a3 = a0 + 0x700\n 21375: u64 [a3 + 0x58] = a1\n 21378: a1 = u64 [s1 + 0xb0]\n 21382: u64 [a3 + 0x50] = a1\n 21385: a1 = s1 + 0x17c0\n 21389: a2 = u64 [s1 + 0xb8]\n 21393: u64 [a3 + 0x48] = a2\n 21396: a0 = 0\n 21398: ra = 710, jump @19\n      : @692 [@dyn 355] (gas: 3)\n 21404: t0 = 0x2c8\n 21408: a1 = s1 + 0x1078\n 21412: fallthrough\n      : @693 [@dyn 356] (gas: 8)\n 21413: u64 [a1 + 1856] = 0\n 21417: u64 [a1 + 1848] = 0\n 21421: u64 [a1 + 1832] = 0x2\n 21426: a2 = a1\n 21428: a0 = 0x20\n 21431: a1 = s1 + 0x17a0\n 21435: u64 [a2 + 1840] = 0\n 21439: ra = 714, jump @19\n      : @694 [@dyn 357] (gas: 2)\n 21445: a1 = i32 [0x20074]\n 21450: jump @696 if a1 >u 63\n      : @695 (gas: 2)\n 21454: u32 [0x20074] = 0x40\n 21460: fallthrough\n      : @696 (gas: 14)\n 21461: a0 = sp + 0xffffffffffffffe0\n 21464: a2 = a0 & 0xffffffffffffffe0\n 21467: u64 [s1 + 0xd0] = a2\n 21471: sp = a2\n 21473: a0 = 0x20080\n 21478: i32 a0 = a0 + 0\n 21480: i32 a2 = a2 + 0\n 21482: a1 = 0x40\n 21485: u64 [s1 + 0xc0] = a0\n 21489: ra = 0x2cc\n 21493: ecalli 6 // 'hash_keccak_256'\n 21495: a3 = u64 [s1 + 0xd0]\n 21499: t0 = 0x2ce\n 21503: jump @1035\n      : @697 [@dyn 358] (gas: 2)\n 21506: a3 = u64 [s1 + 0xd0]\n 21510: t0 = 718, jump @1035\n      : @698 [@dyn 359] (gas: 17)\n 21516: a3 = s1 + 0x1078\n 21520: a5 = u64 [s1 + 0xe0]\n 21524: u64 [a3 + 0x700] = a5\n 21528: a5 = u64 [s1 + 0xf0]\n 21532: u64 [a3 + 0x6f8] = a5\n 21536: a5 = u64 [s1 + 0xe8]\n 21540: u64 [a3 + 0x6f0] = a5\n 21544: a5 = u64 [s1 + 0xf8]\n 21548: u64 [a3 + 0x6e8] = a5\n 21552: a5 = a3 + 0x700\n 21556: u64 [a5 + 0x20] = a2\n 21559: u64 [a5 + 0x18] = a1\n 21562: u64 [a5 + 0x10] = a0\n 21565: a0 = s1 + 0x1780\n 21569: a1 = s1 + 0x1760\n 21573: u64 [a5 + 0x8] = a4\n 21576: ra = 720, jump @971\n      : @699 [@dyn 360] (gas: 15)\n 21582: a3 = s1 + 0x1078\n 21586: a0 = u64 [s1 + 0xe0]\n 21590: a4 = a3 + 0x600\n 21594: u64 [a4 + 0xc0] = a0\n 21598: a0 = u64 [s1 + 0xf0]\n 21602: u64 [a4 + 0xb8] = a0\n 21606: a0 = u64 [s1 + 0xe8]\n 21610: u64 [a4 + 0xb0] = a0\n 21614: a0 = s1 + 0x1740\n 21618: a1 = s1 + 0x1720\n 21622: a2 = u64 [s1 + 0xf8]\n 21626: u64 [a4 + 0xa8] = a2\n 21630: ra = 0x2d2\n 21634: t0 = 0x3d6\n 21638: jump @1046\n      : @700 [@dyn 361] (gas: 3)\n 21641: t0 = 0x2d4\n 21645: a1 = s1 + 0x1078\n 21649: fallthrough\n      : @701 [@dyn 362] (gas: 12)\n 21650: a2 = a1 + 0x600\n 21654: a0 = u64 [a2 + 0xe0]\n 21658: u64 [s1 + 0x90] = a0\n 21662: a0 = u64 [a2 + 0xd8]\n 21666: u64 [s1 + 0x98] = a0\n 21670: a0 = u64 [a2 + 0xd0]\n 21674: u64 [s1 + 0xa8] = a0\n 21678: a0 = u64 [a2 + 0xc8]\n 21682: u64 [s1 + 0xd0] = a0\n 21686: a0 = s1 + 0x1700\n 21690: a1 = 0x40\n 21693: ra = 726, jump @17\n      : @702 [@dyn 363] (gas: 15)\n 21699: a0 = s1 + 0x1078\n 21703: a2 = a0 + 0x600\n 21707: a1 = u64 [a2 + 0xa0]\n 21711: u64 [s1 + 0xf0] = a1\n 21715: a1 = u64 [a2 + 0x98]\n 21719: u64 [s1 + 0xe8] = a1\n 21723: a1 = u64 [a2 + 0x90]\n 21727: u64 [s1 + 0xe0] = a1\n 21731: a0 = u64 [a2 + 0x88]\n 21735: u64 [s1 + 0xf8] = a0\n 21739: a0 = s1 + 0x2000\n 21743: i32 a0 = a0 + 0x680\n 21747: ra = 0x2d8\n 21751: ecalli 7 // 'now'\n 21753: fallthrough\n      : @703 [@dyn 364] (gas: 7)\n 21754: a0 = u64 [s1 + 0xf0]\n 21758: a1 = u64 [s1 + 0xe0]\n 21762: a0 = a0 | a1\n 21765: a1 = u64 [s1 + 0xf8]\n 21769: a5 = a1\n 21771: a2 = u64 [s1 + 0xe8]\n 21775: t0 = 730, jump @1036\n      : @704 [@dyn 365] (gas: 1)\n 21781: jump @609 if a0 != 0\n      : @705 (gas: 15)\n 21785: a3 = s1 + 0x2078\n 21789: a4 = a3 + 0x600\n 21793: a0 = u64 [a4 + 0x8]\n 21796: a1 = u64 [a4 + 0x10]\n 21799: a2 = u64 [a4 + 0x18]\n 21802: a3 = u64 [a4 + 0x20]\n 21805: a4 = s1 + 0x1078\n 21809: u64 [a4 + 0x680] = a3\n 21813: a3 = a4 + 0x600\n 21817: u64 [a3 + 0x78] = a2\n 21820: u64 [a3 + 0x70] = a1\n 21823: a1 = s1 + 0x16e0\n 21827: u64 [a3 + 0x68] = a0\n 21830: a0 = a5\n 21832: ra = 732, jump @19\n      : @706 [@dyn 366] (gas: 77)\n 21838: a0 = u64 [s1 + 0xa0]\n 21842: ecalli 3 // 'caller'\n 21844: a2 = u64 [s1 + 0xd8]\n 21848: a0 = u64 [a2 + 0x8]\n 21851: a1 = i32 [a2 + 0x10]\n 21854: a2 = u64 [a2]\n 21856: a3 = reverse a0\n 21858: a0 = a3 << 0x20\n 21861: a1 = reverse a1\n 21863: a1 = a1 >> 0x20\n 21866: t0 = a1 | a0\n 21869: a3 = a3 >> 0x20\n 21872: a2 = reverse a2\n 21874: a1 = a2 << 0x20\n 21877: a1 = a1 | a3\n 21880: a2 = a2 >> 0x20\n 21883: a3 = u64 [s1 + 0xc8]\n 21887: a0 = s1 + 0x1078\n 21891: a4 = a0 + 0x500\n 21895: u64 [a4 + 0xf8] = a3\n 21899: a3 = u64 [s1 + 0xb0]\n 21903: u64 [a4 + 0xf0] = a3\n 21907: a3 = u64 [s1 + 0xb8]\n 21911: u64 [a4 + 0xe8] = a3\n 21915: a3 = u64 [s1 + 0x90]\n 21919: u64 [a0 + 0x640] = a3\n 21923: a3 = u64 [0x20008]\n 21928: a4 = u64 [s1 + 0x98]\n 21932: u64 [a0 + 0x638] = a4\n 21936: a4 = u64 [s1 + 0xa8]\n 21940: u64 [a0 + 0x630] = a4\n 21944: a4 = u64 [s1 + 0xd0]\n 21948: u64 [a0 + 0x628] = a4\n 21952: u64 [a0 + 0x660] = a3\n 21956: a3 = u64 [0x20010]\n 21961: a4 = u64 [0x20018]\n 21966: a5 = u64 [0x20020]\n 21971: u64 [a0 + 0x658] = a3\n 21975: u64 [a0 + 1536] = 0\n 21979: a3 = a0 + 0x600\n 21983: u64 [a3 + 0x50] = a4\n 21986: u64 [a3 + 0x48] = a5\n 21989: u64 [a3 + 0x18] = a2\n 21992: u64 [a3 + 0x10] = a1\n 21995: u64 [a0 + 0x608] = t0\n 21999: a1 = 0x20\n 22002: a2 = s1 + 0x16c0\n 22006: a3 = s1 + 0x16a0\n 22010: a4 = s1 + 0x1680\n 22014: a5 = s1 + 0x1660\n 22018: u64 [a0 + 1568] = 0\n 22022: a0 = u64 [s1 + 0xf8]\n 22026: ra = 0x2de\n 22030: sp = sp + 0xfffffffffffffee0\n 22034: u64 [sp + 0x118] = ra\n 22038: u64 [sp + 0x110] = s0\n 22042: u64 [sp + 0x108] = s1\n 22046: s0 = sp + 0x120\n 22050: sp = sp & 0xffffffffffffffe0\n 22053: s1 = u64 [a5]\n 22055: u64 [sp + 0x60] = s1\n 22058: s1 = u64 [a5 + 0x8]\n 22061: u64 [sp + 0x68] = s1\n 22064: s1 = u64 [a5 + 0x10]\n 22067: u64 [sp + 0x70] = s1\n 22070: a5 = u64 [a5 + 0x18]\n 22073: u64 [sp + 0x78] = a5\n 22076: a5 = u64 [a4]\n 22078: u64 [sp + 0x38] = a5\n 22081: a5 = u64 [a4 + 0x8]\n 22084: u64 [sp + 0x40] = a5\n 22087: a5 = u64 [a4 + 0x10]\n 22090: u64 [sp + 0x48] = a5\n 22093: a4 = u64 [a4 + 0x18]\n 22096: u64 [sp + 0x50] = a4\n 22099: t0 = 0xe\n 22102: jump @1029\n      : @707 [@dyn 367] (gas: 6)\n 22105: a0 = 0\n 22107: a1 = u64 [s1 + 0xc0]\n 22111: a2 = 0\n 22113: ecalli 8 // 'seal_return'\n 22115: a1 = 0x20080\n 22120: jump @739\n      : @708 (gas: 7)\n 22123: a0 = a0 | a4\n 22126: a0 = a0 >> 0x20\n 22129: t0 = a1\n 22131: a1 = a1 | a4\n 22134: a1 = a1 << 0x20\n 22137: a0 = a0 | a1\n 22140: jump @609 if a0 != 0\n      : @709 (gas: 19)\n 22144: a0 = a3 + 0x20\n 22147: u64 [s1 + 0xd8] = a0\n 22151: t1 = a0 <u a3\n 22154: a0 = a5 + t1\n 22157: u64 [s1 + 0xf0] = a0\n 22161: a1 = a0 <u a5\n 22164: a1 = t1 if t1 == 0\n 22167: a1 = a1 + t0\n 22170: u64 [s1 + 0xc8] = a1\n 22174: a0 = a1 <u t0\n 22177: a0 = a0 + t2\n 22180: u64 [s1 + 0xd0] = a0\n 22184: u64 [ra + 96] = 0\n 22187: u64 [ra + 88] = 0\n 22190: u64 [ra + 80] = 0\n 22193: a1 = s1 + 0x10c0\n 22197: u64 [ra + 72] = 0x20\n 22201: a0 = a3\n 22203: ra = 736, jump @19\n      : @710 [@dyn 368] (gas: 3)\n 22209: a0 = s1 + 0x10a0\n 22213: a1 = u64 [s1 + 0x8]\n 22216: ra = 738, jump @17\n      : @711 [@dyn 369] (gas: 12)\n 22222: a0 = u64 [s1 + 0xd8]\n 22226: a3 = u64 [s1 + 0xc8]\n 22230: a2 = a0 | a3\n 22233: a1 = u64 [s1 + 0xf0]\n 22237: a4 = u64 [s1 + 0xd0]\n 22241: a1 = a1 | a4\n 22244: a2 = a2 | a1\n 22247: a2 = a2 >> 0x20\n 22250: a1 = a1 | a3\n 22253: a1 = a1 << 0x20\n 22256: a1 = a1 | a2\n 22259: jump @609 if a1 != 0\n      : @712 (gas: 15)\n 22263: a5 = s1 + 0x1078\n 22267: a4 = u64 [a5 + 0x40]\n 22270: a1 = u64 [a5 + 0x38]\n 22273: a2 = u64 [a5 + 0x30]\n 22276: a3 = u64 [a5 + 0x28]\n 22279: u64 [s1 + 0x48] = a3\n 22282: u64 [a5 + 0x8] = a3\n 22285: u64 [s1 + 0x50] = a2\n 22288: u64 [a5 + 0x10] = a2\n 22291: u64 [s1 + 0x58] = a1\n 22294: u64 [a5 + 0x18] = a1\n 22297: a1 = s1 + 0x1080\n 22301: u64 [s1 + 0x60] = a4\n 22304: u64 [a5 + 0x20] = a4\n 22307: ra = 740, jump @19\n      : @713 [@dyn 370] (gas: 27)\n 22313: ra = 0\n 22315: a3 = 0\n 22317: t0 = 0\n 22319: t1 = 0\n 22321: a1 = u64 [s1 + 0xf8]\n 22325: a0 = a1 + 0x40\n 22328: u64 [s1 + 0xf0] = a0\n 22332: a0 = a0 <u a1\n 22335: a2 = u64 [s1 + 0xe0]\n 22339: a1 = a2 + a0\n 22342: u64 [s1 + 0xd8] = a1\n 22346: a1 = a1 <u a2\n 22349: a1 = a0 if a0 == 0\n 22352: a0 = u64 [s1 + 0xe8]\n 22356: a1 = a1 + a0\n 22359: u64 [s1 + 0xc8] = a1\n 22363: a0 = a1 <u a0\n 22366: a1 = u64 [s1 + 0xa0]\n 22370: a0 = a0 + a1\n 22373: u64 [s1 + 0xd0] = a0\n 22377: a0 = 0x100000000\n 22387: u64 [s1 + 0x40] = a0\n 22390: a0 = 0xffffffe0\n 22400: u64 [s1 + 0xb0] = a0\n 22404: a1 = u64 [s1 + 0x10]\n 22407: t2 = u64 [s1 + 0x18]\n 22410: fallthrough\n      : @714 (gas: 18)\n 22411: a0 = u64 [s1 + 0x48]\n 22414: a0 = ra <u a0\n 22417: a2 = u64 [s1 + 0x50]\n 22420: a4 = a3 ^ a2\n 22423: u64 [s1 + 0x88] = a3\n 22427: a2 = a3 <u a2\n 22430: a2 = a0 if a4 == 0\n 22433: a5 = u64 [s1 + 0x58]\n 22436: a0 = t0 <u a5\n 22439: a3 = u64 [s1 + 0x60]\n 22442: a4 = t1 ^ a3\n 22445: u64 [s1 + 0x80] = t1\n 22449: a3 = t1 <u a3\n 22452: a3 = a0 if a4 == 0\n 22455: a0 = t0 ^ a5\n 22458: a0 = a0 | a4\n 22461: a3 = a2 if a0 == 0\n 22464: jump @737 if a3 == 0\n      : @715 (gas: 13)\n 22468: u64 [s1 + 0x70] = t0\n 22471: u64 [s1 + 0x78] = ra\n 22474: a3 = u64 [s1 + 0x20]\n 22477: a0 = a1 | a3\n 22480: u64 [s1 + 0x18] = t2\n 22483: a2 = u64 [s1 + 0x28]\n 22486: a2 = a2 | t2\n 22489: a0 = a0 | a2\n 22492: a0 = a0 >> 0x20\n 22495: a2 = a2 | a3\n 22498: a2 = a2 << 0x20\n 22501: a0 = a0 | a2\n 22504: jump @717 if a0 == 0\n      : @716 (gas: 1)\n 22507: jump @609\n      : @717 (gas: 3)\n 22510: a0 = s1 + 0x1060\n 22514: u64 [s1 + 0x10] = a1\n 22517: ra = 742, jump @17\n      : @718 [@dyn 371] (gas: 17)\n 22523: a0 = s1 + 0x1078\n 22527: a3 = u64 [a0]\n 22529: a5 = a0 + 0xffffffffffffff00\n 22533: a4 = u64 [a5 + 0xf8]\n 22537: a2 = u64 [a5 + 0xf0]\n 22541: a1 = u64 [a5 + 0xe8]\n 22545: u64 [s1 + 0xc0] = a2\n 22549: u64 [s1 + 0xa8] = a3\n 22553: a0 = a2 | a3\n 22556: a2 = a1 | a4\n 22559: a2 = a2 | a0\n 22562: a2 = a2 >> 0x20\n 22565: u64 [s1 + 0x90] = a4\n 22569: a0 = a0 | a4\n 22572: a0 = a0 << 0x20\n 22575: a0 = a0 | a2\n 22578: jump @720 if a0 == 0\n      : @719 (gas: 1)\n 22581: jump @609\n      : @720 (gas: 3)\n 22584: a0 = s1 + 0x1040\n 22588: u64 [s1 + 0xb8] = a1\n 22592: ra = 744, jump @17\n      : @721 [@dyn 372] (gas: 12)\n 22598: a5 = u64 [s1 + 0xf0]\n 22602: a3 = u64 [s1 + 0xc8]\n 22606: a0 = a5 | a3\n 22609: a1 = u64 [s1 + 0xd0]\n 22613: a2 = u64 [s1 + 0xd8]\n 22617: a1 = a1 | a2\n 22620: a0 = a0 | a1\n 22623: a0 = a0 >> 0x20\n 22626: a1 = a1 | a3\n 22629: a1 = a1 << 0x20\n 22632: a0 = a0 | a1\n 22635: jump @723 if a0 == 0\n      : @722 (gas: 1)\n 22638: jump @609\n      : @723 (gas: 18)\n 22641: a3 = s1 + 0x7ff\n 22645: a3 = a3 + 0x79\n 22648: a0 = u64 [a3 + 0x7d8]\n 22652: a1 = u64 [a3 + 0x7d0]\n 22656: a2 = u64 [a3 + 0x7c8]\n 22660: a4 = u64 [s1 + 0x98]\n 22664: a0 = a0 & a4\n 22667: a1 = a1 & 0xffffffffffffffff\n 22670: a2 = a2 & 0xffffffffffffffff\n 22673: u64 [a3 + 1984] = 0\n 22677: a4 = a3 + 0x700\n 22681: u64 [a4 + 0xa8] = a2\n 22685: u64 [a4 + 0xb0] = a1\n 22689: a1 = s1 + 0x1020\n 22693: u64 [a4 + 0xb8] = a0\n 22697: a0 = a5\n 22699: u64 [s1 + 0xf0] = a5\n 22703: ra = 746, jump @19\n      : @724 [@dyn 373] (gas: 11)\n 22709: a0 = u64 [s1 + 0xa8]\n 22713: a3 = u64 [s1 + 0x90]\n 22717: a3 = a3 | a0\n 22720: a1 = u64 [s1 + 0xb8]\n 22724: a0 = u64 [s1 + 0xb0]\n 22728: a0 = a1 <u a0\n 22731: a2 = u64 [s1 + 0xc0]\n 22735: a0 = 0 if a2 != 0\n 22737: u64 [s1 + 0xa8] = a3\n 22741: a0 = 0 if a3 != 0\n 22743: jump @726 if a0 != 0\n      : @725 (gas: 1)\n 22746: jump @609\n      : @726 (gas: 3)\n 22749: i32 a1 = a1 + 0x20\n 22752: a0 = s1 + 0x1000\n 22756: ra = 748, jump @17\n      : @727 [@dyn 374] (gas: 11)\n 22762: a0 = u64 [s1 + 0xd0]\n 22766: a1 = u64 [s1 + 0xc8]\n 22770: a2 = a1 | a0\n 22773: a5 = u64 [s1 + 0xf0]\n 22777: a0 = u64 [s1 + 0xb0]\n 22781: a0 = a5 <u a0\n 22784: a1 = u64 [s1 + 0xd8]\n 22788: a0 = 0 if a1 != 0\n 22790: u64 [s1 + 0x90] = a2\n 22794: a0 = 0 if a2 != 0\n 22796: jump @729 if a0 != 0\n      : @728 (gas: 1)\n 22799: jump @609\n      : @729 (gas: 18)\n 22802: a4 = s1 + 0x7ff\n 22806: a4 = a4 + 0x79\n 22809: a0 = u64 [a4 + 0x798]\n 22813: a1 = u64 [a4 + 0x790]\n 22817: a2 = u64 [a4 + 0x788]\n 22821: a3 = u64 [s1 + 0x98]\n 22825: a3 = a3 & a0\n 22828: a1 = a1 & 0xffffffffffffffff\n 22831: a2 = a2 & 0xffffffffffffffff\n 22834: i32 a0 = a5 + 0x20\n 22837: u64 [a4 + 1920] = 0\n 22841: a5 = a4 + 0x700\n 22845: u64 [a5 + 0x68] = a2\n 22848: u64 [a5 + 0x70] = a1\n 22851: a1 = s1 + 0x7ff\n 22855: a1 = a1 + 0x7e1\n 22859: u64 [a5 + 0x78] = a3\n 22862: ra = 750, jump @19\n      : @730 [@dyn 375] (gas: 10)\n 22868: a0 = u64 [s1 + 0x40]\n 22871: a0 = a0 + 0xffffffffffffffc0\n 22874: a1 = u64 [s1 + 0xb8]\n 22878: u64 [s1 + 0x68] = a0\n 22881: a0 = a1 <u a0\n 22884: a2 = u64 [s1 + 0xc0]\n 22888: a0 = 0 if a2 != 0\n 22890: a2 = u64 [s1 + 0xa8]\n 22894: a0 = 0 if a2 != 0\n 22896: jump @732 if a0 != 0\n      : @731 (gas: 1)\n 22899: jump @609\n      : @732 (gas: 4)\n 22902: i32 a1 = a1 + 0x40\n 22905: a0 = s1 + 0x7ff\n 22909: a0 = a0 + 0x7c1\n 22913: ra = 752, jump @17\n      : @733 [@dyn 376] (gas: 8)\n 22919: a2 = u64 [s1 + 0xf0]\n 22923: a0 = u64 [s1 + 0x68]\n 22926: a0 = a2 <u a0\n 22929: a1 = u64 [s1 + 0xd8]\n 22933: a0 = 0 if a1 != 0\n 22935: a1 = u64 [s1 + 0x90]\n 22939: a0 = 0 if a1 != 0\n 22941: jump @735 if a0 != 0\n      : @734 (gas: 1)\n 22944: jump @609\n      : @735 (gas: 15)\n 22947: a5 = s1 + 0x7ff\n 22951: a5 = a5 + 0x79\n 22954: t0 = u64 [a5 + 0x760]\n 22958: a1 = u64 [a5 + 0x758]\n 22962: a3 = u64 [a5 + 0x750]\n 22966: a4 = u64 [a5 + 0x748]\n 22970: i32 a0 = a2 + 0x40\n 22973: a2 = a5 + 0x700\n 22977: u64 [a2 + 0x28] = a4\n 22980: u64 [a2 + 0x30] = a3\n 22983: u64 [a2 + 0x38] = a1\n 22986: a1 = s1 + 0x7ff\n 22990: a1 = a1 + 0x7a1\n 22994: u64 [a5 + 0x740] = t0\n 22998: ra = 754, jump @19\n      : @736 [@dyn 377] (gas: 49)\n 23004: a1 = u64 [s1 + 0xf0]\n 23008: a0 = a1 + 0x60\n 23011: u64 [s1 + 0xc0] = a0\n 23015: a2 = a0 <u a1\n 23018: a0 = u64 [s1 + 0xd8]\n 23022: a1 = a0 + a2\n 23025: u64 [s1 + 0xb8] = a1\n 23029: a3 = a1 <u a0\n 23032: a3 = a2 if a2 == 0\n 23035: a0 = u64 [s1 + 0xc8]\n 23039: t0 = a0 + a3\n 23042: a3 = t0 <u a0\n 23045: a0 = u64 [s1 + 0xd0]\n 23049: a0 = a0 + a3\n 23052: u64 [s1 + 0xd0] = a0\n 23056: a0 = u64 [s1 + 0x10]\n 23059: a2 = a0 + 0x20\n 23062: a4 = a2 <u a0\n 23065: a0 = u64 [s1 + 0x28]\n 23068: a5 = a0 + a4\n 23071: a0 = a5 <u a0\n 23074: a0 = a4 if a4 == 0\n 23077: a1 = u64 [s1 + 0x20]\n 23080: a0 = a0 + a1\n 23083: a4 = a0 <u a1\n 23086: t2 = u64 [s1 + 0x18]\n 23089: t2 = t2 + a4\n 23092: ra = u64 [s1 + 0x78]\n 23095: ra = ra + 0x1\n 23098: a4 = ra <u 0x1\n 23101: a3 = u64 [s1 + 0x88]\n 23105: a3 = a3 + a4\n 23108: a4 = ra | a3\n 23111: a4 = a4 <u 0x1\n 23114: a1 = u64 [s1 + 0x70]\n 23117: a4 = a4 + a1\n 23120: a1 = a4 <u a1\n 23123: t1 = u64 [s1 + 0x80]\n 23127: t1 = t1 + a1\n 23130: a1 = u64 [s1 + 0xc0]\n 23134: u64 [s1 + 0xf0] = a1\n 23138: a1 = u64 [s1 + 0xb8]\n 23142: u64 [s1 + 0xd8] = a1\n 23146: u64 [s1 + 0xc8] = t0\n 23150: a1 = a2\n 23152: u64 [s1 + 0x28] = a5\n 23155: u64 [s1 + 0x20] = a0\n 23158: t0 = a4\n 23160: jump @714\n      : @737 (gas: 23)\n 23163: t0 = u64 [s1 + 0xf8]\n 23167: t2 = u64 [s1 + 0xf0]\n 23171: ra = t2 <u t0\n 23174: a5 = u64 [s1 + 0xe0]\n 23178: a1 = u64 [s1 + 0xd8]\n 23182: a3 = a1 ^ a5\n 23185: a2 = a1 <u a5\n 23188: a2 = ra if a3 == 0\n 23191: a3 = u64 [s1 + 0xe8]\n 23195: a4 = u64 [s1 + 0xc8]\n 23199: a0 = a4 - a3\n 23202: t1 = a4 <u a3\n 23205: a4 = u64 [s1 + 0xa0]\n 23209: a3 = u64 [s1 + 0xd0]\n 23213: a4 = a3 - a4\n 23216: a4 = a4 - t1\n 23219: a3 = a0 <u a2\n 23222: a4 = a4 - a3\n 23225: a3 = a0 - a2\n 23228: a2 = a1 - a5\n 23231: a2 = a2 - ra\n 23234: a0 = t2 - t0\n 23237: jump @136\n      : @738 (gas: 7)\n 23240: a1 = 0x20080\n 23245: i32 a1 = a1 + 0\n 23247: a0 = 0x1\n 23250: a2 = 0\n 23252: ecalli 8 // 'seal_return'\n 23254: a1 = 0x20080\n 23259: fallthrough\n      : @739 (gas: 6)\n 23260: i32 a1 = a1 + 0\n 23262: a0 = 0x1\n 23265: a2 = 0\n 23267: ecalli 8 // 'seal_return'\n 23269: a1 = 0x20080\n 23274: jump @739\n      : @740 (gas: 2)\n 23276: a1 = 0x20080\n 23281: jump @739\n      : @741 (gas: 2)\n 23283: a1 = 0x20080\n 23288: jump @739\n      : @742 (gas: 2)\n 23290: a1 = 0x20080\n 23295: jump @739\n      : @743 (gas: 2)\n 23297: a1 = 0x20080\n 23302: jump @739\n      : @744 (gas: 2)\n 23304: a1 = 0x20080\n 23309: jump @739\n      : @745 (gas: 2)\n 23311: a1 = 0x20080\n 23316: jump @739\n      : @746 (gas: 2)\n 23318: a1 = 0x20080\n 23323: jump @739\n      : @747 (gas: 2)\n 23325: a1 = 0x20080\n 23330: jump @739\n      : @748 (gas: 2)\n 23332: a1 = 0x20080\n 23337: jump @739\n      : @749 (gas: 2)\n 23339: a1 = 0x20080\n 23344: jump @739\n      : @750 (gas: 2)\n 23346: a1 = 0x20080\n 23351: jump @739\n      : @751 (gas: 2)\n 23353: a1 = 0x20080\n 23358: jump @739\n      : @752 (gas: 2)\n 23360: a1 = 0x20080\n 23365: jump @739\n      : @753 (gas: 2)\n 23367: a1 = 0x20080\n 23372: jump @739\n      : @754 (gas: 2)\n 23374: a1 = 0x20080\n 23379: jump @739\n      : @755 (gas: 2)\n 23381: a1 = 0x20080\n 23386: jump @739\n      : @756 (gas: 2)\n 23388: a1 = 0x20080\n 23393: jump @739\n      : @757 (gas: 2)\n 23396: a1 = 0x20080\n 23401: jump @739\n      : @758 (gas: 2)\n 23404: a1 = 0x20080\n 23409: jump @739\n      : @759 (gas: 2)\n 23412: a1 = 0x20080\n 23417: jump @739\n      : @760 (gas: 2)\n 23420: a1 = 0x20080\n 23425: jump @739\n      : @761 (gas: 2)\n 23428: a1 = 0x20080\n 23433: jump @739\n      : @762 (gas: 2)\n 23436: a1 = 0x20080\n 23441: jump @739\n      : @763 (gas: 6)\n 23444: u64 [s1 + 304] = 0\n 23448: u64 [s1 + 296] = 0\n 23452: u64 [s1 + 288] = 0\n 23456: t0 = 0x2f4\n 23460: a0 = 0x4e487b7100000000\n 23470: fallthrough\n      : @764 [@dyn 378] (gas: 4)\n 23471: a1 = s1 + 0x120\n 23475: u64 [s1 + 0x138] = a0\n 23479: a0 = 0\n 23481: ra = 758, jump @19\n      : @765 [@dyn 379] (gas: 7)\n 23487: u64 [s1 + 280] = 0\n 23491: u64 [s1 + 272] = 0\n 23495: u64 [s1 + 256] = 0x11\n 23500: a0 = 0x4\n 23503: a1 = s1 + 0x100\n 23507: u64 [s1 + 264] = 0\n 23511: ra = 760, jump @19\n      : @766 [@dyn 380] (gas: 3)\n 23517: a0 = u64 [s1 + 0xd0]\n 23521: a0 = i32 [a0]\n 23523: jump @768 if a0 >u 63\n      : @767 (gas: 3)\n 23527: a1 = u64 [s1 + 0xd0]\n 23531: u32 [a1 + 0] = 0x40\n 23534: fallthrough\n      : @768 (gas: 6)\n 23535: a0 = 0x1\n 23538: a2 = 0x24\n 23541: a1 = u64 [s1 + 0xc8]\n 23545: ecalli 8 // 'seal_return'\n 23547: a1 = 0x20080\n 23552: jump @739\n      : @769 (gas: 2)\n 23555: a1 = 0x20080\n 23560: jump @739\n      : @770 (gas: 2)\n 23563: u64 [s1 + 0xf8] = a1\n 23567: ra = 762, jump @29\n      : @771 [@dyn 381] (gas: 5)\n 23573: i32 a1 = a0 + 0\n 23575: a2 = i32 [s1 + 0xf8]\n 23579: a0 = 0\n 23581: ecalli 8 // 'seal_return'\n 23583: jump @78\n      : @772 (gas: 8)\n 23586: a0 = s1 + 0x1078\n 23590: u64 [a0 + 1496] = 0\n 23594: u64 [a0 + 1488] = 0\n 23598: u64 [a0 + 1480] = 0\n 23602: a2 = a0\n 23604: t0 = 0x2fc\n 23608: a0 = 0x4e487b7100000000\n 23618: fallthrough\n      : @773 [@dyn 382] (gas: 4)\n 23619: a1 = s1 + 0x1640\n 23623: u64 [a2 + 0x5e0] = a0\n 23627: a0 = 0\n 23629: ra = 766, jump @19\n      : @774 [@dyn 383] (gas: 3)\n 23635: t0 = 0x300\n 23639: a1 = s1 + 0x1078\n 23643: fallthrough\n      : @775 [@dyn 384] (gas: 8)\n 23644: u64 [a1 + 1472] = 0\n 23648: u64 [a1 + 1464] = 0\n 23652: u64 [a1 + 1448] = 0x41\n 23657: a2 = a1\n 23659: a0 = 0x4\n 23662: a1 = s1 + 0x1620\n 23666: u64 [a2 + 1456] = 0\n 23670: ra = 770, jump @19\n      : @776 [@dyn 385] (gas: 2)\n 23676: a1 = i32 [0x20074]\n 23681: jump @778 if a1 >u 63\n      : @777 (gas: 3)\n 23685: u32 [0x20074] = 0x40\n 23691: a1 = 0x20080\n 23696: jump @785\n      : @778 (gas: 2)\n 23698: a1 = 0x20080\n 23703: jump @785\n      : @779 (gas: 8)\n 23705: a0 = s1 + 0x1878\n 23709: u64 [a0 + 88] = 0\n 23712: u64 [a0 + 80] = 0\n 23715: u64 [a0 + 72] = 0\n 23718: a2 = a0\n 23720: t0 = 0x304\n 23724: a0 = 0x4e487b7100000000\n 23734: fallthrough\n      : @780 [@dyn 386] (gas: 4)\n 23735: a1 = s1 + 0x18c0\n 23739: u64 [a2 + 0x60] = a0\n 23742: a0 = 0\n 23744: ra = 774, jump @19\n      : @781 [@dyn 387] (gas: 9)\n 23750: a0 = s1 + 0x1878\n 23754: u64 [a0 + 64] = 0\n 23757: u64 [a0 + 56] = 0\n 23760: u64 [a0 + 48] = 0\n 23763: a2 = a0\n 23765: a0 = 0x4\n 23768: a1 = s1 + 0x18a0\n 23772: u64 [a2 + 40] = 0\n 23775: ra = 776, jump @19\n      : @782 [@dyn 388] (gas: 2)\n 23781: a1 = i32 [0x20074]\n 23786: jump @784 if a1 >u 63\n      : @783 (gas: 3)\n 23790: u32 [0x20074] = 0x40\n 23796: a1 = 0x20080\n 23801: jump @785\n      : @784 (gas: 2)\n 23803: a1 = 0x20080\n 23808: fallthrough\n      : @785 (gas: 7)\n 23809: i32 a1 = a1 + 0\n 23811: a0 = 0x1\n 23814: a2 = 0x24\n 23817: ra = 0x30a\n 23821: ecalli 8 // 'seal_return'\n 23823: t0 = 0x30c\n 23827: jump @1026\n      : @786 [@dyn 389] (gas: 1)\n 23830: t0 = 780, jump @1026\n      : @787 [@dyn 390] (gas: 7)\n 23836: t0 = a0 >u 0\n 23838: a4 = t1 <u 0xffffffffffffff80\n 23841: a4 = a4 ^ 0x1\n 23844: a4 = t0 if a0 != 0\n 23847: a1 = a2 | a3\n 23850: a4 = a5 if a1 != 0\n 23853: jump @791 if a4 != 0\n      : @788 (gas: 2)\n 23856: a1 = t1 + 0x80\n 23860: t0 = 782, jump @1024\n      : @789 [@dyn 391] (gas: 1)\n 23866: ra = 784, jump @19\n      : @790 [@dyn 392] (gas: 5)\n 23872: sp = s0 + 0xffffffffffffff90\n 23875: ra = u64 [sp + 0x68]\n 23878: s0 = u64 [sp + 0x60]\n 23881: sp = sp + 0x70\n 23884: ret\n      : @791 (gas: 1)\n 23886: t0 = 786, jump @1019\n      : @792 [@dyn 393] (gas: 1)\n 23892: ra = 788, jump @19\n      : @793 [@dyn 394] (gas: 1)\n 23898: t0 = 790, jump @1037\n      : @794 [@dyn 395] (gas: 1)\n 23904: ra = 792, jump @19\n      : @795 [@dyn 396] (gas: 2)\n 23910: a1 = i32 [0x20074]\n 23915: jump @797 if a1 >u 63\n      : @796 (gas: 2)\n 23919: u32 [0x20074] = 0x40\n 23925: fallthrough\n      : @797 (gas: 8)\n 23926: a1 = 0x20080\n 23931: i32 a1 = a1 + 0\n 23933: a0 = 0x1\n 23936: a2 = 0x24\n 23939: ra = 0x31a\n 23943: ecalli 8 // 'seal_return'\n 23945: t0 = 0x31c\n 23949: jump @1026\n      : @798 [@dyn 397] (gas: 1)\n 23952: t0 = 796, jump @1026\n      : @799 [@dyn 398] (gas: 7)\n 23958: t0 = a0 >u 0\n 23960: a4 = t1 <u 0xffffffffffffffa0\n 23963: a4 = a4 ^ 0x1\n 23966: a4 = t0 if a0 != 0\n 23969: a1 = a2 | a3\n 23972: a4 = a5 if a1 != 0\n 23975: jump @803 if a4 != 0\n      : @800 (gas: 2)\n 23978: a1 = t1 + 0x60\n 23981: t0 = 798, jump @1024\n      : @801 [@dyn 399] (gas: 1)\n 23987: ra = 800, jump @19\n      : @802 [@dyn 400] (gas: 5)\n 23993: sp = s0 + 0xffffffffffffff90\n 23996: ra = u64 [sp + 0x68]\n 23999: s0 = u64 [sp + 0x60]\n 24002: sp = sp + 0x70\n 24005: ret\n      : @803 (gas: 1)\n 24007: t0 = 802, jump @1019\n      : @804 [@dyn 401] (gas: 1)\n 24013: ra = 804, jump @19\n      : @805 [@dyn 402] (gas: 1)\n 24019: t0 = 806, jump @1037\n      : @806 [@dyn 403] (gas: 1)\n 24025: ra = 808, jump @19\n      : @807 [@dyn 404] (gas: 2)\n 24031: a1 = i32 [0x20074]\n 24036: jump @809 if a1 >u 63\n      : @808 (gas: 2)\n 24040: u32 [0x20074] = 0x40\n 24046: fallthrough\n      : @809 (gas: 7)\n 24047: a1 = 0x20080\n 24052: i32 a1 = a1 + 0\n 24054: a0 = 0x1\n 24057: a2 = 0x24\n 24060: ra = 0x32a\n 24064: ecalli 8 // 'seal_return'\n 24066: fallthrough\n      : @810 [@dyn 405] (gas: 46)\n 24067: sp = sp + 0xffffffffffffff70\n 24071: u64 [sp + 0x88] = ra\n 24075: u64 [sp + 0x80] = s0\n 24079: u64 [sp + 0x78] = s1\n 24082: s0 = sp + 0x90\n 24086: sp = sp & 0xfffffffffffffff0\n 24089: t0 = a0\n 24091: a2 = u64 [a1]\n 24093: t2 = u64 [a0 + 0x8]\n 24096: a5 = u64 [a1 + 0x8]\n 24099: t1 = u64 [a0]\n 24101: a3 = a2 + 0x1f\n 24104: ra = a3 <u a2\n 24107: a2 = a5 + ra\n 24110: a3 = a3 & 0xffffffffffffffe0\n 24113: u64 [sp + 0x8] = t1\n 24116: t1 = t1 + a3\n 24119: a4 = t1 <u a3\n 24122: a3 = a2 + t2\n 24125: a3 = a3 + a4\n 24128: s1 = a3 ^ a2\n 24131: a0 = a3 <u a2\n 24134: a0 = a4 if s1 == 0\n 24137: a4 = u64 [t0 + 0x18]\n 24140: a5 = a2 <u a5\n 24143: s1 = u64 [a1 + 0x10]\n 24146: t0 = u64 [t0 + 0x10]\n 24149: a1 = u64 [a1 + 0x18]\n 24152: a5 = ra if ra == 0\n 24155: a5 = a5 + s1\n 24158: s1 = a5 <u s1\n 24161: a2 = a5 + t0\n 24164: a0 = a0 + a2\n 24167: a5 = a2 <u a5\n 24170: a2 = a0 <u a2\n 24173: a1 = a1 + a4\n 24176: a1 = a1 + s1\n 24179: a1 = a1 + a5\n 24182: a5 = a1 + a2\n 24185: a1 = a5 >u 0\n 24187: a2 = a0 >u 0\n 24189: a2 = a1 if a5 != 0\n 24192: a1 = a0 | a5\n 24195: s1 = a3 >u 0\n 24197: s1 = a2 if a1 != 0\n 24200: jump @814 if s1 != 0\n      : @811 (gas: 13)\n 24203: a1 = u64 [sp + 0x8]\n 24206: a1 = t1 <u a1\n 24209: a2 = a3 ^ t2\n 24212: s1 = a3 <u t2\n 24215: s1 = a1 if a2 == 0\n 24218: a1 = a0 <u t0\n 24221: a2 = a5 ^ a4\n 24224: a4 = a5 <u a4\n 24227: a4 = a1 if a2 == 0\n 24230: a1 = a0 ^ t0\n 24233: a1 = a1 | a2\n 24236: a4 = s1 if a1 == 0\n 24239: jump @814 if a4 != 0\n      : @812 (gas: 7)\n 24242: u64 [sp + 0x50] = t1\n 24245: u64 [sp + 0x58] = a3\n 24248: u64 [sp + 0x60] = a0\n 24251: a0 = 0x40\n 24254: a1 = sp + 0x50\n 24257: u64 [sp + 0x68] = a5\n 24260: ra = 812, jump @19\n      : @813 [@dyn 406] (gas: 6)\n 24266: sp = s0 + 0xffffffffffffff70\n 24270: ra = u64 [sp + 0x88]\n 24274: s0 = u64 [sp + 0x80]\n 24278: s1 = u64 [sp + 0x78]\n 24281: sp = sp + 0x90\n 24285: ret\n      : @814 (gas: 6)\n 24287: u64 [sp + 64] = 0\n 24290: u64 [sp + 56] = 0\n 24293: u64 [sp + 48] = 0\n 24296: t0 = 0x32e\n 24300: a0 = 0x4e487b7100000000\n 24310: fallthrough\n      : @815 [@dyn 407] (gas: 4)\n 24311: a1 = sp + 0x30\n 24314: u64 [sp + 0x48] = a0\n 24317: a0 = 0\n 24319: ra = 816, jump @19\n      : @816 [@dyn 408] (gas: 7)\n 24325: u64 [sp + 40] = 0\n 24328: u64 [sp + 32] = 0\n 24331: u64 [sp + 16] = 0x41\n 24335: a0 = 0x4\n 24338: a1 = sp + 0x10\n 24341: u64 [sp + 24] = 0\n 24344: ra = 818, jump @19\n      : @817 [@dyn 409] (gas: 2)\n 24350: a1 = i32 [0x20074]\n 24355: jump @819 if a1 >u 63\n      : @818 (gas: 2)\n 24359: u32 [0x20074] = 0x40\n 24365: fallthrough\n      : @819 (gas: 7)\n 24366: a1 = 0x20080\n 24371: i32 a1 = a1 + 0\n 24373: a0 = 0x1\n 24376: a2 = 0x24\n 24379: ra = 0x334\n 24383: ecalli 8 // 'seal_return'\n 24385: fallthrough\n      : @820 [@dyn 410] (gas: 37)\n 24386: sp = sp + 0xfffffffffffffe40\n 24390: u64 [sp + 0x1b8] = ra\n 24394: u64 [sp + 0x1b0] = s0\n 24398: u64 [sp + 0x1a8] = s1\n 24402: s0 = sp + 0x1c0\n 24406: sp = sp & 0xffffffffffffffe0\n 24409: ra = u64 [a1]\n 24411: a4 = u64 [a2 + 0x8]\n 24414: t2 = u64 [a1 + 0x8]\n 24417: s1 = u64 [a2]\n 24419: a3 = ra + 0x1f\n 24422: t0 = a3 <u ra\n 24425: a5 = t2 + t0\n 24428: u64 [sp + 0x30] = s1\n 24431: t1 = a3 <u s1\n 24434: a3 = a5 ^ a4\n 24437: u64 [sp + 0x40] = a4\n 24440: a4 = a5 <u a4\n 24443: a4 = t1 if a3 == 0\n 24446: s1 = u64 [a1 + 0x10]\n 24449: a3 = a5 <u t2\n 24452: a3 = t0 if t0 == 0\n 24455: a5 = u64 [a2 + 0x18]\n 24458: t0 = u64 [a1 + 0x18]\n 24461: t1 = u64 [a2 + 0x10]\n 24464: a3 = a3 + s1\n 24467: a1 = a3 <u s1\n 24470: a1 = a1 + t0\n 24473: a2 = a1 ^ a5\n 24476: u64 [sp + 0x20] = a5\n 24479: a1 = a1 <s a5\n 24482: a5 = a3 <u t1\n 24485: a1 = a5 if a2 == 0\n 24488: a3 = a3 ^ t1\n 24491: a2 = a2 | a3\n 24494: a4 = a1 if a2 != 0\n 24497: jump @839 if a4 == 0\n      : @821 (gas: 13)\n 24501: u64 [sp + 0x18] = a0\n 24504: u64 [sp + 0x28] = t1\n 24507: a0 = ra | s1\n 24510: u64 [sp + 0x50] = t2\n 24513: u64 [sp + 0x38] = t0\n 24516: a1 = t2 | t0\n 24519: a0 = a0 | a1\n 24522: a0 = a0 >> 0x20\n 24525: u64 [sp + 0x48] = s1\n 24528: a1 = a1 | s1\n 24531: a1 = a1 << 0x20\n 24534: a0 = a0 | a1\n 24537: jump @838 if a0 != 0\n      : @822 (gas: 6)\n 24541: u64 [sp + 0x60] = ra\n 24544: i32 a1 = ra + 0\n 24546: i32 a0 = sp + 0x180\n 24550: u64 [sp + 0x10] = a1\n 24553: ecalli 1 // 'call_data_load'\n 24555: fallthrough\n      : @823 (gas: 13)\n 24556: a2 = u64 [sp + 0x198]\n 24560: a3 = u64 [sp + 0x190]\n 24564: a4 = u64 [sp + 0x188]\n 24568: a0 = a2 >u 0\n 24570: a1 = a3 >u 0\n 24572: a1 = a0 if a2 != 0\n 24575: u64 [sp + 0x90] = a2\n 24579: u64 [sp + 0x88] = a3\n 24583: a0 = a3 | a2\n 24586: u64 [sp + 0x98] = a4\n 24590: a2 = a4 >u 0\n 24592: a2 = a1 if a0 != 0\n 24595: jump @840 if a2 != 0\n      : @824 (gas: 4)\n 24599: s1 = u64 [sp + 0x180]\n 24603: a0 = sp + 0x160\n 24607: a1 = 0x40\n 24610: ra = 822, jump @17\n      : @825 [@dyn 411] (gas: 31)\n 24616: t0 = u64 [sp + 0x178]\n 24620: a5 = u64 [sp + 0x170]\n 24624: u64 [sp + 0x78] = a5\n 24627: t1 = u64 [sp + 0x168]\n 24631: u64 [sp + 0x80] = t1\n 24635: t2 = u64 [sp + 0x160]\n 24639: u64 [sp + 0x70] = t2\n 24642: a0 = s1 + 0x1f\n 24645: u64 [sp + 0x58] = s1\n 24648: a1 = a0 <u s1\n 24651: a2 = u64 [sp + 0x98]\n 24655: a1 = a1 + a2\n 24658: a1 = a1 & 0x1\n 24661: a0 = a0 & 0xffffffffffffffe0\n 24664: a2 = a0 + 0x20\n 24667: a0 = a2 <u a0\n 24670: a3 = a1 + a0\n 24673: a4 = a3 <u a1\n 24676: a4 = a0 if a0 == 0\n 24679: u64 [sp + 312] = 0\n 24683: u64 [sp + 0x120] = a2\n 24687: s1 = t0\n 24689: u64 [sp + 0x158] = t0\n 24693: u64 [sp + 0x150] = a5\n 24697: u64 [sp + 0x148] = t1\n 24701: u64 [sp + 0x140] = t2\n 24705: u64 [sp + 0x128] = a3\n 24709: a0 = sp + 0x140\n 24713: a1 = sp + 0x120\n 24717: u64 [sp + 0x130] = a4\n 24721: ra = 824, jump @810\n      : @826 [@dyn 412] (gas: 12)\n 24727: a2 = u64 [sp + 0x70]\n 24730: u64 [sp + 0x68] = s1\n 24733: a1 = u64 [sp + 0x80]\n 24737: a0 = a1 | s1\n 24740: a3 = u64 [sp + 0x78]\n 24743: a1 = a2 | a3\n 24746: a1 = a1 | a0\n 24749: a1 = a1 >> 0x20\n 24752: a0 = a0 | a3\n 24755: a0 = a0 << 0x20\n 24758: a0 = a0 | a1\n 24761: jump @838 if a0 != 0\n      : @827 (gas: 11)\n 24765: s1 = u64 [sp + 0x58]\n 24768: u64 [sp + 0x100] = s1\n 24772: a0 = u64 [sp + 0x98]\n 24776: u64 [sp + 0x108] = a0\n 24780: a0 = u64 [sp + 0x88]\n 24784: u64 [sp + 0x110] = a0\n 24788: a1 = sp + 0x100\n 24792: a0 = u64 [sp + 0x90]\n 24796: u64 [sp + 0x118] = a0\n 24800: a0 = a2\n 24802: ra = 826, jump @19\n      : @828 [@dyn 413] (gas: 46)\n 24808: a0 = u64 [sp + 0x60]\n 24811: a3 = a0 + s1\n 24814: a2 = a3 <u a0\n 24817: t2 = u64 [sp + 0x50]\n 24820: a0 = u64 [sp + 0x98]\n 24824: a0 = a0 + t2\n 24827: a0 = a0 + a2\n 24830: a4 = a0 ^ t2\n 24833: a1 = a0 <u t2\n 24836: a1 = a2 if a4 == 0\n 24839: ra = u64 [sp + 0x48]\n 24842: a2 = u64 [sp + 0x88]\n 24846: a2 = a2 + ra\n 24849: a5 = a3 + 0x20\n 24852: t0 = a5 <u a3\n 24855: a4 = a0 + t0\n 24858: a3 = u64 [sp + 0x30]\n 24861: a5 = a3 <u a5\n 24864: a3 = u64 [sp + 0x40]\n 24867: s1 = a4 ^ a3\n 24870: a3 = a3 <u a4\n 24873: a5 = a3 if s1 != 0\n 24876: a3 = a2 <u ra\n 24879: t1 = u64 [sp + 0x38]\n 24882: s1 = u64 [sp + 0x90]\n 24886: s1 = s1 + t1\n 24889: a3 = a3 + s1\n 24892: a1 = a1 + a2\n 24895: a2 = a1 <u a2\n 24898: a2 = a2 + a3\n 24901: a0 = a4 <u a0\n 24904: a0 = t0 if t0 == 0\n 24907: a0 = a0 + a1\n 24910: a1 = a0 <u a1\n 24913: a1 = a1 + a2\n 24916: a3 = u64 [sp + 0x20]\n 24919: a2 = a1 ^ a3\n 24922: a1 = a3 <u a1\n 24925: a4 = u64 [sp + 0x28]\n 24928: a3 = a4 <u a0\n 24931: a1 = a3 if a2 == 0\n 24934: a0 = a0 ^ a4\n 24937: a0 = a0 | a2\n 24940: a5 = a1 if a0 != 0\n 24943: a3 = u64 [sp + 0x98]\n 24947: jump @846 if a5 != 0\n      : @829 (gas: 7)\n 24951: a0 = ra | t1\n 24954: a1 = 0xffffffe0\n 24964: a2 = u64 [sp + 0x60]\n 24967: a1 = a2 <u a1\n 24970: a1 = 0 if t2 != 0\n 24972: a1 = 0 if a0 != 0\n 24974: jump @838 if a1 == 0\n      : @830 (gas: 5)\n 24978: a2 = u64 [sp + 0x88]\n 24982: a5 = u64 [sp + 0x58]\n 24985: a0 = a5 | a2\n 24988: a1 = u64 [sp + 0x90]\n 24992: t0 = 828, jump @1022\n      : @831 [@dyn 414] (gas: 5)\n 24998: s1 = u64 [sp + 0x70]\n 25001: a2 = u64 [sp + 0x80]\n 25005: a3 = u64 [sp + 0x78]\n 25008: a4 = u64 [sp + 0x68]\n 25011: jump @838 if a0 != 0\n      : @832 (gas: 7)\n 25015: a0 = a3 | a4\n 25018: a1 = 0xffffffe0\n 25028: u64 [sp + 0x60] = a1\n 25031: a1 = s1 <u a1\n 25034: a1 = 0 if a2 != 0\n 25036: a1 = 0 if a0 != 0\n 25038: jump @838 if a1 == 0\n      : @833 (gas: 7)\n 25042: a0 = u64 [sp + 0x10]\n 25045: i32 a0 = a0 + 0x20\n 25048: u64 [sp + 0x50] = a0\n 25051: i32 a0 = s1 + 0x20\n 25054: a1 = a5\n 25056: s1 = a5\n 25058: ra = 830, jump @29\n      : @834 [@dyn 415] (gas: 5)\n 25064: i32 a0 = a0 + 0\n 25066: i32 a1 = s1 + 0\n 25068: a2 = u64 [sp + 0x50]\n 25071: ecalli 0 // 'call_data_copy'\n 25072: fallthrough\n      : @835 (gas: 27)\n 25073: t0 = u64 [sp + 0x70]\n 25076: a0 = t0 + s1\n 25079: a1 = a0 <u t0\n 25082: a2 = u64 [sp + 0x98]\n 25086: a4 = u64 [sp + 0x80]\n 25090: a2 = a2 + a4\n 25093: a2 = a2 + a1\n 25096: a3 = a2 ^ a4\n 25099: a4 = a2 <u a4\n 25102: a4 = a1 if a3 == 0\n 25105: a1 = u64 [sp + 0x88]\n 25109: a3 = u64 [sp + 0x78]\n 25112: a1 = a1 + a3\n 25115: a3 = a1 <u a3\n 25118: a5 = u64 [sp + 0x90]\n 25122: s1 = u64 [sp + 0x68]\n 25125: a5 = a5 + s1\n 25128: a3 = a3 + a5\n 25131: a4 = a4 + a1\n 25134: a1 = a4 <u a1\n 25137: a1 = a1 + a3\n 25140: a1 = a1 | a4\n 25143: a3 = u64 [sp + 0x60]\n 25146: a3 = a0 <u a3\n 25149: a3 = 0 if a2 != 0\n 25151: a3 = 0 if a1 != 0\n 25153: jump @838 if a3 == 0\n      : @836 (gas: 8)\n 25156: s1 = t0\n 25158: i32 a0 = a0 + 0x20\n 25161: u64 [sp + 248] = 0\n 25165: u64 [sp + 240] = 0\n 25169: u64 [sp + 232] = 0\n 25173: a1 = sp + 0xe0\n 25177: u64 [sp + 224] = 0\n 25181: ra = 832, jump @19\n      : @837 [@dyn 416] (gas: 14)\n 25187: a0 = u64 [sp + 0x18]\n 25190: a1 = u64 [sp + 0x68]\n 25193: u64 [a0 + 0x18] = a1\n 25196: a1 = u64 [sp + 0x78]\n 25199: u64 [a0 + 0x10] = a1\n 25202: a1 = u64 [sp + 0x80]\n 25206: u64 [a0 + 0x8] = a1\n 25209: u64 [a0] = s1\n 25211: sp = s0 + 0xfffffffffffffe40\n 25215: ra = u64 [sp + 0x1b8]\n 25219: s0 = u64 [sp + 0x1b0]\n 25223: s1 = u64 [sp + 0x1a8]\n 25227: sp = sp + 0x1c0\n 25231: ret\n      : @838 (gas: 1)\n 25233: trap\n      : @839 (gas: 2)\n 25234: a1 = 0x20080\n 25239: jump @847\n      : @840 (gas: 6)\n 25241: u64 [sp + 208] = 0\n 25245: u64 [sp + 200] = 0\n 25249: u64 [sp + 192] = 0\n 25253: t0 = 0x342\n 25257: a0 = 0x4e487b7100000000\n 25267: fallthrough\n      : @841 [@dyn 417] (gas: 4)\n 25268: a1 = sp + 0xc0\n 25272: u64 [sp + 0xd8] = a0\n 25276: a0 = 0\n 25278: ra = 836, jump @19\n      : @842 [@dyn 418] (gas: 7)\n 25284: u64 [sp + 184] = 0\n 25288: u64 [sp + 176] = 0\n 25292: u64 [sp + 160] = 0x41\n 25297: a0 = 0x4\n 25300: a1 = sp + 0xa0\n 25304: u64 [sp + 168] = 0\n 25308: ra = 838, jump @19\n      : @843 [@dyn 419] (gas: 2)\n 25314: a1 = i32 [0x20074]\n 25319: jump @845 if a1 >u 63\n      : @844 (gas: 2)\n 25323: u32 [0x20074] = 0x40\n 25329: fallthrough\n      : @845 (gas: 7)\n 25330: a1 = 0x20080\n 25335: i32 a1 = a1 + 0\n 25337: a0 = 0x1\n 25340: a2 = 0x24\n 25343: ecalli 8 // 'seal_return'\n 25345: a1 = 0x20080\n 25350: jump @847\n      : @846 (gas: 2)\n 25352: a1 = 0x20080\n 25357: fallthrough\n      : @847 (gas: 6)\n 25358: i32 a1 = a1 + 0\n 25360: a0 = 0x1\n 25363: a2 = 0\n 25365: ra = 0x348\n 25369: ecalli 8 // 'seal_return'\n 25371: fallthrough\n      : @848 [@dyn 420] (gas: 33)\n 25372: sp = sp + 0xffffffffffffffa0\n 25375: u64 [sp + 0x58] = ra\n 25378: u64 [sp + 0x50] = s0\n 25381: u64 [sp + 0x48] = s1\n 25384: s0 = sp + 0x60\n 25387: sp = sp & 0xfffffffffffffff0\n 25390: a2 = u64 [a1 + 0x10]\n 25393: a5 = u64 [a1 + 0x8]\n 25396: a4 = u64 [a1]\n 25398: a1 = u64 [a1 + 0x18]\n 25401: t0 = a2 << 0x3f\n 25404: a3 = a5 >> 0x1\n 25407: t0 = a3 | t0\n 25410: a3 = a1 << 0x3f\n 25413: a2 = a2 >> 0x1\n 25416: a3 = a3 | a2\n 25419: a5 = a5 << 0x3f\n 25422: a2 = a4 >> 0x1\n 25425: a5 = a5 | a2\n 25428: t1 = a1 >> 0x1\n 25431: a4 = a4 & 0x1\n 25434: a1 = -a4\n 25436: s1 = a4 <u 0x1\n 25439: a2 = a5 & 0x7f\n 25442: t2 = a1 & a3\n 25445: a3 = a1 & t0\n 25448: a2 = a5 if a4 != 0\n 25451: a4 = a1 & t1\n 25454: a1 = a2 <u 0x20\n 25457: a1 = 0 if a3 != 0\n 25459: a5 = t2 | a4\n 25462: a1 = 0 if a5 != 0\n 25464: jump @851 if s1 != a1\n      : @849 (gas: 5)\n 25467: u64 [a0] = a2\n 25469: u64 [a0 + 0x8] = a3\n 25472: u64 [a0 + 0x10] = t2\n 25475: u64 [a0 + 0x18] = a4\n 25478: t0 = 842, jump @1043\n      : @850 [@dyn 421] (gas: 1)\n 25484: ret\n      : @851 (gas: 1)\n 25486: t0 = 844, jump @1019\n      : @852 [@dyn 422] (gas: 1)\n 25492: ra = 846, jump @19\n      : @853 [@dyn 423] (gas: 7)\n 25498: u64 [sp + 24] = 0\n 25501: u64 [sp + 16] = 0\n 25504: u64 [sp + 0] = 0x22\n 25507: a0 = 0x4\n 25510: a1 = sp\n 25512: u64 [sp + 8] = 0\n 25515: ra = 848, jump @19\n      : @854 [@dyn 424] (gas: 2)\n 25521: a1 = i32 [0x20074]\n 25526: jump @856 if a1 >u 63\n      : @855 (gas: 2)\n 25530: u32 [0x20074] = 0x40\n 25536: fallthrough\n      : @856 (gas: 7)\n 25537: a1 = 0x20080\n 25542: i32 a1 = a1 + 0\n 25544: a0 = 0x1\n 25547: a2 = 0x24\n 25550: ra = 0x352\n 25554: ecalli 8 // 'seal_return'\n 25556: fallthrough\n      : @857 [@dyn 425] (gas: 24)\n 25557: sp = sp + 0xfffffffffffffda0\n 25561: a2 = sp + 0x200\n 25565: u64 [a2 + 0x58] = ra\n 25568: u64 [a2 + 0x50] = s0\n 25571: u64 [a2 + 0x48] = s1\n 25574: s0 = sp + 0x260\n 25578: sp = sp & 0xffffffffffffffe0\n 25581: s1 = sp\n 25583: u64 [s1 + 0x10] = a0\n 25586: a0 = u64 [a1 + 0x18]\n 25589: a2 = u64 [a1 + 0x10]\n 25592: a3 = u64 [a1 + 0x8]\n 25595: a1 = u64 [a1]\n 25597: u64 [s1 + 0xb0] = a0\n 25601: u64 [s1 + 0x238] = a0\n 25605: u64 [s1 + 0xa8] = a2\n 25609: u64 [s1 + 0x230] = a2\n 25613: u64 [s1 + 0xa0] = a3\n 25617: u64 [s1 + 0x228] = a3\n 25621: u64 [s1 + 0x98] = a1\n 25625: u64 [s1 + 0x220] = a1\n 25629: a0 = s1 + 0x200\n 25633: a1 = 0x40\n 25636: ra = 852, jump @17\n      : @858 [@dyn 426] (gas: 12)\n 25642: a1 = s1 + 0x200\n 25646: a0 = u64 [a1 + 0x18]\n 25649: u64 [s1 + 0x18] = a0\n 25652: a0 = u64 [a1 + 0x10]\n 25655: u64 [s1 + 0x20] = a0\n 25658: a0 = u64 [a1 + 0x8]\n 25661: u64 [s1 + 0x28] = a0\n 25664: a0 = u64 [a1]\n 25666: u64 [s1 + 0x30] = a0\n 25669: a0 = s1 + 0x1e0\n 25673: a1 = s1 + 0x220\n 25677: ra = 854, jump @21\n      : @859 [@dyn 427] (gas: 16)\n 25683: a4 = s1 + 0x100\n 25687: a0 = u64 [a4 + 0xf8]\n 25691: a1 = u64 [a4 + 0xf0]\n 25695: a2 = u64 [a4 + 0xe8]\n 25699: a3 = u64 [a4 + 0xe0]\n 25703: u64 [s1 + 0x90] = a0\n 25707: u64 [a4 + 0xb8] = a0\n 25711: u64 [s1 + 0x88] = a1\n 25715: u64 [a4 + 0xb0] = a1\n 25719: u64 [s1 + 0x80] = a2\n 25723: u64 [a4 + 0xa8] = a2\n 25727: a0 = s1 + 0x1c0\n 25731: a1 = s1 + 0x1a0\n 25735: u64 [s1 + 0xb8] = a3\n 25739: u64 [a4 + 0xa0] = a3\n 25743: ra = 856, jump @848\n      : @860 [@dyn 428] (gas: 6)\n 25749: a0 = u64 [s1 + 0x30]\n 25752: a1 = u64 [s1 + 0x18]\n 25755: a2 = u64 [s1 + 0x28]\n 25758: a2 = a2 | a1\n 25761: a3 = u64 [s1 + 0x20]\n 25764: t0 = 858, jump @1034\n      : @861 [@dyn 429] (gas: 1)\n 25770: jump @880 if a1 != 0\n      : @862 (gas: 15)\n 25774: a5 = s1 + 0x100\n 25778: a2 = u64 [a5 + 0xd8]\n 25782: a3 = u64 [a5 + 0xd0]\n 25786: a1 = u64 [a5 + 0xc8]\n 25790: a4 = u64 [a5 + 0xc0]\n 25794: u64 [s1 + 0x60] = a4\n 25797: u64 [a5 + 0x80] = a4\n 25801: u64 [s1 + 0x70] = a1\n 25804: u64 [a5 + 0x88] = a1\n 25808: u64 [s1 + 0x68] = a3\n 25811: u64 [a5 + 0x90] = a3\n 25815: a1 = s1 + 0x180\n 25819: u64 [s1 + 0x78] = a2\n 25822: u64 [a5 + 0x98] = a2\n 25826: ra = 860, jump @19\n      : @863 [@dyn 430] (gas: 3)\n 25832: a3 = u64 [s1 + 0xb8]\n 25836: a0 = a3 & 0x1\n 25839: jump @869 if a0 != 0\n      : @864 (gas: 10)\n 25843: a0 = u64 [s1 + 0x20]\n 25846: a1 = u64 [s1 + 0x18]\n 25849: a0 = a0 | a1\n 25852: a1 = 0xffffffe0\n 25862: a4 = u64 [s1 + 0x30]\n 25865: a1 = a4 <u a1\n 25868: a2 = u64 [s1 + 0x28]\n 25871: a1 = 0 if a2 != 0\n 25873: a1 = 0 if a0 != 0\n 25875: jump @880 if a1 == 0\n      : @865 (gas: 12)\n 25879: a1 = a3 & 0xffffffffffffff00\n 25883: i32 a0 = a4 + 0x20\n 25886: a3 = u64 [s1 + 0x80]\n 25890: a2 = s1 + 0x100\n 25894: u64 [a2 + 0x8] = a3\n 25897: u64 [a2] = a1\n 25899: a1 = u64 [s1 + 0x88]\n 25903: u64 [a2 + 0x10] = a1\n 25906: a1 = s1 + 0x100\n 25910: a3 = u64 [s1 + 0x90]\n 25914: u64 [a2 + 0x18] = a3\n 25917: ra = 862, jump @19\n      : @866 [@dyn 431] (gas: 14)\n 25923: t2 = 0\n 25925: t1 = 0\n 25927: t0 = 0\n 25929: a0 = u64 [s1 + 0x68]\n 25932: a1 = u64 [s1 + 0x60]\n 25935: a0 = a0 | a1\n 25938: a1 = u64 [s1 + 0x78]\n 25941: a2 = u64 [s1 + 0x70]\n 25944: a1 = a1 | a2\n 25947: a0 = a0 | a1\n 25950: a0 = a0 >u 0\n 25952: a0 = a0 << 0x5\n 25955: u64 [s1 + 0xb8] = a0\n 25959: fallthrough\n      : @867 (gas: 24)\n 25960: a1 = u64 [s1 + 0xb8]\n 25964: a0 = a1 + 0x20\n 25967: a1 = a0 <u a1\n 25970: a2 = t2 + a1\n 25973: a3 = a2 <u t2\n 25976: a3 = a1 if a1 == 0\n 25979: a3 = a3 + t1\n 25982: a1 = a3 <u t1\n 25985: a4 = t0 + a1\n 25988: a1 = u64 [s1 + 0x30]\n 25991: u64 [s1 + 0xe0] = a1\n 25995: u64 [s1 + 0xc0] = a0\n 25999: a0 = u64 [s1 + 0x28]\n 26002: u64 [s1 + 0xe8] = a0\n 26006: a0 = u64 [s1 + 0x20]\n 26009: u64 [s1 + 0xf0] = a0\n 26013: u64 [s1 + 0xc8] = a2\n 26017: a0 = u64 [s1 + 0x18]\n 26020: u64 [s1 + 0xf8] = a0\n 26024: u64 [s1 + 0xd0] = a3\n 26028: a0 = s1 + 0xe0\n 26032: a1 = s1 + 0xc0\n 26036: u64 [s1 + 0xd8] = a4\n 26040: ra = 864, jump @810\n      : @868 [@dyn 432] (gas: 16)\n 26046: a0 = u64 [s1 + 0x10]\n 26049: a1 = u64 [s1 + 0x18]\n 26052: u64 [a0 + 0x18] = a1\n 26055: a1 = u64 [s1 + 0x20]\n 26058: u64 [a0 + 0x10] = a1\n 26061: a1 = u64 [s1 + 0x28]\n 26064: u64 [a0 + 0x8] = a1\n 26067: a1 = u64 [s1 + 0x30]\n 26070: u64 [a0] = a1\n 26072: sp = s0 + 0xfffffffffffffda0\n 26076: a0 = sp + 0x200\n 26080: ra = u64 [a0 + 0x58]\n 26083: s0 = u64 [a0 + 0x50]\n 26086: s1 = u64 [a0 + 0x48]\n 26089: sp = sp + 0x260\n 26093: ret\n      : @869 (gas: 12)\n 26095: a0 = u64 [s1 + 0x98]\n 26099: a2 = s1 + 0x100\n 26103: u64 [a2 + 0x60] = a0\n 26106: a0 = u64 [s1 + 0xa0]\n 26110: u64 [a2 + 0x68] = a0\n 26113: a0 = u64 [s1 + 0xa8]\n 26117: u64 [a2 + 0x70] = a0\n 26120: a1 = s1 + 0x160\n 26124: a0 = u64 [s1 + 0xb0]\n 26128: u64 [a2 + 0x78] = a0\n 26131: a0 = 0\n 26133: ra = 866, jump @19\n      : @870 [@dyn 433] (gas: 6)\n 26139: a0 = sp + 0xffffffffffffffe0\n 26142: a0 = a0 & 0xffffffffffffffe0\n 26145: u64 [s1 + 0x58] = a0\n 26148: sp = a0\n 26150: a1 = i32 [0x20074]\n 26155: jump @872 if a1 >u 31\n      : @871 (gas: 2)\n 26159: u32 [0x20074] = 0x20\n 26165: fallthrough\n      : @872 (gas: 49)\n 26166: a0 = sp + 0xffffffffffffffe0\n 26169: a2 = a0 & 0xffffffffffffffe0\n 26172: u64 [s1 + 0xb0] = a2\n 26176: sp = a2\n 26178: a0 = 0x20080\n 26183: i32 a0 = a0 + 0\n 26185: i32 a2 = a2 + 0\n 26187: a1 = 0x20\n 26190: ecalli 6 // 'hash_keccak_256'\n 26192: u64 [s1 + 184] = 0\n 26196: t2 = 0\n 26198: t1 = 0\n 26200: t0 = 0\n 26202: a5 = u64 [s1 + 0xb0]\n 26206: a0 = u64 [a5 + 0x18]\n 26209: a1 = u64 [s1 + 0x30]\n 26212: a2 = a1 + 0x20\n 26215: u64 [s1 + 0x50] = a2\n 26218: a1 = a2 <u a1\n 26221: a2 = u64 [s1 + 0x28]\n 26224: a3 = a2 + a1\n 26227: u64 [s1 + 0x48] = a3\n 26230: a4 = a3 <u a2\n 26233: a4 = a1 if a1 == 0\n 26236: a1 = u64 [a5 + 0x10]\n 26239: a2 = u64 [a5 + 0x8]\n 26242: a3 = u64 [a5]\n 26244: a0 = reverse a0\n 26246: a1 = reverse a1\n 26248: ra = reverse a2\n 26250: a2 = reverse a3\n 26252: a5 = u64 [s1 + 0x58]\n 26255: a3 = a2\n 26257: u64 [a5 + 0x18] = a2\n 26260: a2 = ra\n 26262: u64 [s1 + 0x80] = a2\n 26266: u64 [a5 + 0x10] = a2\n 26269: u64 [s1 + 0x90] = a1\n 26273: u64 [a5 + 0x8] = a1\n 26276: a2 = a0\n 26278: u64 [a5] = a0\n 26280: a0 = u64 [s1 + 0x20]\n 26283: a4 = a4 + a0\n 26286: u64 [s1 + 0x40] = a4\n 26289: a0 = a4 <u a0\n 26292: a1 = u64 [s1 + 0x18]\n 26295: a0 = a0 + a1\n 26298: u64 [s1 + 0x38] = a0\n 26301: fallthrough\n      : @873 (gas: 19)\n 26302: u64 [s1 + 0x88] = a3\n 26306: u64 [s1 + 0x98] = a2\n 26310: a0 = u64 [s1 + 0x60]\n 26313: a1 = u64 [s1 + 0xb8]\n 26317: a0 = a1 <u a0\n 26320: a2 = u64 [s1 + 0x70]\n 26323: a1 = t2 ^ a2\n 26326: a2 = t2 <u a2\n 26329: a2 = a0 if a1 == 0\n 26332: a4 = u64 [s1 + 0x68]\n 26335: a0 = t1 <u a4\n 26338: a3 = u64 [s1 + 0x78]\n 26341: a1 = t0 ^ a3\n 26344: a3 = t0 <u a3\n 26347: a3 = a0 if a1 == 0\n 26350: a0 = t1 ^ a4\n 26353: a0 = a0 | a1\n 26356: a3 = a2 if a0 == 0\n 26359: jump @867 if a3 == 0\n      : @874 (gas: 6)\n 26363: a0 = s1 + 0x140\n 26367: a1 = a5\n 26369: u64 [s1 + 0xb0] = t0\n 26373: u64 [s1 + 0xa8] = t1\n 26377: u64 [s1 + 0xa0] = t2\n 26381: ra = 868, jump @21\n      : @875 [@dyn 434] (gas: 7)\n 26387: a1 = u64 [s1 + 0x50]\n 26390: a0 = u64 [s1 + 0xb8]\n 26394: a0 = a0 + a1\n 26397: a1 = a0 <u a1\n 26400: a4 = u64 [s1 + 0x48]\n 26403: a2 = u64 [s1 + 0xa0]\n 26407: t0 = 870, jump @1028\n      : @876 [@dyn 435] (gas: 9)\n 26413: a3 = u64 [s1 + 0x40]\n 26416: a1 = u64 [s1 + 0xa8]\n 26420: a1 = a1 + a3\n 26423: t0 = a1 <u a3\n 26426: a5 = u64 [s1 + 0x38]\n 26429: a3 = u64 [s1 + 0xb0]\n 26433: a5 = a5 + a3\n 26436: a3 = a5 + t0\n 26439: t0 = 872, jump @1014\n      : @877 [@dyn 436] (gas: 1)\n 26445: jump @880 if a1 != 0\n      : @878 (gas: 11)\n 26449: a5 = s1 + 0x100\n 26453: a2 = u64 [a5 + 0x58]\n 26456: a1 = u64 [a5 + 0x50]\n 26459: a3 = u64 [a5 + 0x48]\n 26462: a4 = u64 [a5 + 0x40]\n 26465: u64 [a5 + 0x20] = a4\n 26468: u64 [a5 + 0x28] = a3\n 26471: u64 [a5 + 0x30] = a1\n 26474: a1 = s1 + 0x120\n 26478: u64 [a5 + 0x38] = a2\n 26481: ra = 874, jump @19\n      : @879 [@dyn 437] (gas: 38)\n 26487: a3 = u64 [s1 + 0x98]\n 26491: a3 = a3 + 0x1\n 26494: a0 = a3 <u 0x1\n 26497: t2 = u64 [s1 + 0x90]\n 26501: t2 = t2 + a0\n 26504: a0 = a3 | t2\n 26507: a0 = a0 <u 0x1\n 26510: a1 = u64 [s1 + 0x80]\n 26514: t1 = a1 + a0\n 26517: a1 = t1 <u a1\n 26520: a0 = u64 [s1 + 0x88]\n 26524: a0 = a0 + a1\n 26527: a1 = u64 [s1 + 0xb8]\n 26531: ra = a1 + 0x20\n 26534: a2 = ra <u a1\n 26537: a4 = u64 [s1 + 0xa0]\n 26541: a1 = a4 + a2\n 26544: a4 = a1 <u a4\n 26547: a4 = a2 if a2 == 0\n 26550: a2 = u64 [s1 + 0xa8]\n 26554: a4 = a4 + a2\n 26557: a2 = a4 <u a2\n 26560: t0 = u64 [s1 + 0xb0]\n 26564: t0 = t0 + a2\n 26567: a2 = t2\n 26569: u64 [s1 + 0x90] = a2\n 26573: a5 = u64 [s1 + 0x58]\n 26576: u64 [a5 + 0x8] = a2\n 26579: a2 = a3\n 26581: u64 [a5] = a3\n 26583: u64 [a5 + 0x10] = t1\n 26586: a3 = a0\n 26588: u64 [a5 + 0x18] = a0\n 26591: u64 [s1 + 0x80] = t1\n 26595: u64 [s1 + 0xb8] = ra\n 26599: t2 = a1\n 26601: t1 = a4\n 26603: jump @873\n      : @880 (gas: 1)\n 26606: trap\n      : @881 (gas: 21)\n 26607: sp = sp + 0xffffffffffffff10\n 26611: u64 [sp + 0xe8] = ra\n 26615: u64 [sp + 0xe0] = s0\n 26619: u64 [sp + 0xd8] = s1\n 26623: s0 = sp + 0xf0\n 26627: sp = sp & 0xfffffffffffffff0\n 26630: a5 = u64 [a1 + 0x10]\n 26633: a4 = u64 [a1 + 0x18]\n 26636: a3 = u64 [a1 + 0x8]\n 26639: a1 = u64 [a1]\n 26641: u64 [sp + 0x28] = a3\n 26644: u64 [sp + 0x18] = a4\n 26647: a4 = a4 | a3\n 26650: a3 = a1 | a5\n 26653: a3 = a3 | a4\n 26656: a3 = a3 >> 0x20\n 26659: u64 [sp + 0x20] = a5\n 26662: a4 = a4 | a5\n 26665: a4 = a4 << 0x20\n 26668: a3 = a3 | a4\n 26671: jump @896 if a3 != 0\n      : @882 (gas: 11)\n 26675: u64 [sp + 0x8] = a0\n 26678: a0 = u64 [a2 + 0x18]\n 26681: u64 [sp + 0x68] = a0\n 26684: s1 = u64 [a2 + 0x10]\n 26687: a0 = u64 [a2 + 0x8]\n 26690: u64 [sp + 0x60] = a0\n 26693: a0 = u64 [a2]\n 26695: u64 [sp + 0x58] = a0\n 26698: a0 = sp + 0xb0\n 26702: u64 [sp + 0x10] = a1\n 26705: ra = 876, jump @17\n      : @883 [@dyn 438] (gas: 12)\n 26711: a0 = u64 [sp + 0x58]\n 26714: a2 = a0 | s1\n 26717: a1 = u64 [sp + 0x68]\n 26720: a3 = u64 [sp + 0x60]\n 26723: a1 = a1 | a3\n 26726: a2 = a2 | a1\n 26729: a2 = a2 >> 0x20\n 26732: u64 [sp + 0x50] = s1\n 26735: a1 = a1 | s1\n 26738: a1 = a1 << 0x20\n 26741: a1 = a1 | a2\n 26744: jump @896 if a1 != 0\n      : @884 (gas: 15)\n 26748: a2 = u64 [sp + 0xc8]\n 26752: a3 = u64 [sp + 0xc0]\n 26756: a4 = u64 [sp + 0xb8]\n 26760: a1 = u64 [sp + 0xb0]\n 26764: u64 [sp + 0x30] = a1\n 26767: u64 [sp + 0x90] = a1\n 26771: u64 [sp + 0x38] = a4\n 26774: u64 [sp + 0x98] = a4\n 26778: u64 [sp + 0x40] = a3\n 26781: u64 [sp + 0xa0] = a3\n 26785: a1 = sp + 0x90\n 26789: u64 [sp + 0x48] = a2\n 26792: u64 [sp + 0xa8] = a2\n 26796: s1 = a0\n 26798: ra = 878, jump @19\n      : @885 [@dyn 439] (gas: 9)\n 26804: a0 = u64 [sp + 0x68]\n 26807: a1 = u64 [sp + 0x50]\n 26810: a1 = a1 | a0\n 26813: a0 = 0xffffffe0\n 26823: a2 = s1 <u a0\n 26826: a3 = u64 [sp + 0x60]\n 26829: a2 = 0 if a3 != 0\n 26831: a2 = 0 if a1 != 0\n 26833: jump @896 if a2 == 0\n      : @886 (gas: 9)\n 26837: a1 = u64 [sp + 0x20]\n 26840: a2 = u64 [sp + 0x18]\n 26843: a1 = a1 | a2\n 26846: a2 = u64 [sp + 0x10]\n 26849: a0 = a2 <u a0\n 26852: a3 = u64 [sp + 0x28]\n 26855: a0 = 0 if a3 != 0\n 26857: a0 = 0 if a1 != 0\n 26859: jump @896 if a0 == 0\n      : @887 (gas: 13)\n 26863: a5 = s1\n 26865: s1 = u64 [sp + 0x30]\n 26868: a3 = u64 [sp + 0x40]\n 26871: a0 = s1 | a3\n 26874: a1 = u64 [sp + 0x48]\n 26877: a4 = u64 [sp + 0x38]\n 26880: a1 = a1 | a4\n 26883: a0 = a0 | a1\n 26886: a0 = a0 >> 0x20\n 26889: a1 = a1 | a3\n 26892: a1 = a1 << 0x20\n 26895: a0 = a0 | a1\n 26898: jump @896 if a0 != 0\n      : @888 (gas: 5)\n 26902: i32 a0 = a5 + 0x20\n 26905: i32 a1 = a2 + 0x20\n 26908: u64 [sp + 0x28] = a1\n 26911: a1 = s1\n 26913: ra = 880, jump @29\n      : @889 [@dyn 440] (gas: 4)\n 26919: u64 [sp + 0x20] = a0\n 26922: a0 = u64 [sp + 0x28]\n 26925: a1 = s1\n 26927: ra = 882, jump @29\n      : @890 [@dyn 441] (gas: 4)\n 26933: a1 = a0\n 26935: a0 = u64 [sp + 0x20]\n 26938: a2 = s1\n 26940: ra = 884, jump @0\n      : @891 [@dyn 442] (gas: 6)\n 26946: a0 = u64 [sp + 0x58]\n 26949: a0 = a0 + s1\n 26952: a1 = a0 <u s1\n 26955: a2 = u64 [sp + 0x60]\n 26958: a4 = u64 [sp + 0x38]\n 26961: t0 = 886, jump @1028\n      : @892 [@dyn 443] (gas: 17)\n 26967: a1 = u64 [sp + 0x50]\n 26970: a3 = u64 [sp + 0x40]\n 26973: a1 = a1 + a3\n 26976: a3 = a1 <u a3\n 26979: a5 = u64 [sp + 0x68]\n 26982: s1 = u64 [sp + 0x48]\n 26985: a5 = a5 + s1\n 26988: a3 = a3 + a5\n 26991: a4 = a4 + a1\n 26994: a1 = a4 <u a1\n 26997: a1 = a1 + a3\n 27000: a1 = a1 | a4\n 27003: a3 = 0xffffffe0\n 27013: a3 = a0 <u a3\n 27016: a3 = 0 if a2 != 0\n 27018: a3 = 0 if a1 != 0\n 27020: jump @896 if a3 == 0\n      : @893 (gas: 7)\n 27024: i32 a0 = a0 + 0x20\n 27027: u64 [sp + 136] = 0\n 27031: u64 [sp + 128] = 0\n 27035: u64 [sp + 120] = 0\n 27038: a1 = sp + 0x70\n 27041: u64 [sp + 112] = 0\n 27044: ra = 888, jump @19\n      : @894 [@dyn 444] (gas: 9)\n 27050: s1 = u64 [sp + 0x30]\n 27053: s1 = s1 + 0x1f\n 27056: a0 = 0x1ffffffe0\n 27066: a0 = a0 & s1\n 27069: a1 = u64 [sp + 0x58]\n 27072: a0 = a0 + a1\n 27075: a1 = a0 <u a1\n 27078: a3 = u64 [sp + 0x60]\n 27081: t0 = 890, jump @1030\n      : @895 [@dyn 445] (gas: 24)\n 27087: a1 = u64 [sp + 0x50]\n 27090: a3 = a3 + a1\n 27093: a1 = a3 <u a1\n 27096: a4 = u64 [sp + 0x68]\n 27099: a1 = a1 + a4\n 27102: a4 = a0 + 0x20\n 27105: a0 = a4 <u a0\n 27108: a5 = a2 + a0\n 27111: a2 = a5 <u a2\n 27114: a2 = a0 if a0 == 0\n 27117: a2 = a2 + a3\n 27120: a0 = a2 <u a3\n 27123: a0 = a0 + a1\n 27126: a1 = u64 [sp + 0x8]\n 27129: u64 [a1] = a4\n 27131: u64 [a1 + 0x8] = a5\n 27134: u64 [a1 + 0x10] = a2\n 27137: u64 [a1 + 0x18] = a0\n 27140: sp = s0 + 0xffffffffffffff10\n 27144: ra = u64 [sp + 0xe8]\n 27148: s0 = u64 [sp + 0xe0]\n 27152: s1 = u64 [sp + 0xd8]\n 27156: sp = sp + 0xf0\n 27160: ret\n      : @896 (gas: 1)\n 27162: trap\n      : @897 [@dyn 446] (gas: 31)\n 27163: a2 = u64 [a1]\n 27165: s1 = u64 [a1 + 0x18]\n 27168: a5 = u64 [a1 + 0x8]\n 27171: a1 = u64 [a1 + 0x10]\n 27174: t0 = a2 + 0xfffffffffffffffc\n 27177: u64 [sp + 0x10] = a2\n 27180: a2 = t0 <u a2\n 27183: a3 = a5 + a2\n 27186: a3 = a3 + 0xffffffffffffffff\n 27189: a4 = a3 ^ a5\n 27192: u64 [sp] = a5\n 27194: a5 = a3 <u a5\n 27197: a5 = a2 if a4 == 0\n 27200: a2 = a1 + 0xffffffffffffffff\n 27203: a5 = a5 + a2\n 27206: a2 = a5 <u a2\n 27209: u64 [sp + 0x8] = a1\n 27212: a4 = a1 <u 0x1\n 27215: u64 [sp + 0x18] = s1\n 27218: a4 = s1 - a4\n 27221: a2 = a2 + a4\n 27224: a4 = a2 >s 0\n 27226: s1 = a5 >u 0\n 27228: s1 = a4 if a2 != 0\n 27231: a2 = a2 | a5\n 27234: a4 = a3 >u 0\n 27236: a1 = t0 <u 0x40\n 27239: a1 = a1 ^ 0x1\n 27242: a1 = a4 if a3 != 0\n 27245: a1 = s1 if a2 != 0\n 27248: jump @907 if a1 == 0\n      : @898 (gas: 6)\n 27252: s1 = a0\n 27254: i32 a0 = sp + 0x80\n 27258: a1 = 0x4\n 27261: ra = 0x37e\n 27265: ecalli 1 // 'call_data_load'\n 27267: fallthrough\n      : @899 [@dyn 447] (gas: 4)\n 27268: a0 = u64 [sp + 0x98]\n 27272: a1 = u64 [sp + 0x90]\n 27276: a2 = u64 [sp + 0x88]\n 27280: t0 = 896, jump @1027\n      : @900 [@dyn 448] (gas: 1)\n 27286: jump @908 if a4 == 0\n      : @901 (gas: 3)\n 27290: a3 = u64 [sp + 0x80]\n 27294: a4 = a3 + 0x4\n 27297: t0 = 898, jump @1042\n      : @902 [@dyn 449] (gas: 17)\n 27303: a3 = a0 + a1\n 27306: a0 = u64 [sp + 0x10]\n 27309: u64 [sp + 0x20] = a0\n 27312: a0 = u64 [sp]\n 27314: u64 [sp + 0x28] = a0\n 27317: u64 [sp + 0x40] = a4\n 27320: a0 = u64 [sp + 0x8]\n 27323: u64 [sp + 0x30] = a0\n 27326: a0 = u64 [sp + 0x18]\n 27329: u64 [sp + 0x38] = a0\n 27332: u64 [sp + 0x48] = a5\n 27335: u64 [sp + 0x50] = a2\n 27338: a0 = sp + 0x60\n 27341: a1 = sp + 0x40\n 27344: a2 = sp + 0x20\n 27347: u64 [sp + 0x58] = a3\n 27350: ra = 900, jump @820\n      : @903 [@dyn 450] (gas: 13)\n 27356: a0 = u64 [sp + 0x78]\n 27359: u64 [sp + 0x18] = a0\n 27362: a0 = u64 [sp + 0x70]\n 27365: u64 [sp + 0x10] = a0\n 27368: a0 = u64 [sp + 0x68]\n 27371: u64 [sp + 0x8] = a0\n 27374: a0 = u64 [sp + 0x60]\n 27377: u64 [sp] = a0\n 27379: i32 a0 = sp + 0xa0\n 27383: a1 = 0x24\n 27386: ra = 0x386\n 27390: ecalli 1 // 'call_data_load'\n 27392: fallthrough\n      : @904 [@dyn 451] (gas: 3)\n 27393: a1 = u64 [sp + 0xb0]\n 27397: a0 = u64 [sp + 0xb8]\n 27401: t0 = 904, jump @1038\n      : @905 [@dyn 452] (gas: 1)\n 27407: jump @909 if a3 == 0\n      : @906 (gas: 20)\n 27410: a2 = u64 [sp + 0xa0]\n 27414: a3 = u64 [sp + 0xa8]\n 27418: u64 [s1 + 0x20] = a2\n 27421: a2 = u64 [sp]\n 27423: u64 [s1] = a2\n 27425: u64 [s1 + 0x28] = a3\n 27428: a2 = u64 [sp + 0x8]\n 27431: u64 [s1 + 0x8] = a2\n 27434: u64 [s1 + 0x30] = a1\n 27437: a1 = u64 [sp + 0x10]\n 27440: u64 [s1 + 0x10] = a1\n 27443: u64 [s1 + 0x38] = a0\n 27446: a0 = u64 [sp + 0x18]\n 27449: u64 [s1 + 0x18] = a0\n 27452: sp = s0 + 0xffffffffffffff20\n 27456: ra = u64 [sp + 0xd8]\n 27460: s0 = u64 [sp + 0xd0]\n 27464: s1 = u64 [sp + 0xc8]\n 27468: sp = sp + 0xe0\n 27472: ret\n      : @907 (gas: 2)\n 27474: a1 = 0x20080\n 27479: jump @910\n      : @908 (gas: 2)\n 27481: a1 = 0x20080\n 27486: jump @910\n      : @909 (gas: 2)\n 27488: a1 = 0x20080\n 27493: fallthrough\n      : @910 (gas: 6)\n 27494: i32 a1 = a1 + 0\n 27496: a0 = 0x1\n 27499: a2 = 0\n 27501: ra = 0x38a\n 27505: ecalli 8 // 'seal_return'\n 27507: fallthrough\n      : @911 [@dyn 453] (gas: 31)\n 27508: sp = sp + 0xfffffffffffffee0\n 27512: u64 [sp + 0x118] = ra\n 27516: u64 [sp + 0x110] = s0\n 27520: u64 [sp + 0x108] = s1\n 27524: s0 = sp + 0x120\n 27528: sp = sp & 0xffffffffffffffe0\n 27531: s1 = sp\n 27533: u64 [s1 + 0x38] = a0\n 27536: a0 = u64 [a2]\n 27538: u64 [s1 + 0x40] = a0\n 27541: a0 = u64 [a2 + 0x8]\n 27544: u64 [s1 + 0x48] = a0\n 27547: a0 = u64 [a2 + 0x10]\n 27550: u64 [s1 + 0x50] = a0\n 27553: a0 = u64 [a2 + 0x18]\n 27556: u64 [s1 + 0x58] = a0\n 27559: a0 = u64 [a1 + 0x18]\n 27562: a2 = u64 [a1 + 0x10]\n 27565: a3 = u64 [a1 + 0x8]\n 27568: a1 = u64 [a1]\n 27570: u64 [s1 + 0x30] = a0\n 27573: u64 [s1 + 0xf8] = a0\n 27577: u64 [s1 + 0x28] = a2\n 27580: u64 [s1 + 0xf0] = a2\n 27584: u64 [s1 + 0x20] = a3\n 27587: u64 [s1 + 0xe8] = a3\n 27591: u64 [s1 + 0x18] = a1\n 27594: u64 [s1 + 0xe0] = a1\n 27598: a0 = s1 + 0xc0\n 27602: a1 = s1 + 0xe0\n 27606: ra = 908, jump @21\n      : @912 [@dyn 454] (gas: 20)\n 27612: a0 = u64 [s1 + 0xd8]\n 27616: t0 = u64 [s1 + 0xc0]\n 27620: a2 = u64 [s1 + 0xd0]\n 27624: a3 = u64 [s1 + 0xc8]\n 27628: a1 = u64 [s1 + 0x58]\n 27631: a4 = a0 ^ a1\n 27634: a1 = a1 <u a0\n 27637: a0 = u64 [s1 + 0x50]\n 27640: a5 = a0 <u a2\n 27643: a5 = a1 if a4 != 0\n 27646: a1 = u64 [s1 + 0x48]\n 27649: t1 = a3 ^ a1\n 27652: a3 = a1 <u a3\n 27655: a1 = u64 [s1 + 0x40]\n 27658: a1 = a1 <u t0\n 27661: a1 = a3 if t1 != 0\n 27664: a0 = a0 ^ a2\n 27667: a0 = a0 | a4\n 27670: a1 = a5 if a0 != 0\n 27673: jump @917 if a1 == 0\n      : @913 (gas: 11)\n 27677: a0 = u64 [s1 + 0x18]\n 27680: u64 [s1 + 0x60] = a0\n 27683: a0 = u64 [s1 + 0x20]\n 27686: u64 [s1 + 0x68] = a0\n 27689: a0 = u64 [s1 + 0x28]\n 27692: u64 [s1 + 0x70] = a0\n 27695: a1 = s1 + 0x60\n 27698: a0 = u64 [s1 + 0x30]\n 27701: u64 [s1 + 0x78] = a0\n 27704: a0 = 0\n 27706: ra = 910, jump @19\n      : @914 [@dyn 455] (gas: 2)\n 27712: a1 = i32 [0x20074]\n 27717: jump @916 if a1 >u 31\n      : @915 (gas: 2)\n 27721: u32 [0x20074] = 0x20\n 27727: fallthrough\n      : @916 (gas: 72)\n 27728: a0 = sp + 0xffffffffffffffe0\n 27731: a2 = a0 & 0xffffffffffffffe0\n 27734: u64 [s1 + 0x30] = a2\n 27737: sp = a2\n 27739: a0 = 0x20080\n 27744: i32 a0 = a0 + 0\n 27746: i32 a2 = a2 + 0\n 27748: a1 = 0x20\n 27751: ecalli 6 // 'hash_keccak_256'\n 27753: t0 = u64 [s1 + 0x30]\n 27756: a0 = u64 [t0 + 0x18]\n 27759: a1 = u64 [t0 + 0x10]\n 27762: a3 = reverse a0\n 27764: a1 = reverse a1\n 27766: a4 = 0x3\n 27769: a0 = u64 [s1 + 0x40]\n 27772: a2 = a0 << 0x1\n 27775: t1 = a2 + a0\n 27778: a4 = a0 mulhu a4\n 27781: a2 = u64 [s1 + 0x48]\n 27784: a5 = a2 << 0x1\n 27787: a5 = a5 + a2\n 27790: a4 = a4 + a5\n 27793: t1 = t1 + a3\n 27796: a3 = t1 <u a3\n 27799: a0 = a1 + a4\n 27802: ra = a0 + a3\n 27805: a0 = ra ^ a1\n 27808: a1 = ra <u a1\n 27811: a1 = a3 if a0 == 0\n 27814: a0 = a4 <u a5\n 27817: a4 = 0x3\n 27820: a3 = a2 mulhu a4\n 27823: a0 = a0 + a3\n 27826: a2 = u64 [s1 + 0x50]\n 27829: a3 = a2 << 0x1\n 27832: t2 = a3 + a2\n 27835: a4 = a2 mulhu a4\n 27838: a5 = u64 [t0]\n 27840: a2 = u64 [s1 + 0x58]\n 27843: a3 = a2 << 0x1\n 27846: a3 = a3 + a2\n 27849: a3 = a3 + a4\n 27852: a4 = reverse a5\n 27854: a3 = a3 + a4\n 27857: a4 = u64 [t0 + 0x8]\n 27860: t2 = t2 + a0\n 27863: a0 = t2 <u a0\n 27866: a0 = a0 + a3\n 27869: a3 = reverse a4\n 27871: t2 = t2 + a3\n 27874: a3 = t2 <u a3\n 27877: a0 = a0 + a3\n 27880: a1 = a1 + t2\n 27883: a3 = a1 <u t2\n 27886: a0 = a0 + a3\n 27889: a3 = u64 [s1 + 0x38]\n 27892: u64 [a3] = t1\n 27894: u64 [a3 + 0x8] = ra\n 27897: u64 [a3 + 0x10] = a1\n 27900: u64 [a3 + 0x18] = a0\n 27903: a0 = 0\n 27905: u64 [a3 + 56] = 0\n 27908: u64 [a3 + 48] = 0\n 27911: u64 [a3 + 40] = 0\n 27914: u64 [a3 + 32] = 0\n 27917: sp = s0 + 0xfffffffffffffee0\n 27921: ra = u64 [sp + 0x118]\n 27925: s0 = u64 [sp + 0x110]\n 27929: s1 = u64 [sp + 0x108]\n 27933: sp = sp + 0x120\n 27937: ret\n      : @917 (gas: 6)\n 27939: u64 [s1 + 176] = 0\n 27943: u64 [s1 + 168] = 0\n 27947: u64 [s1 + 160] = 0\n 27951: t0 = 0x390\n 27955: a0 = 0x4e487b7100000000\n 27965: fallthrough\n      : @918 [@dyn 456] (gas: 4)\n 27966: a1 = s1 + 0xa0\n 27970: u64 [s1 + 0xb8] = a0\n 27974: a0 = 0\n 27976: ra = 914, jump @19\n      : @919 [@dyn 457] (gas: 7)\n 27982: u64 [s1 + 152] = 0\n 27986: u64 [s1 + 144] = 0\n 27990: u64 [s1 + 128] = 0x32\n 27995: a0 = 0x4\n 27998: a1 = s1 + 0x80\n 28002: u64 [s1 + 136] = 0\n 28006: ra = 916, jump @19\n      : @920 [@dyn 458] (gas: 2)\n 28012: a1 = i32 [0x20074]\n 28017: jump @922 if a1 >u 63\n      : @921 (gas: 2)\n 28021: u32 [0x20074] = 0x40\n 28027: fallthrough\n      : @922 (gas: 7)\n 28028: a1 = 0x20080\n 28033: i32 a1 = a1 + 0\n 28035: a0 = 0x1\n 28038: a2 = 0x24\n 28041: ra = 0x396\n 28045: ecalli 8 // 'seal_return'\n 28047: fallthrough\n      : @923 [@dyn 459] (gas: 36)\n 28048: sp = sp + 0xfffffffffffffce0\n 28052: a2 = sp + 0x300\n 28056: u64 [a2 + 0x18] = ra\n 28059: u64 [a2 + 0x10] = s0\n 28062: u64 [a2 + 0x8] = s1\n 28065: s0 = sp + 0x320\n 28069: sp = sp & 0xffffffffffffffe0\n 28072: s1 = sp\n 28074: a3 = u64 [a1 + 0x10]\n 28077: t0 = u64 [a1]\n 28079: t1 = u64 [a1 + 0x18]\n 28082: a1 = u64 [a1 + 0x8]\n 28085: a5 = u64 [a0 + 0x18]\n 28088: a2 = u64 [a0 + 0x10]\n 28091: a4 = u64 [a0 + 0x8]\n 28094: t2 = u64 [a0]\n 28096: u64 [s1 + 0x80] = a5\n 28100: a0 = s1 + 0x200\n 28104: u64 [a0 + 0x58] = a5\n 28107: u64 [s1 + 0x78] = a2\n 28110: u64 [a0 + 0x50] = a2\n 28113: u64 [s1 + 0x28] = a4\n 28116: u64 [a0 + 0x48] = a4\n 28119: u64 [s1 + 0x68] = a1\n 28122: u64 [s1 + 0x58] = t1\n 28125: a0 = a1 | t1\n 28128: a1 = t0 | a3\n 28131: a1 = a1 | a0\n 28134: a1 = a1 >> 0x20\n 28137: u64 [s1 + 0x60] = a3\n 28140: a0 = a0 | a3\n 28143: a0 = a0 << 0x20\n 28146: a0 = a0 | a1\n 28149: u64 [s1 + 0x20] = t2\n 28152: u64 [s1 + 0x240] = t2\n 28156: jump @964 if a0 != 0\n      : @924 (gas: 4)\n 28160: a0 = s1 + 0x220\n 28164: u64 [s1 + 0x70] = t0\n 28167: a1 = t0\n 28169: ra = 920, jump @17\n      : @925 [@dyn 460] (gas: 17)\n 28175: a0 = s1 + 0x200\n 28179: a3 = u64 [a0 + 0x38]\n 28182: a2 = u64 [a0 + 0x30]\n 28185: a1 = u64 [a0 + 0x28]\n 28188: a0 = a3 >u 0\n 28190: a4 = a2 >u 0\n 28192: a4 = a0 if a3 != 0\n 28195: u64 [s1 + 0x38] = a1\n 28198: a0 = a1 >u 0\n 28200: u64 [s1 + 0x40] = a2\n 28203: u64 [s1 + 0x30] = a3\n 28206: a2 = a2 | a3\n 28209: u64 [s1 + 0x18] = a0\n 28212: u64 [s1 + 0x50] = a4\n 28215: u64 [s1 + 0x90] = a2\n 28219: a0 = a4 if a2 != 0\n 28222: jump @965 if a0 != 0\n      : @926 (gas: 5)\n 28226: a0 = u64 [s1 + 0x220]\n 28230: u64 [s1 + 0x48] = a0\n 28233: a0 = s1 + 0x200\n 28237: a1 = s1 + 0x240\n 28241: ra = 922, jump @21\n      : @927 [@dyn 461] (gas: 12)\n 28247: a4 = s1 + 0x200\n 28251: a2 = u64 [a4]\n 28253: a0 = u64 [a4 + 0x8]\n 28256: a1 = u64 [a4 + 0x10]\n 28259: a3 = u64 [a4 + 0x18]\n 28262: u64 [s1 + 0x1d8] = a3\n 28266: u64 [s1 + 0x1d0] = a1\n 28270: u64 [s1 + 0x1c8] = a0\n 28274: a0 = s1 + 0x1e0\n 28278: a1 = s1 + 0x1c0\n 28282: u64 [s1 + 0x1c0] = a2\n 28286: ra = 924, jump @848\n      : @928 [@dyn 462] (gas: 18)\n 28292: a0 = s1 + 0x100\n 28296: a3 = u64 [a0 + 0xf8]\n 28300: a4 = u64 [a0 + 0xf0]\n 28304: a5 = u64 [a0 + 0xe8]\n 28308: t0 = u64 [s1 + 0x1e0]\n 28312: a0 = a3 >u 0\n 28314: a1 = a4 >u 0\n 28316: a1 = a0 if a3 != 0\n 28319: a0 = a5 >u 0\n 28321: a2 = t0 <u 0x20\n 28324: a2 = a2 ^ 0x1\n 28327: a2 = a0 if a5 != 0\n 28330: a0 = a4 | a3\n 28333: a2 = a1 if a0 != 0\n 28336: a0 = u64 [s1 + 0x48]\n 28339: a0 = a0 <u 0x20\n 28342: u64 [s1 + 0x88] = a0\n 28346: jump @936 if a2 == 0\n      : @929 (gas: 16)\n 28350: u64 [s1 + 0xb0] = t0\n 28354: u64 [s1 + 0xb8] = a5\n 28358: u64 [s1 + 0xd0] = a4\n 28362: u64 [s1 + 0xc0] = a3\n 28366: a0 = u64 [s1 + 0x20]\n 28369: a2 = s1 + 0x100\n 28373: u64 [a2 + 0xa0] = a0\n 28377: a0 = u64 [s1 + 0x28]\n 28380: u64 [a2 + 0xa8] = a0\n 28384: a0 = u64 [s1 + 0x78]\n 28387: u64 [a2 + 0xb0] = a0\n 28391: a1 = s1 + 0x1a0\n 28395: a0 = u64 [s1 + 0x80]\n 28399: u64 [a2 + 0xb8] = a0\n 28403: a0 = 0\n 28405: ra = 926, jump @19\n      : @930 [@dyn 463] (gas: 2)\n 28411: a1 = i32 [0x20074]\n 28416: jump @932 if a1 >u 31\n      : @931 (gas: 2)\n 28420: u32 [0x20074] = 0x20\n 28426: fallthrough\n      : @932 (gas: 117)\n 28427: a0 = sp + 0xffffffffffffffe0\n 28430: a2 = a0 & 0xffffffffffffffe0\n 28433: u64 [s1 + 0xc8] = a2\n 28437: sp = a2\n 28439: a0 = 0x20080\n 28444: i32 a0 = a0 + 0\n 28446: i32 a2 = a2 + 0\n 28448: a1 = 0x20\n 28451: ecalli 6 // 'hash_keccak_256'\n 28453: a0 = u64 [s1 + 0x48]\n 28456: a1 = a0 + 0x1f\n 28459: a0 = a1 <u a0\n 28462: a5 = u64 [s1 + 0x38]\n 28465: a2 = a5 + a0\n 28468: a3 = a2 <u a5\n 28471: a3 = a0 if a0 == 0\n 28474: a4 = u64 [s1 + 0x40]\n 28477: a3 = a3 + a4\n 28480: u64 [s1 + 0xa8] = a3\n 28484: a3 = a3 << 0x3b\n 28487: a4 = a2 >> 0x5\n 28490: a4 = a4 | a3\n 28493: a0 = u64 [s1 + 0xc8]\n 28497: t1 = u64 [a0 + 0x18]\n 28500: a2 = a2 << 0x3b\n 28503: a3 = u64 [a0 + 0x10]\n 28506: a1 = a1 >> 0x5\n 28509: a0 = a1 | a2\n 28512: t2 = reverse t1\n 28514: a2 = reverse a3\n 28516: a1 = u64 [s1 + 0x88]\n 28520: a1 = 0 if a5 != 0\n 28522: a3 = u64 [s1 + 0x90]\n 28526: a1 = 0 if a3 != 0\n 28528: a4 = 0 if a1 != 0\n 28530: a0 = 0 if a1 != 0\n 28532: t0 = t2 + a0\n 28535: a0 = t0 <u t2\n 28538: a5 = a2 + a0\n 28541: a4 = a4 + a5\n 28544: u64 [s1 + 0xd8] = a4\n 28548: a5 = a4 ^ a2\n 28551: a3 = a4 <u a2\n 28554: a3 = a0 if a5 == 0\n 28557: u64 [s1 + 0xa0] = a3\n 28561: a0 = u64 [s1 + 0xb0]\n 28565: ra = a0 + 0x1f\n 28568: a4 = ra <u a0\n 28571: a3 = u64 [s1 + 0xb8]\n 28575: a0 = a3 + a4\n 28578: a5 = a0 <u a3\n 28581: a5 = a4 if a4 == 0\n 28584: t1 = u64 [s1 + 0xd0]\n 28588: t1 = t1 + a5\n 28591: a4 = t1 << 0x3b\n 28594: a3 = a0 >> 0x5\n 28597: a3 = a3 | a4\n 28600: a0 = a0 << 0x3b\n 28603: a4 = ra >> 0x5\n 28606: a0 = a0 | a4\n 28609: a0 = a0 + t2\n 28612: u64 [s1 + 0xb8] = a0\n 28616: a0 = a0 <u t2\n 28619: t2 = t0\n 28621: a4 = a2 + a0\n 28624: a4 = a4 + a3\n 28627: a3 = a4 ^ a2\n 28630: u64 [s1 + 0xb0] = a4\n 28634: a2 = a4 <u a2\n 28637: a2 = a0 if a3 == 0\n 28640: a4 = u64 [s1 + 0xa8]\n 28644: a0 = u64 [s1 + 0x40]\n 28647: a0 = a4 <u a0\n 28650: a3 = u64 [s1 + 0x30]\n 28653: a0 = a0 + a3\n 28656: a3 = a4 >> 0x5\n 28659: a4 = a0 << 0x3b\n 28662: a3 = a3 | a4\n 28665: a4 = u64 [s1 + 0xc8]\n 28669: t0 = u64 [a4]\n 28671: a4 = u64 [a4 + 0x8]\n 28674: a0 = a0 >> 0x5\n 28677: a3 = 0 if a1 != 0\n 28679: a0 = 0 if a1 != 0\n 28681: a1 = reverse a4\n 28683: a4 = reverse t0\n 28685: a0 = a0 + a4\n 28688: a3 = a3 + a1\n 28691: a5 = a3 <u a1\n 28694: a0 = a0 + a5\n 28697: ra = u64 [s1 + 0xa0]\n 28701: ra = ra + a3\n 28704: a3 = ra <u a3\n 28707: t0 = a0 + a3\n 28710: a0 = u64 [s1 + 0xd0]\n 28714: a0 = t1 <u a0\n 28717: a3 = u64 [s1 + 0xc0]\n 28721: a0 = a0 + a3\n 28724: a3 = t1 >> 0x5\n 28727: a5 = a0 << 0x3b\n 28730: a3 = a3 | a5\n 28733: a0 = a0 >> 0x5\n 28736: a0 = a0 + a4\n 28739: a4 = u64 [s1 + 0xd8]\n 28743: a3 = a3 + a1\n 28746: a1 = a3 <u a1\n 28749: a0 = a0 + a1\n 28752: a2 = a2 + a3\n 28755: u64 [s1 + 0xa8] = a2\n 28759: a1 = a2 <u a3\n 28762: a0 = a0 + a1\n 28765: u64 [s1 + 0xa0] = a0\n 28769: a0 = sp + 0xffffffffffffffe0\n 28772: t1 = a0 & 0xffffffffffffffe0\n 28775: sp = t1\n 28777: u64 [s1 + 0x98] = t1\n 28781: fallthrough\n      : @933 (gas: 20)\n 28782: a0 = u64 [s1 + 0xb8]\n 28786: a0 = t2 <u a0\n 28789: a2 = u64 [s1 + 0xb0]\n 28793: a1 = a4 ^ a2\n 28796: a2 = a4 <u a2\n 28799: a2 = a0 if a1 == 0\n 28802: a5 = u64 [s1 + 0xa8]\n 28806: a0 = ra <u a5\n 28809: a3 = u64 [s1 + 0xa0]\n 28813: a1 = t0 ^ a3\n 28816: a3 = t0 <u a3\n 28819: a3 = a0 if a1 == 0\n 28822: a0 = ra ^ a5\n 28825: a0 = a0 | a1\n 28828: a3 = a2 if a0 == 0\n 28831: u64 [t1] = t2\n 28833: u64 [t1 + 0x8] = a4\n 28836: u64 [t1 + 0x10] = ra\n 28839: u64 [t1 + 0x18] = t0\n 28842: jump @936 if a3 == 0\n      : @934 (gas: 11)\n 28845: u64 [s1 + 632] = 0\n 28849: u64 [s1 + 624] = 0\n 28853: u64 [s1 + 616] = 0\n 28857: u64 [s1 + 608] = 0\n 28861: a1 = s1 + 0x260\n 28865: a0 = t1\n 28867: u64 [s1 + 0xd0] = t2\n 28871: u64 [s1 + 0xd8] = a4\n 28875: u64 [s1 + 0xc8] = t0\n 28879: u64 [s1 + 0xc0] = ra\n 28883: ra = 928, jump @23\n      : @935 [@dyn 464] (gas: 15)\n 28889: t1 = u64 [s1 + 0x98]\n 28893: t0 = u64 [s1 + 0xc8]\n 28897: a4 = u64 [s1 + 0xd8]\n 28901: t2 = u64 [s1 + 0xd0]\n 28905: t2 = t2 + 0x1\n 28908: a0 = t2 <u 0x1\n 28911: a4 = a4 + a0\n 28914: a0 = t2 | a4\n 28917: a0 = a0 <u 0x1\n 28920: a1 = u64 [s1 + 0xc0]\n 28924: a0 = a0 + a1\n 28927: a1 = a0 <u a1\n 28930: t0 = t0 + a1\n 28933: ra = a0\n 28935: jump @933\n      : @936 (gas: 9)\n 28938: a0 = u64 [s1 + 0x88]\n 28942: a0 = a0 ^ 0x1\n 28945: a3 = u64 [s1 + 0x38]\n 28948: a1 = u64 [s1 + 0x18]\n 28951: a0 = a1 if a3 != 0\n 28954: a1 = u64 [s1 + 0x50]\n 28957: a2 = u64 [s1 + 0x90]\n 28961: a0 = a1 if a2 != 0\n 28964: jump @945 if a0 == 0\n      : @937 (gas: 15)\n 28968: a0 = u64 [s1 + 0x48]\n 28971: a0 = a0 & 0xffffffffffffffe0\n 28974: u64 [s1 + 0x50] = a0\n 28977: a0 = u64 [s1 + 0x20]\n 28980: a2 = s1 + 0x100\n 28984: u64 [a2 + 0x60] = a0\n 28987: a0 = u64 [s1 + 0x28]\n 28990: u64 [a2 + 0x68] = a0\n 28993: a0 = u64 [s1 + 0x78]\n 28996: u64 [a2 + 0x70] = a0\n 28999: a1 = s1 + 0x160\n 29003: a0 = u64 [s1 + 0x80]\n 29007: u64 [a2 + 0x78] = a0\n 29010: a0 = 0\n 29012: ra = 930, jump @19\n      : @938 [@dyn 465] (gas: 7)\n 29018: a0 = sp + 0xffffffffffffffe0\n 29021: a0 = a0 & 0xffffffffffffffe0\n 29024: u64 [s1 + 0xb8] = a0\n 29028: sp = a0\n 29030: a1 = 0x20\n 29033: a0 = 0\n 29035: ra = 932, jump @29\n      : @939 [@dyn 466] (gas: 35)\n 29041: a1 = sp + 0xffffffffffffffe0\n 29044: a1 = a1 & 0xffffffffffffffe0\n 29047: u64 [s1 + 0xb0] = a1\n 29051: sp = a1\n 29053: i32 a0 = a0 + 0\n 29055: i32 a2 = a1 + 0\n 29057: a1 = 0x20\n 29060: ecalli 6 // 'hash_keccak_256'\n 29062: u64 [s1 + 208] = 0x20\n 29067: u64 [s1 + 216] = 0\n 29071: u64 [s1 + 200] = 0\n 29075: a4 = 0\n 29077: t0 = 0\n 29079: t2 = 0\n 29081: u64 [s1 + 192] = 0\n 29085: a3 = u64 [s1 + 0xb0]\n 29089: a0 = u64 [a3 + 0x18]\n 29092: a1 = u64 [a3 + 0x10]\n 29095: a2 = u64 [a3 + 0x8]\n 29098: a5 = u64 [a3]\n 29100: t1 = reverse a0\n 29102: a1 = reverse a1\n 29104: a3 = reverse a2\n 29106: a2 = reverse a5\n 29108: a5 = 0\n 29110: ra = a2\n 29112: a0 = u64 [s1 + 0xb8]\n 29116: u64 [a0 + 0x18] = a2\n 29119: u64 [s1 + 0x90] = a3\n 29123: u64 [a0 + 0x10] = a3\n 29126: u64 [s1 + 0xb0] = a1\n 29130: u64 [a0 + 0x8] = a1\n 29133: a3 = t1\n 29135: u64 [a0] = t1\n 29137: fallthrough\n      : @940 (gas: 25)\n 29138: u64 [s1 + 0xa8] = ra\n 29142: t1 = a3\n 29144: a0 = u64 [s1 + 0x50]\n 29147: u64 [s1 + 0xa0] = a4\n 29151: a0 = a4 <u a0\n 29154: a4 = a0 ^ 0x1\n 29157: u64 [s1 + 0x98] = t0\n 29161: a4 = 0x1 if t0 != 0\n 29164: a0 = u64 [s1 + 0xc0]\n 29168: a0 = t2 | a0\n 29171: a4 = 0x1 if a0 != 0\n 29174: a1 = u64 [s1 + 0x70]\n 29177: a0 = u64 [s1 + 0xd0]\n 29181: a1 = a1 + a0\n 29184: a3 = u64 [s1 + 0x68]\n 29187: a3 = a3 + a5\n 29190: a2 = u64 [s1 + 0x60]\n 29193: a0 = u64 [s1 + 0xd8]\n 29197: a2 = a2 + a0\n 29200: a0 = u64 [s1 + 0x58]\n 29203: t0 = a5\n 29205: a5 = u64 [s1 + 0xc8]\n 29209: a0 = a0 + a5\n 29212: a5 = t0\n 29214: jump @949 if a4 != 0\n      : @941 (gas: 23)\n 29218: u64 [s1 + 0x80] = t2\n 29222: a4 = u64 [s1 + 0xd0]\n 29226: a4 = a1 <u a4\n 29229: a3 = a3 + a4\n 29232: t0 = a3 ^ a5\n 29235: u64 [s1 + 0x78] = a5\n 29238: a5 = a3 <u a5\n 29241: a5 = a4 if t0 == 0\n 29244: a5 = a5 + a2\n 29247: t0 = a5 <u a2\n 29250: a4 = u64 [s1 + 0xd8]\n 29254: a2 = a2 <u a4\n 29257: a0 = a0 + a2\n 29260: a0 = a0 + t0\n 29263: a2 = a1 | a5\n 29266: a0 = a0 | a3\n 29269: a2 = a2 | a0\n 29272: a2 = a2 >> 0x20\n 29275: a0 = a0 | a5\n 29278: a0 = a0 << 0x20\n 29281: a0 = a0 | a2\n 29284: u64 [s1 + 0x88] = t1\n 29288: jump @964 if a0 != 0\n      : @942 (gas: 2)\n 29292: a0 = s1 + 0x120\n 29296: ra = 934, jump @17\n      : @943 [@dyn 467] (gas: 13)\n 29302: a4 = s1 + 0x100\n 29306: a0 = u64 [a4 + 0x38]\n 29309: a1 = u64 [a4 + 0x30]\n 29312: a2 = u64 [a4 + 0x28]\n 29315: a3 = u64 [a4 + 0x20]\n 29318: a4 = s1 + 0x200\n 29322: u64 [a4 + 0x98] = a0\n 29326: u64 [a4 + 0x90] = a1\n 29330: u64 [a4 + 0x88] = a2\n 29334: u64 [a4 + 0x80] = a3\n 29338: a1 = s1 + 0x280\n 29342: a0 = u64 [s1 + 0xb8]\n 29346: ra = 936, jump @23\n      : @944 [@dyn 468] (gas: 57)\n 29352: ra = u64 [s1 + 0x88]\n 29356: ra = ra + 0x1\n 29359: a0 = ra <u 0x1\n 29362: t0 = u64 [s1 + 0xb0]\n 29366: t0 = t0 + a0\n 29369: a0 = ra | t0\n 29372: a0 = a0 <u 0x1\n 29375: a1 = u64 [s1 + 0x90]\n 29379: t1 = a1 + a0\n 29382: a1 = t1 <u a1\n 29385: a0 = u64 [s1 + 0xa8]\n 29389: a0 = a0 + a1\n 29392: a1 = u64 [s1 + 0xd0]\n 29396: a2 = a1 + 0x20\n 29399: u64 [s1 + 0xa8] = a2\n 29403: a3 = a2 <u a1\n 29406: a1 = u64 [s1 + 0x78]\n 29409: a2 = a1 + a3\n 29412: u64 [s1 + 0x88] = a2\n 29416: a4 = a2 <u a1\n 29419: a4 = a3 if a3 == 0\n 29422: a1 = u64 [s1 + 0xd8]\n 29426: t2 = a1 + a4\n 29429: a4 = t2 <u a1\n 29432: a1 = u64 [s1 + 0xc8]\n 29436: a1 = a1 + a4\n 29439: u64 [s1 + 0xc8] = a1\n 29443: a1 = u64 [s1 + 0xa0]\n 29447: a4 = a1 + 0x20\n 29450: a5 = a4 <u a1\n 29453: a2 = u64 [s1 + 0x98]\n 29457: a1 = a2 + a5\n 29460: a2 = a1 <u a2\n 29463: a2 = a5 if a5 == 0\n 29466: a3 = u64 [s1 + 0x80]\n 29470: a2 = a2 + a3\n 29473: a5 = a2 <u a3\n 29476: a3 = u64 [s1 + 0xc0]\n 29480: a3 = a3 + a5\n 29483: u64 [s1 + 0xc0] = a3\n 29487: a3 = t0\n 29489: u64 [s1 + 0xb0] = a3\n 29493: a5 = u64 [s1 + 0xb8]\n 29497: u64 [a5 + 0x8] = a3\n 29500: a3 = ra\n 29502: u64 [a5] = ra\n 29504: u64 [a5 + 0x10] = t1\n 29507: ra = a0\n 29509: u64 [a5 + 0x18] = a0\n 29512: u64 [s1 + 0x90] = t1\n 29516: a0 = u64 [s1 + 0xa8]\n 29520: u64 [s1 + 0xd0] = a0\n 29524: a5 = u64 [s1 + 0x88]\n 29528: u64 [s1 + 0xd8] = t2\n 29532: t0 = a1\n 29534: t2 = a2\n 29536: jump @940\n      : @945 (gas: 8)\n 29539: a2 = u64 [s1 + 0x48]\n 29542: a0 = u64 [s1 + 0x40]\n 29545: a0 = a0 | a2\n 29548: a1 = u64 [s1 + 0x30]\n 29551: a1 = a1 | a3\n 29554: a0 = a0 | a1\n 29557: a4 = u64 [s1 + 0x70]\n 29560: jump @958 if a0 == 0\n      : @946 (gas: 9)\n 29564: a0 = u64 [s1 + 0x60]\n 29567: a1 = u64 [s1 + 0x58]\n 29570: a0 = a0 | a1\n 29573: a1 = 0xffffffe0\n 29583: a1 = a4 <u a1\n 29586: a2 = u64 [s1 + 0x68]\n 29589: a1 = 0 if a2 != 0\n 29591: a1 = 0 if a0 != 0\n 29593: jump @964 if a1 == 0\n      : @947 (gas: 3)\n 29597: i32 a1 = a4 + 0x20\n 29600: a0 = s1 + 0x180\n 29604: ra = 938, jump @17\n      : @948 [@dyn 469] (gas: 12)\n 29610: a1 = s1 + 0x100\n 29614: a0 = u64 [a1 + 0x98]\n 29618: u64 [s1 + 0xd0] = a0\n 29622: a0 = u64 [a1 + 0x90]\n 29626: u64 [s1 + 0xc8] = a0\n 29630: a0 = u64 [a1 + 0x88]\n 29634: u64 [s1 + 0xb8] = a0\n 29638: a0 = u64 [a1 + 0x80]\n 29642: u64 [s1 + 0xc0] = a0\n 29646: a2 = u64 [s1 + 0x48]\n 29649: a3 = u64 [s1 + 0x38]\n 29652: jump @959\n      : @949 (gas: 11)\n 29655: t1 = a5\n 29657: t0 = u64 [s1 + 0x48]\n 29660: a4 = u64 [s1 + 0x50]\n 29663: a4 = a4 ^ t0\n 29666: a5 = u64 [s1 + 0x40]\n 29669: a4 = a4 | a5\n 29672: t2 = u64 [s1 + 0x38]\n 29675: a5 = u64 [s1 + 0x30]\n 29678: a5 = t2 | a5\n 29681: a4 = a4 | a5\n 29684: jump @957 if a4 == 0\n      : @950 (gas: 20)\n 29688: a4 = u64 [s1 + 0xd0]\n 29692: a4 = a1 <u a4\n 29695: a3 = a3 + a4\n 29698: t0 = a3 ^ t1\n 29701: a5 = a3 <u t1\n 29704: a5 = a4 if t0 == 0\n 29707: a5 = a5 + a2\n 29710: t0 = a5 <u a2\n 29713: a4 = u64 [s1 + 0xd8]\n 29717: a2 = a2 <u a4\n 29720: a0 = a0 + a2\n 29723: a0 = a0 + t0\n 29726: a2 = a1 | a5\n 29729: a0 = a0 | a3\n 29732: a2 = a2 | a0\n 29735: a2 = a2 >> 0x20\n 29738: a0 = a0 | a5\n 29741: a0 = a0 << 0x20\n 29744: a0 = a0 | a2\n 29747: jump @964 if a0 != 0\n      : @951 (gas: 2)\n 29751: a0 = s1 + 0x140\n 29755: ra = 940, jump @17\n      : @952 [@dyn 470] (gas: 17)\n 29761: a1 = s1 + 0x100\n 29765: a0 = u64 [a1 + 0x58]\n 29768: u64 [s1 + 0xd0] = a0\n 29772: a0 = u64 [a1 + 0x50]\n 29775: u64 [s1 + 0xc8] = a0\n 29779: a0 = u64 [a1 + 0x48]\n 29782: u64 [s1 + 0xc0] = a0\n 29786: a0 = u64 [a1 + 0x40]\n 29789: u64 [s1 + 0xb0] = a0\n 29793: a0 = u64 [s1 + 0x48]\n 29796: a0 = a0 << 0x3b\n 29799: a1 = a0 >> 0x38\n 29802: u64 [s1 + 0xd8] = a1\n 29806: a2 = 0x80 - a1\n 29810: a0 = 0xffffffffffffffff\n 29813: a1 = 0xffffffffffffffff\n 29816: ra = 942, jump @1052\n      : @953 [@dyn 471] (gas: 6)\n 29822: u64 [s1 + 0xa8] = a0\n 29826: u64 [s1 + 0x90] = a1\n 29830: a0 = 0xffffffffffffffff\n 29833: a1 = 0xffffffffffffffff\n 29836: a2 = u64 [s1 + 0xd8]\n 29840: ra = 944, jump @1047\n      : @954 [@dyn 472] (gas: 10)\n 29846: u64 [s1 + 0x98] = a0\n 29850: u64 [s1 + 0xa0] = a1\n 29854: a0 = u64 [s1 + 0x90]\n 29858: a0 = a0 | a1\n 29861: u64 [s1 + 0x90] = a0\n 29865: a0 = u64 [s1 + 0xd8]\n 29869: a2 = a0 + 0xffffffffffffff80\n 29872: a0 = 0xffffffffffffffff\n 29875: a1 = 0xffffffffffffffff\n 29878: ra = 946, jump @1047\n      : @955 [@dyn 473] (gas: 29)\n 29884: a4 = u64 [s1 + 0xd8]\n 29888: a2 = a4 <u 0x80\n 29892: a3 = u64 [s1 + 0x90]\n 29896: a1 = a3 if a2 != 0\n 29899: a5 = u64 [s1 + 0x98]\n 29903: a3 = u64 [s1 + 0xa8]\n 29907: a3 = a3 | a5\n 29910: a3 = a0 if a2 == 0\n 29913: a1 = 0xffffffffffffffff if a4 == 0\n 29916: a3 = 0xffffffffffffffff if a4 == 0\n 29919: a4 = u64 [s1 + 0xa0]\n 29923: a4 = 0 if a2 == 0\n 29925: a5 = 0 if a2 == 0\n 29927: a0 = u64 [s1 + 0xb0]\n 29931: a0 = a0 & ~a3\n 29934: a2 = u64 [s1 + 0xc0]\n 29938: a1 = a2 & ~a1\n 29941: a2 = u64 [s1 + 0xc8]\n 29945: a2 = a2 & ~a5\n 29948: a3 = u64 [s1 + 0xd0]\n 29952: a3 = a3 & ~a4\n 29955: a4 = s1 + 0x200\n 29959: u64 [a4 + 0xb8] = a3\n 29963: u64 [a4 + 0xb0] = a2\n 29967: u64 [a4 + 0xa8] = a1\n 29971: u64 [a4 + 0xa0] = a0\n 29975: a1 = s1 + 0x2a0\n 29979: a0 = u64 [s1 + 0xb8]\n 29983: ra = 948, jump @23\n      : @956 [@dyn 474] (gas: 3)\n 29989: t0 = u64 [s1 + 0x48]\n 29992: t2 = u64 [s1 + 0x38]\n 29995: fallthrough\n      : @957 (gas: 22)\n 29996: a2 = u64 [s1 + 0x40]\n 29999: a0 = a2 >> 0x3f\n 30002: a1 = u64 [s1 + 0x30]\n 30005: a1 = a1 << 0x1\n 30008: a0 = a0 | a1\n 30011: a1 = t2 >> 0x3f\n 30014: a2 = a2 << 0x1\n 30017: a1 = a1 | a2\n 30020: a2 = t0 >> 0x3f\n 30023: a3 = t2 << 0x1\n 30026: a2 = a2 | a3\n 30029: a3 = t0 << 0x1\n 30032: a3 = a3 + 0x1\n 30035: a4 = s1 + 0x200\n 30039: u64 [a4 + 0xc0] = a3\n 30043: u64 [a4 + 0xc8] = a2\n 30047: u64 [a4 + 0xd0] = a1\n 30051: u64 [a4 + 0xd8] = a0\n 30055: a1 = s1 + 0x2c0\n 30059: a0 = s1 + 0x240\n 30063: ra = 0x3bc\n 30067: jump @23\n      : @958 (gas: 5)\n 30070: u64 [s1 + 192] = 0\n 30074: u64 [s1 + 184] = 0\n 30078: u64 [s1 + 200] = 0\n 30082: u64 [s1 + 208] = 0\n 30086: fallthrough\n      : @959 (gas: 22)\n 30087: a0 = a3 >> 0x3f\n 30090: a4 = u64 [s1 + 0x40]\n 30093: a1 = a4 << 0x1\n 30096: a0 = a0 | a1\n 30099: u64 [s1 + 0xb0] = a0\n 30103: a0 = a4 >> 0x3f\n 30106: a1 = u64 [s1 + 0x30]\n 30109: a1 = a1 << 0x1\n 30112: a0 = a0 | a1\n 30115: u64 [s1 + 0xa8] = a0\n 30119: a0 = a2 >> 0x3f\n 30122: a1 = a3 << 0x1\n 30125: a0 = a0 | a1\n 30128: u64 [s1 + 0xa0] = a0\n 30132: a0 = a2 << 0x1\n 30135: u64 [s1 + 0x98] = a0\n 30139: a1 = a2 << 0x3\n 30142: u64 [s1 + 0xd8] = a1\n 30146: i32 a2 = 0x80 - a1\n 30150: a0 = 0xffffffffffffffff\n 30153: a1 = 0xffffffffffffffff\n 30156: ra = 950, jump @1052\n      : @960 [@dyn 475] (gas: 7)\n 30162: u64 [s1 + 0x78] = a0\n 30165: u64 [s1 + 0x90] = a1\n 30169: a0 = u64 [s1 + 0x48]\n 30172: i32 a2 = a0 << 0x3\n 30175: a0 = 0xffffffffffffffff\n 30178: a1 = 0xffffffffffffffff\n 30181: ra = 952, jump @1047\n      : @961 [@dyn 476] (gas: 10)\n 30187: u64 [s1 + 0x88] = a0\n 30191: u64 [s1 + 0x80] = a1\n 30195: a1 = u64 [s1 + 0x78]\n 30198: a0 = a0 | a1\n 30201: u64 [s1 + 0x78] = a0\n 30204: a0 = u64 [s1 + 0xd8]\n 30208: i32 a2 = a0 + 0xffffffffffffff80\n 30211: a0 = 0xffffffffffffffff\n 30214: a1 = 0xffffffffffffffff\n 30217: ra = 954, jump @1047\n      : @962 [@dyn 477] (gas: 37)\n 30223: a4 = u64 [s1 + 0xd8]\n 30227: a2 = a4 <u 0x80\n 30231: a3 = u64 [s1 + 0x78]\n 30234: a0 = a3 if a2 != 0\n 30237: a5 = u64 [s1 + 0x80]\n 30241: a3 = u64 [s1 + 0x90]\n 30245: a3 = a3 | a5\n 30248: a3 = a1 if a2 == 0\n 30251: a0 = 0xffffffffffffffff if a4 == 0\n 30254: a3 = 0xffffffffffffffff if a4 == 0\n 30257: a5 = 0 if a2 == 0\n 30259: a4 = u64 [s1 + 0x88]\n 30263: a4 = 0 if a2 == 0\n 30265: a1 = u64 [s1 + 0xb8]\n 30269: a1 = a1 & ~a3\n 30272: a2 = u64 [s1 + 0xc0]\n 30276: a0 = a2 & ~a0\n 30279: a2 = u64 [s1 + 0xc8]\n 30283: a2 = a2 & ~a4\n 30286: a3 = u64 [s1 + 0xd0]\n 30290: a3 = a3 & ~a5\n 30293: a4 = u64 [s1 + 0x98]\n 30297: a0 = a0 | a4\n 30300: a4 = u64 [s1 + 0xa0]\n 30304: a1 = a1 | a4\n 30307: a4 = u64 [s1 + 0xa8]\n 30311: a3 = a3 | a4\n 30314: a4 = u64 [s1 + 0xb0]\n 30318: a2 = a2 | a4\n 30321: a4 = s1 + 0x200\n 30325: u64 [a4 + 0xf0] = a2\n 30329: u64 [a4 + 0xf8] = a3\n 30333: u64 [a4 + 0xe8] = a1\n 30337: u64 [a4 + 0xe0] = a0\n 30341: a1 = s1 + 0x2e0\n 30345: a0 = s1 + 0x240\n 30349: ra = 956, jump @23\n      : @963 [@dyn 478] (gas: 7)\n 30355: sp = s0 + 0xfffffffffffffce0\n 30359: a0 = sp + 0x300\n 30363: ra = u64 [a0 + 0x18]\n 30366: s0 = u64 [a0 + 0x10]\n 30369: s1 = u64 [a0 + 0x8]\n 30372: sp = sp + 0x320\n 30376: ret\n      : @964 (gas: 1)\n 30378: trap\n      : @965 (gas: 6)\n 30379: u64 [s1 + 272] = 0\n 30383: u64 [s1 + 264] = 0\n 30387: u64 [s1 + 256] = 0\n 30391: t0 = 0x3be\n 30395: a0 = 0x4e487b7100000000\n 30405: fallthrough\n      : @966 [@dyn 479] (gas: 4)\n 30406: a1 = s1 + 0x100\n 30410: u64 [s1 + 0x118] = a0\n 30414: a0 = 0\n 30416: ra = 960, jump @19\n      : @967 [@dyn 480] (gas: 7)\n 30422: u64 [s1 + 248] = 0\n 30426: u64 [s1 + 240] = 0\n 30430: u64 [s1 + 224] = 0x41\n 30435: a0 = 0x4\n 30438: a1 = s1 + 0xe0\n 30442: u64 [s1 + 232] = 0\n 30446: ra = 962, jump @19\n      : @968 [@dyn 481] (gas: 2)\n 30452: a1 = i32 [0x20074]\n 30457: jump @970 if a1 >u 63\n      : @969 (gas: 2)\n 30461: u32 [0x20074] = 0x40\n 30467: fallthrough\n      : @970 (gas: 7)\n 30468: a1 = 0x20080\n 30473: i32 a1 = a1 + 0\n 30475: a0 = 0x1\n 30478: a2 = 0x24\n 30481: ra = 0x3c4\n 30485: ecalli 8 // 'seal_return'\n 30487: fallthrough\n      : @971 [@dyn 482] (gas: 30)\n 30488: sp = sp + 0xfffffffffffffea0\n 30492: u64 [sp + 0x158] = ra\n 30496: u64 [sp + 0x150] = s0\n 30500: u64 [sp + 0x148] = s1\n 30504: s0 = sp + 0x160\n 30508: sp = sp & 0xffffffffffffffe0\n 30511: s1 = sp\n 30513: a2 = u64 [a1 + 0x18]\n 30516: u64 [s1 + 0x40] = a2\n 30519: a2 = u64 [a1 + 0x10]\n 30522: u64 [s1 + 0x48] = a2\n 30525: a2 = u64 [a1 + 0x8]\n 30528: u64 [s1 + 0x50] = a2\n 30531: a1 = u64 [a1]\n 30533: u64 [s1 + 0x58] = a1\n 30536: a3 = u64 [a0 + 0x18]\n 30539: a2 = u64 [a0 + 0x10]\n 30542: a1 = u64 [a0 + 0x8]\n 30545: a0 = u64 [a0]\n 30547: u64 [s1] = a3\n 30549: u64 [s1 + 0x138] = a3\n 30553: u64 [s1 + 0x8] = a2\n 30556: u64 [s1 + 0x130] = a2\n 30560: u64 [s1 + 0x10] = a1\n 30563: u64 [s1 + 0x128] = a1\n 30567: u64 [s1 + 0x18] = a0\n 30570: u64 [s1 + 0x120] = a0\n 30574: a0 = s1 + 0x100\n 30578: a1 = s1 + 0x120\n 30582: ra = 966, jump @21\n      : @972 [@dyn 483] (gas: 8)\n 30588: a0 = s1 + 0x100\n 30592: a5 = u64 [a0 + 0x18]\n 30595: a4 = u64 [a0 + 0x10]\n 30598: a3 = u64 [a0 + 0x8]\n 30601: a0 = a4 | a5\n 30604: a1 = a3 <u 0x1\n 30607: a1 = 0 if a0 != 0\n 30609: jump @979 if a1 == 0\n      : @973 (gas: 22)\n 30613: a0 = u64 [s1 + 0x100]\n 30617: a1 = sp + 0xffffffffffffffe0\n 30620: a1 = a1 & 0xffffffffffffffe0\n 30623: sp = a1\n 30625: u64 [s1 + 0x20] = a0\n 30628: a0 = a0 + 0x1\n 30631: a2 = a0 <u 0x1\n 30634: u64 [s1 + 0x28] = a3\n 30637: a2 = a2 + a3\n 30640: a3 = a0 | a2\n 30643: a3 = a3 <u 0x1\n 30646: a3 = a3 + a4\n 30649: u64 [s1 + 0x30] = a4\n 30652: a4 = a3 <u a4\n 30655: u64 [s1 + 0x38] = a5\n 30658: a4 = a4 + a5\n 30661: u64 [a1 + 0x8] = a2\n 30664: u64 [a1] = a0\n 30666: u64 [a1 + 0x10] = a3\n 30669: u64 [a1 + 0x18] = a4\n 30672: a0 = s1 + 0x120\n 30676: ra = 968, jump @23\n      : @974 [@dyn 484] (gas: 11)\n 30682: a0 = u64 [s1]\n 30684: u64 [s1 + 0xf8] = a0\n 30688: a0 = u64 [s1 + 0x8]\n 30691: u64 [s1 + 0xf0] = a0\n 30695: a0 = u64 [s1 + 0x10]\n 30698: u64 [s1 + 0xe8] = a0\n 30702: a1 = s1 + 0xe0\n 30706: a0 = u64 [s1 + 0x18]\n 30709: u64 [s1 + 0xe0] = a0\n 30713: a0 = 0\n 30715: ra = 970, jump @19\n      : @975 [@dyn 485] (gas: 2)\n 30721: a1 = i32 [0x20074]\n 30726: jump @977 if a1 >u 31\n      : @976 (gas: 2)\n 30730: u32 [0x20074] = 0x20\n 30736: fallthrough\n      : @977 (gas: 51)\n 30737: a0 = sp + 0xffffffffffffffe0\n 30740: a2 = a0 & 0xffffffffffffffe0\n 30743: u64 [s1 + 0x18] = a2\n 30746: sp = a2\n 30748: a0 = 0x20080\n 30753: i32 a0 = a0 + 0\n 30755: i32 a2 = a2 + 0\n 30757: a1 = 0x20\n 30760: ecalli 6 // 'hash_keccak_256'\n 30762: a3 = u64 [s1 + 0x18]\n 30765: a0 = u64 [a3]\n 30767: a1 = u64 [a3 + 0x8]\n 30770: a2 = u64 [a3 + 0x18]\n 30773: a3 = u64 [a3 + 0x10]\n 30776: t0 = reverse a0\n 30778: a1 = reverse a1\n 30780: a2 = reverse a2\n 30782: a3 = reverse a3\n 30784: a4 = u64 [s1 + 0x28]\n 30787: a4 = a4 + a3\n 30790: t1 = u64 [s1 + 0x20]\n 30793: t1 = t1 + a2\n 30796: a2 = t1 <u a2\n 30799: a4 = a4 + a2\n 30802: a0 = a4 ^ a3\n 30805: a3 = a4 <u a3\n 30808: a3 = a2 if a0 == 0\n 30811: a0 = u64 [s1 + 0x30]\n 30814: a0 = a0 + a1\n 30817: a3 = a3 + a0\n 30820: a2 = a3 <u a0\n 30823: a5 = u64 [s1 + 0x38]\n 30826: t0 = t0 + a5\n 30829: a0 = a0 <u a1\n 30832: a0 = a0 + t0\n 30835: a2 = a2 + a0\n 30838: a0 = u64 [s1 + 0x40]\n 30841: u64 [s1 + 0xb8] = a0\n 30845: a0 = u64 [s1 + 0x48]\n 30848: u64 [s1 + 0xb0] = a0\n 30852: a0 = u64 [s1 + 0x50]\n 30855: u64 [s1 + 0xa8] = a0\n 30859: a0 = u64 [s1 + 0x58]\n 30862: u64 [s1 + 0xa0] = a0\n 30866: u64 [s1 + 0xc0] = t1\n 30870: u64 [s1 + 0xc8] = a4\n 30874: u64 [s1 + 0xd0] = a3\n 30878: a0 = s1 + 0xc0\n 30882: a1 = s1 + 0xa0\n 30886: u64 [s1 + 0xd8] = a2\n 30890: ra = 972, jump @923\n      : @978 [@dyn 486] (gas: 6)\n 30896: sp = s0 + 0xfffffffffffffea0\n 30900: ra = u64 [sp + 0x158]\n 30904: s0 = u64 [sp + 0x150]\n 30908: s1 = u64 [sp + 0x148]\n 30912: sp = sp + 0x160\n 30916: ret\n      : @979 (gas: 6)\n 30918: u64 [s1 + 144] = 0\n 30922: u64 [s1 + 136] = 0\n 30926: u64 [s1 + 128] = 0\n 30930: t0 = 0x3ce\n 30934: a0 = 0x4e487b7100000000\n 30944: fallthrough\n      : @980 [@dyn 487] (gas: 4)\n 30945: a1 = s1 + 0x80\n 30949: u64 [s1 + 0x98] = a0\n 30953: a0 = 0\n 30955: ra = 976, jump @19\n      : @981 [@dyn 488] (gas: 7)\n 30961: u64 [s1 + 120] = 0\n 30964: u64 [s1 + 112] = 0\n 30967: u64 [s1 + 96] = 0x41\n 30971: a0 = 0x4\n 30974: a1 = s1 + 0x60\n 30977: u64 [s1 + 104] = 0\n 30980: ra = 978, jump @19\n      : @982 [@dyn 489] (gas: 2)\n 30986: a1 = i32 [0x20074]\n 30991: jump @984 if a1 >u 63\n      : @983 (gas: 2)\n 30995: u32 [0x20074] = 0x40\n 31001: fallthrough\n      : @984 (gas: 8)\n 31002: a1 = 0x20080\n 31007: i32 a1 = a1 + 0\n 31009: a0 = 0x1\n 31012: a2 = 0x24\n 31015: ra = 0x3d4\n 31019: ecalli 8 // 'seal_return'\n 31021: t0 = 0x3d6\n 31025: jump @1046\n      : @985 [@dyn 490] (gas: 1)\n 31028: t0 = 982, jump @1046\n      : @986 [@dyn 491] (gas: 13)\n 31034: s1 = sp\n 31036: a2 = u64 [a1 + 0x10]\n 31039: u64 [s1 + 0x48] = a2\n 31042: a2 = u64 [a1]\n 31044: u64 [s1 + 0x38] = a2\n 31047: a2 = u64 [a1 + 0x18]\n 31050: u64 [s1 + 0x40] = a2\n 31053: a1 = u64 [a1 + 0x8]\n 31056: u64 [s1 + 0x50] = a1\n 31059: u64 [s1 + 0x18] = a0\n 31062: a0 = s1 + 0xa0\n 31066: a1 = 0x40\n 31069: ra = 984, jump @17\n      : @987 [@dyn 492] (gas: 12)\n 31075: a1 = u64 [s1 + 0x38]\n 31078: a0 = u64 [s1 + 0x40]\n 31081: a2 = u64 [s1 + 0x50]\n 31084: a0 = a0 | a2\n 31087: a3 = u64 [s1 + 0x48]\n 31090: a2 = a1 | a3\n 31093: a2 = a2 | a0\n 31096: a2 = a2 >> 0x20\n 31099: a0 = a0 | a3\n 31102: a0 = a0 << 0x20\n 31105: a0 = a0 | a2\n 31108: jump @1001 if a0 != 0\n      : @988 (gas: 10)\n 31112: a0 = u64 [s1 + 0xb8]\n 31116: u64 [s1 + 0x28] = a0\n 31119: a0 = u64 [s1 + 0xb0]\n 31123: u64 [s1 + 0x30] = a0\n 31126: a0 = u64 [s1 + 0xa8]\n 31130: u64 [s1 + 0x20] = a0\n 31133: a0 = u64 [s1 + 0xa0]\n 31137: u64 [s1 + 0x58] = a0\n 31140: a0 = s1 + 0x80\n 31144: ra = 986, jump @17\n      : @989 [@dyn 493] (gas: 12)\n 31150: a0 = u64 [s1 + 0x58]\n 31153: a3 = u64 [s1 + 0x30]\n 31156: a2 = a0 | a3\n 31159: a1 = u64 [s1 + 0x28]\n 31162: a4 = u64 [s1 + 0x20]\n 31165: a1 = a1 | a4\n 31168: a2 = a2 | a1\n 31171: a2 = a2 >> 0x20\n 31174: a1 = a1 | a3\n 31177: a1 = a1 << 0x20\n 31180: a1 = a1 | a2\n 31183: jump @1001 if a1 != 0\n      : @990 (gas: 10)\n 31187: a1 = u64 [s1 + 0x48]\n 31190: a2 = u64 [s1 + 0x40]\n 31193: a2 = a2 | a1\n 31196: a1 = 0xffffffe0\n 31206: t0 = u64 [s1 + 0x38]\n 31209: a1 = t0 <u a1\n 31212: a3 = u64 [s1 + 0x50]\n 31215: a1 = 0 if a3 != 0\n 31217: a1 = 0 if a2 != 0\n 31219: jump @1001 if a1 == 0\n      : @991 (gas: 15)\n 31223: a3 = u64 [s1 + 0x98]\n 31227: a5 = u64 [s1 + 0x90]\n 31231: a1 = u64 [s1 + 0x80]\n 31235: a4 = u64 [s1 + 0x88]\n 31239: a2 = a1 | a5\n 31242: u64 [s1 + 0x40] = a3\n 31245: u64 [s1 + 0x10] = a4\n 31248: a4 = a4 | a3\n 31251: a2 = a2 | a4\n 31254: a2 = a2 >> 0x20\n 31257: u64 [s1 + 0x48] = a5\n 31260: a4 = a4 | a5\n 31263: a4 = a4 << 0x20\n 31266: a2 = a2 | a4\n 31269: jump @1001 if a2 != 0\n      : @992 (gas: 4)\n 31273: i32 a2 = t0 + 0x20\n 31276: u64 [s1 + 0x38] = a2\n 31279: u64 [s1 + 0x50] = a1\n 31282: ra = 988, jump @29\n      : @993 [@dyn 494] (gas: 4)\n 31288: u64 [s1 + 0x8] = a0\n 31291: a0 = u64 [s1 + 0x38]\n 31294: a1 = u64 [s1 + 0x50]\n 31297: ra = 990, jump @29\n      : @994 [@dyn 495] (gas: 4)\n 31303: a1 = a0\n 31305: a0 = u64 [s1 + 0x8]\n 31308: a2 = u64 [s1 + 0x50]\n 31311: ra = 992, jump @0\n      : @995 [@dyn 496] (gas: 30)\n 31317: t0 = u64 [s1 + 0x50]\n 31320: a0 = u64 [s1 + 0x58]\n 31323: a0 = a0 + t0\n 31326: a1 = a0 <u t0\n 31329: a2 = u64 [s1 + 0x20]\n 31332: a4 = u64 [s1 + 0x10]\n 31335: a2 = a2 + a4\n 31338: a2 = a2 + a1\n 31341: a3 = a2 ^ a4\n 31344: a4 = a2 <u a4\n 31347: a4 = a1 if a3 == 0\n 31350: a1 = u64 [s1 + 0x28]\n 31353: a3 = u64 [s1 + 0x40]\n 31356: a1 = a1 + a3\n 31359: a3 = u64 [s1 + 0x30]\n 31362: a5 = u64 [s1 + 0x48]\n 31365: a3 = a3 + a5\n 31368: a5 = a3 <u a5\n 31371: a1 = a1 + a5\n 31374: a4 = a4 + a3\n 31377: a3 = a4 <u a3\n 31380: a1 = a1 + a3\n 31383: a1 = a1 | a2\n 31386: a2 = a0 | a4\n 31389: a2 = a2 | a1\n 31392: a1 = a1 | a4\n 31395: a2 = a2 >> 0x20\n 31398: a1 = a1 << 0x20\n 31401: a1 = a1 | a2\n 31404: jump @1001 if a1 != 0\n      : @996 (gas: 8)\n 31407: i32 t0 = t0 + 0\n 31409: u64 [s1 + 0x50] = t0\n 31412: u64 [s1 + 120] = 0\n 31415: u64 [s1 + 112] = 0\n 31418: u64 [s1 + 104] = 0\n 31421: a1 = s1 + 0x60\n 31424: u64 [s1 + 96] = 0\n 31427: ra = 994, jump @19\n      : @997 [@dyn 497] (gas: 3)\n 31433: a0 = u64 [s1 + 0x58]\n 31436: a1 = u64 [s1 + 0x50]\n 31439: ra = 996, jump @29\n      : @998 [@dyn 498] (gas: 12)\n 31445: a1 = sp + 0xffffffffffffffe0\n 31448: a1 = a1 & 0xffffffffffffffe0\n 31451: u64 [s1 + 0x58] = a1\n 31454: sp = a1\n 31456: i32 a0 = a0 + 0\n 31458: i32 a2 = a1 + 0\n 31460: a1 = u64 [s1 + 0x50]\n 31463: ra = 0x3e6\n 31467: ecalli 6 // 'hash_keccak_256'\n 31469: a3 = u64 [s1 + 0x58]\n 31472: t0 = 0x3e8\n 31476: jump @1017\n      : @999 [@dyn 499] (gas: 2)\n 31479: a3 = u64 [s1 + 0x58]\n 31482: t0 = 1000, jump @1017\n      : @1000 [@dyn 500] (gas: 11)\n 31488: a4 = u64 [s1 + 0x18]\n 31491: u64 [a4 + 0x18] = a3\n 31494: u64 [a4 + 0x10] = a2\n 31497: u64 [a4 + 0x8] = a1\n 31500: u64 [a4] = a0\n 31502: sp = s0 + 0xffffffffffffff20\n 31506: ra = u64 [sp + 0xd8]\n 31510: s0 = u64 [sp + 0xd0]\n 31514: s1 = u64 [sp + 0xc8]\n 31518: sp = sp + 0xe0\n 31522: ret\n      : @1001 (gas: 1)\n 31524: trap\n      : @1002 (gas: 10)\n 31525: a4 = u64 [a1 + 0x18]\n 31528: a3 = u64 [a1 + 0x10]\n 31531: t1 = u64 [a1 + 0x8]\n 31534: t0 = a4 >u 0\n 31536: a5 = a3 >u 0\n 31538: a5 = t0 if a4 != 0\n 31541: t0 = a3 | a4\n 31544: a2 = t1 >u 0\n 31546: a2 = a5 if t0 != 0\n 31549: jump @1004 if a2 != 0\n      : @1003 (gas: 24)\n 31552: a1 = u64 [a1]\n 31554: a2 = a3 >> 0x3b\n 31557: a4 = a4 << 0x5\n 31560: t0 = a4 | a2\n 31563: a4 = t1 >> 0x3b\n 31566: a3 = a3 << 0x5\n 31569: a3 = a3 | a4\n 31572: a4 = a1 >> 0x3b\n 31575: t1 = t1 << 0x5\n 31578: a4 = t1 | a4\n 31581: a1 = a1 << 0x5\n 31584: a5 = a1 + 0x20\n 31587: a1 = a5 <u a1\n 31590: a2 = a4 + a1\n 31593: a4 = a2 <u a4\n 31596: a4 = a1 if a1 == 0\n 31599: a4 = a4 + a3\n 31602: a1 = a4 <u a3\n 31605: a1 = a1 + t0\n 31608: u64 [a0] = a5\n 31610: u64 [a0 + 0x8] = a2\n 31613: u64 [a0 + 0x10] = a4\n 31616: u64 [a0 + 0x18] = a1\n 31619: ret\n      : @1004 (gas: 6)\n 31621: sp = sp + 0xffffffffffffffb0\n 31624: u64 [sp + 0x48] = ra\n 31627: u64 [sp + 0x40] = s0\n 31630: s0 = sp + 0x50\n 31633: sp = sp & 0xfffffffffffffff0\n 31636: t0 = 1002, jump @1019\n      : @1005 [@dyn 501] (gas: 1)\n 31642: ra = 1004, jump @19\n      : @1006 [@dyn 502] (gas: 1)\n 31648: t0 = 1006, jump @1037\n      : @1007 [@dyn 503] (gas: 1)\n 31654: ra = 1008, jump @19\n      : @1008 [@dyn 504] (gas: 2)\n 31660: a1 = i32 [0x20074]\n 31665: jump @1010 if a1 >u 63\n      : @1009 (gas: 2)\n 31669: u32 [0x20074] = 0x40\n 31675: fallthrough\n      : @1010 (gas: 8)\n 31676: a1 = 0x20080\n 31681: i32 a1 = a1 + 0\n 31683: a0 = 0x1\n 31686: a2 = 0x24\n 31689: ecalli 8 // 'seal_return'\n 31691: a0 = 0\n 31693: ra = 0x3f2\n 31697: jump @35\n      : @1011 [export #0: 'call'] (gas: 2)\n 31700: a0 = 0\n 31702: ra = 1010, jump @35\n      : @1012 [@dyn 505] [export #1: 'deploy'] (gas: 2)\n 31708: a0 = 0x1\n 31711: ra = 1012, jump @35\n      : @1013 [@dyn 506] (gas: 18)\n 31717: a4 = a1 if a3 == 0\n 31720: a1 = u64 [s1 + 0xc8]\n 31724: a1 = a1 + t2\n 31727: a3 = a1 <u t2\n 31730: a5 = u64 [s1 + 0xd0]\n 31734: a5 = a5 + t1\n 31737: a3 = a3 + a5\n 31740: a4 = a4 + a1\n 31743: a1 = a4 <u a1\n 31746: a1 = a1 + a3\n 31749: a1 = a1 | a2\n 31752: a2 = a0 | a4\n 31755: a2 = a2 | a1\n 31758: a1 = a1 | a4\n 31761: a2 = a2 >> 0x20\n 31764: a1 = a1 << 0x20\n 31767: a1 = a1 | a2\n 31770: jump [t0]\n      : @1014 (gas: 11)\n 31772: a4 = a4 + a1\n 31775: a1 = a4 <u a1\n 31778: a1 = a1 + a3\n 31781: a1 = a1 | a2\n 31784: a2 = a0 | a4\n 31787: a2 = a2 | a1\n 31790: a1 = a1 | a4\n 31793: a2 = a2 >> 0x20\n 31796: a1 = a1 << 0x20\n 31799: a1 = a1 | a2\n 31802: jump [t0]\n      : @1015 (gas: 10)\n 31804: a0 = u64 [s1 + 0xf0]\n 31808: a1 = u64 [s1 + 0xe8]\n 31812: a0 = a0 | a1\n 31815: a1 = 0xffffffe0\n 31825: a4 = u64 [s1 + 0xe0]\n 31829: a1 = a4 <u a1\n 31832: a2 = u64 [s1 + 0xf8]\n 31836: a1 = 0 if a2 != 0\n 31838: a1 = 0 if a0 != 0\n 31840: jump [t0]\n      : @1016 (gas: 12)\n 31842: a2 = u64 [s1 + 0xc8]\n 31846: a0 = u64 [s1 + 0xd8]\n 31850: a0 = a0 | a2\n 31853: a1 = u64 [s1 + 0xd0]\n 31857: a3 = u64 [s1 + 0xc0]\n 31861: a1 = a1 | a3\n 31864: a0 = a0 | a1\n 31867: a0 = a0 >> 0x20\n 31870: a1 = a1 | a2\n 31873: a1 = a1 << 0x20\n 31876: a0 = a0 | a1\n 31879: jump [t0]\n      : @1017 (gas: 9)\n 31881: a0 = u64 [a3 + 0x18]\n 31884: a1 = u64 [a3 + 0x10]\n 31887: a2 = u64 [a3 + 0x8]\n 31890: a3 = u64 [a3]\n 31892: a0 = reverse a0\n 31894: a1 = reverse a1\n 31896: a2 = reverse a2\n 31898: a3 = reverse a3\n 31900: jump [t0]\n      : @1018 (gas: 12)\n 31902: a1 = u64 [s1 + 0xe0]\n 31906: a0 = u64 [s1 + 0xf0]\n 31910: a2 = u64 [s1 + 0xf8]\n 31914: a0 = a0 | a2\n 31917: a3 = u64 [s1 + 0xe8]\n 31921: a2 = a1 | a3\n 31924: a2 = a2 | a0\n 31927: a2 = a2 >> 0x20\n 31930: a0 = a0 | a3\n 31933: a0 = a0 << 0x20\n 31936: a0 = a0 | a2\n 31939: jump [t0]\n      : @1019 (gas: 8)\n 31941: u64 [sp + 48] = 0\n 31944: u64 [sp + 40] = 0\n 31947: u64 [sp + 32] = 0\n 31950: a0 = 0x4e487b7100000000\n 31960: a1 = sp + 0x20\n 31963: u64 [sp + 0x38] = a0\n 31966: a0 = 0\n 31968: jump [t0]\n      : @1020 (gas: 7)\n 31970: a1 = u64 [s1 + 0xf8]\n 31974: a0 = a1 <u a0\n 31977: a1 = u64 [s1 + 0xf0]\n 31981: a0 = 0 if a1 != 0\n 31983: a1 = u64 [s1 + 0xe8]\n 31987: a0 = 0 if a1 != 0\n 31989: jump [t0]\n      : @1021 (gas: 13)\n 31991: a1 = a0 <u a1\n 31994: a3 = u64 [s1 + 0xd8]\n 31998: a2 = a3 + a1\n 32001: a3 = a2 <u a3\n 32004: a3 = a1 if a1 == 0\n 32007: a1 = u64 [s1 + 0xe8]\n 32011: a3 = a3 + a1\n 32014: a1 = a3 <u a1\n 32017: a4 = u64 [s1 + 0xe0]\n 32021: a1 = a1 + a4\n 32024: a4 = s1 + 0x2078\n 32028: a5 = a4 + 0x600\n 32032: jump [t0]\n      : @1022 (gas: 7)\n 32034: a1 = a1 | a3\n 32037: a0 = a0 | a1\n 32040: a0 = a0 >> 0x20\n 32043: a1 = a1 | a2\n 32046: a1 = a1 << 0x20\n 32049: a0 = a0 | a1\n 32052: jump [t0]\n      : @1023 (gas: 15)\n 32054: a2 = u64 [s1 + 0xd8]\n 32058: a0 = u64 [a2 + 0x8]\n 32061: a1 = u64 [a2]\n 32063: a2 = i32 [a2 + 0x10]\n 32066: a0 = reverse a0\n 32068: a3 = a0 >> 0x20\n 32071: a1 = reverse a1\n 32073: a4 = a1 << 0x20\n 32076: a3 = a3 | a4\n 32079: a0 = a0 << 0x20\n 32082: a2 = reverse a2\n 32084: a2 = a2 >> 0x20\n 32087: a0 = a0 | a2\n 32090: a1 = a1 >> 0x20\n 32093: jump [t0]\n      : @1024 (gas: 14)\n 32095: a4 = a1 <u t1\n 32098: a5 = a0 + a4\n 32101: a0 = a5 <u a0\n 32104: a0 = a4 if a4 == 0\n 32107: a0 = a0 + a2\n 32110: a2 = a0 <u a2\n 32113: a2 = a2 + a3\n 32116: u64 [sp + 0x40] = a1\n 32119: u64 [sp + 0x48] = a5\n 32122: u64 [sp + 0x50] = a0\n 32125: a0 = 0x40\n 32128: a1 = sp + a0\n 32131: u64 [sp + 0x58] = a2\n 32134: jump [t0]\n      : @1025 (gas: 14)\n 32136: a0 = u64 [a2 + 0x8]\n 32139: a1 = i32 [a2 + 0x10]\n 32142: a2 = u64 [a2]\n 32144: a0 = reverse a0\n 32146: a3 = a0 << 0x20\n 32149: a1 = reverse a1\n 32151: a1 = a1 >> 0x20\n 32154: a3 = a3 | a1\n 32157: a0 = a0 >> 0x20\n 32160: a1 = reverse a2\n 32162: a2 = a1 << 0x20\n 32165: a0 = a0 | a2\n 32168: a1 = a1 >> 0x20\n 32171: jump [t0]\n      : @1026 (gas: 13)\n 32173: sp = sp + 0xffffffffffffff90\n 32176: u64 [sp + 0x68] = ra\n 32179: u64 [sp + 0x60] = s0\n 32182: s0 = sp + 0x70\n 32185: sp = sp & 0xfffffffffffffff0\n 32188: a3 = u64 [a0 + 0x18]\n 32191: a2 = u64 [a0 + 0x10]\n 32194: t1 = u64 [a0]\n 32196: a0 = u64 [a0 + 0x8]\n 32199: a4 = a3 >u 0\n 32201: a5 = a2 >u 0\n 32203: a5 = a4 if a3 != 0\n 32206: jump [t0]\n      : @1027 (gas: 4)\n 32208: a3 = a1 | a0\n 32211: a4 = a2 <u 0x1\n 32214: a4 = 0 if a3 != 0\n 32216: jump [t0]\n      : @1028 (gas: 6)\n 32218: a2 = a2 + a4\n 32221: a2 = a2 + a1\n 32224: a3 = a2 ^ a4\n 32227: a4 = a2 <u a4\n 32230: a4 = a1 if a3 == 0\n 32233: jump [t0]\n      : @1029 (gas: 16)\n 32235: a4 = u64 [a3]\n 32237: u64 [sp + 0x18] = a4\n 32240: a4 = u64 [a3 + 0x8]\n 32243: u64 [sp + 0x20] = a4\n 32246: a4 = u64 [a3 + 0x10]\n 32249: u64 [sp + 0x28] = a4\n 32252: a3 = u64 [a3 + 0x18]\n 32255: u64 [sp + 0x30] = a3\n 32258: s1 = u64 [a2]\n 32260: a3 = u64 [a2 + 0x8]\n 32263: u64 [sp] = a3\n 32265: a3 = u64 [a2 + 0x10]\n 32268: u64 [sp + 0x8] = a3\n 32271: a2 = u64 [a2 + 0x18]\n 32274: u64 [sp + 0x10] = a2\n 32277: jump [t0]\n      : @1030 (gas: 4)\n 32279: a2 = a3 + a1\n 32282: a3 = a2 <u a3\n 32285: a3 = a1 if a1 == 0\n 32288: jump [t0]\n      : @1031 (gas: 8)\n 32290: a1 = sp + 0xffffffffffffffe0\n 32293: a1 = a1 & 0xffffffffffffffe0\n 32296: u64 [s1 + 0xf0] = a1\n 32300: sp = a1\n 32302: i32 a0 = a0 + 0\n 32304: i32 a2 = a1 + 0\n 32306: a1 = u64 [s1 + 0xf8]\n 32310: jump [t0]\n      : @1032 (gas: 7)\n 32312: a1 = u64 [s1 + 0xf0]\n 32316: a0 = a1 <u a0\n 32319: a1 = u64 [s1 + 0xe8]\n 32323: a0 = 0 if a1 != 0\n 32325: a1 = u64 [s1 + 0xf8]\n 32329: a0 = 0 if a1 != 0\n 32331: jump [t0]\n      : @1033 (gas: 9)\n 32333: a1 = a0 <u a1\n 32336: a3 = u64 [s1 + 0xf0]\n 32340: a2 = a3 + a1\n 32343: a3 = a2 <u a3\n 32346: a3 = a1 if a1 == 0\n 32349: a1 = u64 [s1 + 0xe0]\n 32353: a3 = a3 + a1\n 32356: a1 = a3 <u a1\n 32359: jump [t0]\n      : @1034 (gas: 7)\n 32361: a1 = a0 | a3\n 32364: a1 = a1 | a2\n 32367: a1 = a1 >> 0x20\n 32370: a2 = a2 | a3\n 32373: a2 = a2 << 0x20\n 32376: a1 = a1 | a2\n 32379: jump [t0]\n      : @1035 (gas: 9)\n 32381: a0 = u64 [a3 + 0x18]\n 32384: a1 = u64 [a3 + 0x10]\n 32387: a2 = u64 [a3 + 0x8]\n 32390: a3 = u64 [a3]\n 32392: a4 = reverse a0\n 32394: a0 = reverse a1\n 32396: a1 = reverse a2\n 32398: a2 = reverse a3\n 32400: jump [t0]\n      : @1036 (gas: 7)\n 32402: a1 = a1 | a2\n 32405: a1 = a1 | a0\n 32408: a1 = a1 >> 0x20\n 32411: a0 = a0 | a2\n 32414: a0 = a0 << 0x20\n 32417: a0 = a0 | a1\n 32420: jump [t0]\n      : @1037 (gas: 7)\n 32422: u64 [sp + 24] = 0\n 32425: u64 [sp + 16] = 0\n 32428: u64 [sp + 0] = 0x41\n 32431: a0 = 0x4\n 32434: a1 = sp\n 32436: u64 [sp + 8] = 0\n 32439: jump [t0]\n      : @1038 (gas: 8)\n 32441: a2 = 0x100000000\n 32451: a2 = a2 ^ a1\n 32454: a2 = a2 | a0\n 32457: a3 = a1 >> 0x20\n 32460: a3 = a3 <u 0x1\n 32463: a3 = 0 if a0 != 0\n 32465: a3 = 0 if a2 == 0\n 32467: jump [t0]\n      : @1039 (gas: 8)\n 32469: a0 = a0 | a1\n 32472: a1 = 0xffffffe0\n 32482: a2 = u64 [s1 + 0xf8]\n 32486: a1 = a2 <u a1\n 32489: a3 = u64 [s1 + 0xf0]\n 32493: a1 = 0 if a3 != 0\n 32495: a1 = 0 if a0 != 0\n 32497: jump [t0]\n      : @1040 (gas: 8)\n 32499: a0 = a0 | a1\n 32502: a1 = 0xffffffe0\n 32512: a2 = u64 [s1 + 0xf8]\n 32516: a1 = a2 <u a1\n 32519: a4 = u64 [s1 + 0xf0]\n 32523: a1 = 0 if a4 != 0\n 32525: a1 = 0 if a0 != 0\n 32527: jump [t0]\n      : @1041 (gas: 6)\n 32529: a4 = 0x100000000\n 32539: a0 = 0xffffffe0\n 32549: a0 = a1 <u a0\n 32552: a0 = 0 if a3 != 0\n 32554: a0 = 0 if a2 != 0\n 32556: jump [t0]\n      : @1042 (gas: 7)\n 32558: a3 = a4 <u a3\n 32561: a5 = a2 + a3\n 32564: a2 = a5 <u a2\n 32567: a2 = a3 if a3 == 0\n 32570: a2 = a2 + a1\n 32573: a1 = a2 <u a1\n 32576: jump [t0]\n      : @1043 (gas: 6)\n 32578: sp = s0 + 0xffffffffffffffa0\n 32581: ra = u64 [sp + 0x58]\n 32584: s0 = u64 [sp + 0x50]\n 32587: s1 = u64 [sp + 0x48]\n 32590: sp = sp + 0x60\n 32593: jump [t0]\n      : @1044 (gas: 8)\n 32595: a0 = u64 [a4 + 0x38]\n 32598: a1 = u64 [a4 + 0x40]\n 32601: a2 = u64 [a4 + 0x30]\n 32604: a3 = u64 [a4 + 0x28]\n 32607: a1 = a1 | a2\n 32610: a0 = a0 | a3\n 32613: a0 = a0 | a1\n 32616: jump [t0]\n      : @1045 (gas: 4)\n 32618: a0 = 0x2078\n 32622: a3 = s1 + a0\n 32625: a4 = a3 + 0x300\n 32629: jump [t0]\n      : @1046 (gas: 7)\n 32631: sp = sp + 0xffffffffffffff20\n 32635: u64 [sp + 0xd8] = ra\n 32639: u64 [sp + 0xd0] = s0\n 32643: u64 [sp + 0xc8] = s1\n 32647: s0 = sp + 0xe0\n 32651: sp = sp & 0xffffffffffffffe0\n 32654: jump [t0]\n      : @1047 (gas: 2)\n 32656: a3 = a2 & 0x40\n 32659: jump @1051 if a3 != 0\n      : @1048 (gas: 1)\n 32662: jump @1050 if a2 == 0\n      : @1049 (gas: 6)\n 32665: i32 a3 = 0x40 - a2\n 32668: a3 = 0xffffffffffffffff << a3\n 32671: a1 = 0xffffffffffffffff >> a2\n 32674: a0 = 0xffffffffffffffff >> a2\n 32677: a0 = a0 | a3\n 32680: ret\n      : @1050 (gas: 1)\n 32682: ret\n      : @1051 (gas: 4)\n 32684: a0 = a2 + 0xffffffffffffffc0\n 32687: a0 = 0xffffffffffffffff >> a0\n 32690: a1 = 0\n 32692: ret\n      : @1052 (gas: 2)\n 32694: a3 = a2 & 0x40\n 32697: jump @1056 if a3 != 0\n      : @1053 (gas: 1)\n 32700: jump @1055 if a2 == 0\n      : @1054 (gas: 6)\n 32703: i32 a3 = 0x40 - a2\n 32706: a3 = 0xffffffffffffffff >> a3\n 32709: a0 = 0xffffffffffffffff << a2\n 32712: a1 = 0xffffffffffffffff << a2\n 32715: a1 = a1 | a3\n 32718: ret\n      : @1055 (gas: 1)\n 32720: ret\n      : @1056 (gas: 4)\n 32722: a1 = a2 + 0xffffffffffffffc0\n 32725: a1 = 0xffffffffffffffff << a1\n 32728: a0 = 0\n 32730: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "books(string)": "2b9dfe80",
              "getBook(string)": "c37a8361",
              "getBooksByOwner(address)": "5ff47114",
              "getTransferHistory(string)": "7b2cca7c",
              "registerBook(string,string)": "195a0119",
              "totalBooks()": "6ec4f4bf",
              "transferHistory(string,uint256)": "9c63b7b9",
              "transferOwnership(string,address)": "c0e793c2",
              "verifyOwnership(string,address)": "59de8bd6"
            }
          },
          "irOptimized": "/// @use-src 0:\"contracts/BookTraceabilitySimple.sol\"\nobject \"BookTraceabilitySimple_248\" {\n    code {\n        {\n            /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"BookTraceabilitySimple_248_deployed\")\n            codecopy(_1, dataoffset(\"BookTraceabilitySimple_248_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/BookTraceabilitySimple.sol\"\n    object \"BookTraceabilitySimple_248_deployed\" {\n        code {\n            {\n                /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x195a0119 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let offset := calldataload(4)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        let value0 := abi_decode_string(add(4, offset), calldatasize())\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                        let value1 := abi_decode_string(add(4, offset_1), calldatasize())\n                        let pos := mload(64)\n                        let length := mload(value0)\n                        let _1 := add(value0, 32)\n                        mcopy(pos, _1, length)\n                        let _2 := add(pos, length)\n                        mstore(_2, 0)\n                        if iszero(/** @src 0:1026:1066  \"bytes(books[_bookId].bookId).length == 0\" */ iszero(/** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ extract_byte_array_length(sload(keccak256(pos, add(sub(_2, pos), 32))))))\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 11)\n                            mstore(add(memPtr, 68), \"Book exists\")\n                            revert(memPtr, 100)\n                        }\n                        let memPtr_1 := mload(64)\n                        finalize_allocation_8335(memPtr_1)\n                        mstore(memPtr_1, value0)\n                        /// @src 0:1110:1267  \"Book({...\"\n                        let _3 := add(memPtr_1, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 32)\n                        mstore(_3, value1)\n                        /// @src 0:1110:1267  \"Book({...\"\n                        let _4 := add(memPtr_1, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 64)\n                        mstore(_4, /** @src 0:1199:1209  \"msg.sender\" */ caller())\n                        /// @src 0:1110:1267  \"Book({...\"\n                        let _5 := add(memPtr_1, 96)\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        mstore(_5, /** @src 0:1241:1256  \"block.timestamp\" */ timestamp())\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        let pos_1 := mload(64)\n                        let length_1 := mload(value0)\n                        mcopy(pos_1, _1, length_1)\n                        let _6 := add(pos_1, length_1)\n                        mstore(_6, 0)\n                        let hash := keccak256(pos_1, add(sub(_6, pos_1), 32))\n                        copy_byte_array_to_storage_from_string_to_string(hash, mload(memPtr_1))\n                        copy_byte_array_to_storage_from_string_to_string(add(hash, 1), mload(_3))\n                        let value := and(mload(_4), sub(shl(160, 1), 1))\n                        let slot := add(hash, 2)\n                        sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n                        sstore(add(hash, 3), mload(_5))\n                        mstore(0, /** @src 0:1199:1209  \"msg.sender\" */ caller())\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        mstore(32, 2)\n                        /// @src 0:1278:1316  \"booksByOwner[msg.sender].push(_bookId)\"\n                        array_push_from_string_to_array_string_storage_dyn_ptr(/** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ keccak256(0, 64), /** @src 0:1278:1316  \"booksByOwner[msg.sender].push(_bookId)\" */ value0)\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        let _7 := sload(3)\n                        if eq(_7, not(0))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(3, add(_7, 1))\n                        /// @src 0:1354:1414  \"BookRegistered(_bookId, _title, msg.sender, block.timestamp)\"\n                        let _8 := packed_hashed_string_to_string(value0)\n                        let _9 := /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ mload(64)\n                        mstore(_9, 64)\n                        let tail := abi_encode_string(value1, add(_9, 64))\n                        mstore(add(_9, 32), /** @src 0:1241:1256  \"block.timestamp\" */ timestamp())\n                        /// @src 0:1354:1414  \"BookRegistered(_bookId, _title, msg.sender, block.timestamp)\"\n                        log3(_9, sub(tail, _9), 0xfac71935f5b3956bb12e403e8db8530ab044528c2e4afcbf2d89500910eb11fb, _8, /** @src 0:1199:1209  \"msg.sender\" */ caller())\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        return(0, 0)\n                    }\n                    case 0x2b9dfe80 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let offset_2 := calldataload(4)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                        let value0_1 := abi_decode_string(add(4, offset_2), calldatasize())\n                        let pos_2 := mload(64)\n                        let length_2 := mload(value0_1)\n                        mcopy(pos_2, add(value0_1, 32), length_2)\n                        let _10 := add(pos_2, length_2)\n                        mstore(_10, 0)\n                        let hash_1 := keccak256(pos_2, add(sub(_10, pos_2), 32))\n                        /// @src 0:429:465  \"mapping(string => Book) public books\"\n                        let ret_mpos := copy_array_from_storage_to_memory_string(hash_1)\n                        let ret_mpos_1 := copy_array_from_storage_to_memory_string(add(hash_1, 1))\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        let value_1 := and(sload(/** @src 0:429:465  \"mapping(string => Book) public books\" */ add(hash_1, 2)), /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ sub(shl(160, 1), 1))\n                        let _11 := sload(/** @src 0:429:465  \"mapping(string => Book) public books\" */ add(hash_1, 3))\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, 128)\n                        let tail_1 := abi_encode_string(ret_mpos, add(memPos, 128))\n                        mstore(add(memPos, 32), sub(tail_1, memPos))\n                        let tail_2 := abi_encode_string(ret_mpos_1, tail_1)\n                        mstore(add(memPos, 64), value_1)\n                        mstore(add(memPos, 96), _11)\n                        return(memPos, sub(tail_2, memPos))\n                    }\n                    case 0x59de8bd6 {\n                        if callvalue() { revert(0, 0) }\n                        let param, param_1 := abi_decode_stringt_address(calldatasize())\n                        let pos_3 := mload(64)\n                        let length_3 := mload(param)\n                        mcopy(pos_3, add(param, 0x20), length_3)\n                        let _12 := add(pos_3, length_3)\n                        mstore(_12, 0)\n                        let value_2 := and(sload(/** @src 0:2588:2615  \"books[_bookId].currentOwner\" */ add(/** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ keccak256(pos_3, add(sub(_12, pos_3), 0x20)), /** @src 0:2588:2615  \"books[_bookId].currentOwner\" */ 2)), /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ sub(shl(160, 1), 1))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, /** @src 0:2588:2627  \"books[_bookId].currentOwner == _address\" */ eq(/** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ value_2, and(/** @src 0:2588:2627  \"books[_bookId].currentOwner == _address\" */ param_1, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ sub(shl(160, 1), 1))))\n                        return(memPos_1, 0x20)\n                    }\n                    case 0x5ff47114 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_3 := 0\n                        value_3 := calldataload(4)\n                        let _13 := and(value_3, sub(shl(160, 1), 1))\n                        if iszero(eq(value_3, _13)) { revert(0, 0) }\n                        mstore(0, _13)\n                        mstore(32, /** @src 0:2738:2750  \"booksByOwner\" */ 0x02)\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        let dataSlot := keccak256(0, 64)\n                        let length_4 := sload(dataSlot)\n                        let _14 := array_allocation_size_array_string_dyn(length_4)\n                        let memPtr_2 := mload(64)\n                        finalize_allocation(memPtr_2, _14)\n                        mstore(memPtr_2, length_4)\n                        let mpos := memPtr_2\n                        mpos := add(memPtr_2, 32)\n                        let mpos_1 := mpos\n                        mstore(0, dataSlot)\n                        let spos := keccak256(0, 32)\n                        let i := 0\n                        for { } lt(i, length_4) { i := add(i, 1) }\n                        {\n                            mstore(mpos, copy_array_from_storage_to_memory_string(spos))\n                            mpos := add(mpos, 32)\n                            spos := add(spos, 1)\n                        }\n                        let memPos_2 := mload(64)\n                        let tail_3 := add(memPos_2, 32)\n                        mstore(memPos_2, 32)\n                        let pos_4 := tail_3\n                        let length_5 := mload(memPtr_2)\n                        mstore(tail_3, length_5)\n                        pos_4 := add(memPos_2, 64)\n                        let tail_4 := add(add(memPos_2, shl(5, length_5)), 64)\n                        let srcPtr := mpos_1\n                        let i_1 := 0\n                        for { } lt(i_1, length_5) { i_1 := add(i_1, 1) }\n                        {\n                            mstore(pos_4, add(sub(tail_4, memPos_2), not(63)))\n                            tail_4 := abi_encode_string(mload(srcPtr), tail_4)\n                            srcPtr := add(srcPtr, 32)\n                            pos_4 := add(pos_4, 32)\n                        }\n                        return(memPos_2, sub(tail_4, memPos_2))\n                    }\n                    case 0x6ec4f4bf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _15 := sload(/** @src 0:584:609  \"uint256 public totalBooks\" */ 3)\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _15)\n                        return(memPos_3, 32)\n                    }\n                    case 0x7b2cca7c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let offset_3 := calldataload(4)\n                        if gt(offset_3, 0xffffffffffffffff) { revert(0, 0) }\n                        let value0_2 := abi_decode_string(add(4, offset_3), calldatasize())\n                        let pos_5 := mload(64)\n                        let length_6 := mload(value0_2)\n                        mcopy(pos_5, add(value0_2, 32), length_6)\n                        let _16 := add(pos_5, length_6)\n                        mstore(_16, /** @src 0:2439:2454  \"transferHistory\" */ 0x01)\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        let hash_2 := keccak256(pos_5, add(sub(_16, pos_5), 32))\n                        let length_7 := sload(hash_2)\n                        let _17 := array_allocation_size_array_string_dyn(length_7)\n                        let memPtr_3 := mload(64)\n                        finalize_allocation(memPtr_3, _17)\n                        mstore(memPtr_3, length_7)\n                        let mpos_2 := memPtr_3\n                        mpos_2 := add(memPtr_3, 32)\n                        let mpos_3 := mpos_2\n                        mstore(0, hash_2)\n                        let spos_1 := keccak256(0, 32)\n                        let i_2 := 0\n                        for { }\n                        lt(i_2, length_7)\n                        {\n                            i_2 := add(i_2, /** @src 0:2439:2454  \"transferHistory\" */ 0x01)\n                        }\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        {\n                            let memPtr_4 := mload(64)\n                            finalize_allocation_8338(memPtr_4)\n                            mstore(memPtr_4, and(sload(spos_1), sub(shl(160, 1), 1)))\n                            mstore(add(memPtr_4, 32), and(sload(add(spos_1, /** @src 0:2439:2454  \"transferHistory\" */ 0x01)), /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ sub(shl(160, 1), 1)))\n                            mstore(add(memPtr_4, 64), sload(add(spos_1, 2)))\n                            mstore(mpos_2, memPtr_4)\n                            mpos_2 := add(mpos_2, 32)\n                            spos_1 := add(spos_1, 3)\n                        }\n                        let memPos_4 := mload(64)\n                        let tail_5 := add(memPos_4, 32)\n                        mstore(memPos_4, 32)\n                        let pos_6 := tail_5\n                        let length_8 := mload(memPtr_3)\n                        mstore(tail_5, length_8)\n                        pos_6 := add(memPos_4, 64)\n                        let srcPtr_1 := mpos_3\n                        let i_3 := 0\n                        for { }\n                        lt(i_3, length_8)\n                        {\n                            i_3 := add(i_3, /** @src 0:2439:2454  \"transferHistory\" */ 0x01)\n                        }\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        {\n                            let _18 := mload(srcPtr_1)\n                            mstore(pos_6, and(mload(_18), sub(shl(160, 1), 1)))\n                            mstore(add(pos_6, 32), and(mload(add(_18, 32)), sub(shl(160, 1), 1)))\n                            mstore(add(pos_6, 64), mload(add(_18, 64)))\n                            pos_6 := add(pos_6, 96)\n                            srcPtr_1 := add(srcPtr_1, 32)\n                        }\n                        return(memPos_4, sub(pos_6, memPos_4))\n                    }\n                    case 0x9c63b7b9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let offset_4 := calldataload(4)\n                        if gt(offset_4, 0xffffffffffffffff) { revert(0, 0) }\n                        let value0_3 := abi_decode_string(add(4, offset_4), calldatasize())\n                        let value_4 := calldataload(36)\n                        let pos_7 := mload(64)\n                        let length_9 := mload(value0_3)\n                        mcopy(pos_7, add(value0_3, 32), length_9)\n                        let _19 := add(pos_7, length_9)\n                        mstore(_19, 1)\n                        let hash_3 := keccak256(pos_7, add(sub(_19, pos_7), 32))\n                        /// @src 0:471:523  \"mapping(string => Transfer[]) public transferHistory\"\n                        if iszero(lt(value_4, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ sload(/** @src 0:471:523  \"mapping(string => Transfer[]) public transferHistory\" */ hash_3)))\n                        {\n                            revert(/** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 0, 0)\n                        }\n                        /// @src 0:471:523  \"mapping(string => Transfer[]) public transferHistory\"\n                        let slot_1, offset_5 := storage_array_index_access_struct_Transfer__dyn(hash_3, value_4)\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        let value_5 := and(sload(/** @src 0:471:523  \"mapping(string => Transfer[]) public transferHistory\" */ slot_1), /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ sub(shl(160, 1), 1))\n                        let value_6 := and(sload(/** @src 0:471:523  \"mapping(string => Transfer[]) public transferHistory\" */ add(slot_1, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 1)), sub(shl(160, 1), 1))\n                        let _20 := sload(/** @src 0:471:523  \"mapping(string => Transfer[]) public transferHistory\" */ add(slot_1, 2))\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, value_5)\n                        mstore(add(memPos_5, 32), value_6)\n                        mstore(add(memPos_5, 64), _20)\n                        return(memPos_5, 96)\n                    }\n                    case 0xc0e793c2 {\n                        if callvalue() { revert(0, 0) }\n                        let param_2, param_3 := abi_decode_stringt_address(calldatasize())\n                        let pos_8 := mload(64)\n                        let length_10 := mload(param_2)\n                        let _21 := add(param_2, 0x20)\n                        mcopy(pos_8, _21, length_10)\n                        let _22 := add(pos_8, length_10)\n                        mstore(_22, 0)\n                        let hash_4 := keccak256(pos_8, add(sub(_22, pos_8), 0x20))\n                        if /** @src 0:1589:1618  \"bytes(book.bookId).length > 0\" */ iszero(/** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ extract_byte_array_length(sload(/** @src 0:1589:1607  \"bytes(book.bookId)\" */ hash_4)))\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 0x20)\n                            mstore(add(memPtr_5, 36), 14)\n                            mstore(add(memPtr_5, 68), \"Book not found\")\n                            revert(memPtr_5, 100)\n                        }\n                        /// @src 0:1655:1672  \"book.currentOwner\"\n                        let _23 := add(hash_4, 2)\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        let value_7 := and(sload(/** @src 0:1655:1672  \"book.currentOwner\" */ _23), /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ sub(shl(160, 1), 1))\n                        if iszero(/** @src 0:1655:1686  \"book.currentOwner == msg.sender\" */ eq(/** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ value_7, /** @src 0:1676:1686  \"msg.sender\" */ caller()))\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), 0x20)\n                            mstore(add(memPtr_6, 36), 9)\n                            mstore(add(memPtr_6, 68), \"Not owner\")\n                            revert(memPtr_6, 100)\n                        }\n                        let _24 := and(/** @src 0:1718:1741  \"_newOwner != msg.sender\" */ param_3, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 0:1718:1741  \"_newOwner != msg.sender\" */ eq(/** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ _24, /** @src 0:1676:1686  \"msg.sender\" */ caller())\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        {\n                            let memPtr_7 := mload(64)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, 4), 0x20)\n                            mstore(add(memPtr_7, 36), 23)\n                            mstore(add(memPtr_7, 68), \"Cannot transfer to self\")\n                            revert(memPtr_7, 100)\n                        }\n                        let pos_9 := mload(64)\n                        let length_11 := mload(param_2)\n                        mcopy(pos_9, _21, length_11)\n                        let _25 := add(pos_9, length_11)\n                        mstore(_25, /** @src 0:1780:1795  \"transferHistory\" */ 0x01)\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        let hash_5 := keccak256(pos_9, add(sub(_25, pos_9), 0x20))\n                        let memPtr_8 := mload(64)\n                        finalize_allocation_8338(memPtr_8)\n                        mstore(memPtr_8, /** @src 0:1676:1686  \"msg.sender\" */ caller())\n                        /// @src 0:1810:1927  \"Transfer({...\"\n                        let _26 := add(memPtr_8, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 0x20)\n                        mstore(_26, _24)\n                        /// @src 0:1810:1927  \"Transfer({...\"\n                        let _27 := add(memPtr_8, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 64)\n                        mstore(_27, /** @src 0:1901:1916  \"block.timestamp\" */ timestamp())\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        let oldLen := sload(hash_5)\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        sstore(hash_5, add(oldLen, /** @src 0:1780:1795  \"transferHistory\" */ 0x01))\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        let slot_2, offset_6 := storage_array_index_access_struct_Transfer__dyn(hash_5, oldLen)\n                        if offset_6\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0)\n                            revert(0, 0x24)\n                        }\n                        sstore(slot_2, or(and(sload(slot_2), shl(160, 0xffffffffffffffffffffffff)), and(and(mload(memPtr_8), sub(shl(160, 1), 1)), sub(shl(160, 1), 1))))\n                        let value_8 := and(mload(_26), sub(shl(160, 1), 1))\n                        let slot_3 := add(slot_2, /** @src 0:1780:1795  \"transferHistory\" */ 0x01)\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        sstore(slot_3, or(and(sload(slot_3), shl(160, 0xffffffffffffffffffffffff)), and(value_8, sub(shl(160, 1), 1))))\n                        sstore(add(slot_2, /** @src 0:1655:1672  \"book.currentOwner\" */ 2), /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ mload(_27))\n                        sstore(/** @src 0:1967:1996  \"book.currentOwner = _newOwner\" */ _23, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ or(and(sload(/** @src 0:1967:1996  \"book.currentOwner = _newOwner\" */ _23), /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ shl(160, 0xffffffffffffffffffffffff)), _24))\n                        mstore(0, _24)\n                        mstore(0x20, /** @src 0:1655:1672  \"book.currentOwner\" */ 2)\n                        /// @src 0:2079:2116  \"booksByOwner[_newOwner].push(_bookId)\"\n                        array_push_from_string_to_array_string_storage_dyn_ptr(/** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ keccak256(0, 64), /** @src 0:2079:2116  \"booksByOwner[_newOwner].push(_bookId)\" */ param_2)\n                        /// @src 0:2132:2196  \"BookTransferred(_bookId, msg.sender, _newOwner, block.timestamp)\"\n                        let _28 := packed_hashed_string_to_string(param_2)\n                        let _29 := /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ mload(64)\n                        mstore(_29, /** @src 0:1901:1916  \"block.timestamp\" */ timestamp())\n                        /// @src 0:2132:2196  \"BookTransferred(_bookId, msg.sender, _newOwner, block.timestamp)\"\n                        log4(_29, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 0x20, /** @src 0:2132:2196  \"BookTransferred(_bookId, msg.sender, _newOwner, block.timestamp)\" */ 0x8758ab0c947af1360ae9a634e40f8fa1ecc49c8c1c589460781792b51ac6808d, _28, /** @src 0:1676:1686  \"msg.sender\" */ caller(), /** @src 0:2132:2196  \"BookTransferred(_bookId, msg.sender, _newOwner, block.timestamp)\" */ _24)\n                        /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                        return(0, 0)\n                    }\n                    case 0xc37a8361 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let offset_7 := calldataload(4)\n                        if gt(offset_7, 0xffffffffffffffff) { revert(0, 0) }\n                        let value0_4 := abi_decode_string(add(4, offset_7), calldatasize())\n                        let memPtr_9 := mload(64)\n                        finalize_allocation_8335(memPtr_9)\n                        mstore(memPtr_9, 96)\n                        mstore(add(memPtr_9, 32), 96)\n                        mstore(add(memPtr_9, 64), 0)\n                        mstore(add(memPtr_9, 96), 0)\n                        let pos_10 := mload(64)\n                        let length_12 := mload(value0_4)\n                        mcopy(pos_10, add(value0_4, 32), length_12)\n                        let _30 := add(pos_10, length_12)\n                        mstore(_30, 0)\n                        let hash_6 := keccak256(pos_10, add(sub(_30, pos_10), 32))\n                        let memPtr_10 := mload(64)\n                        finalize_allocation_8335(memPtr_10)\n                        mstore(memPtr_10, copy_array_from_storage_to_memory_string(hash_6))\n                        let memberValue := copy_array_from_storage_to_memory_string(add(hash_6, 1))\n                        let _31 := add(memPtr_10, 32)\n                        mstore(_31, memberValue)\n                        let value_9 := and(sload(add(hash_6, 2)), sub(shl(160, 1), 1))\n                        let _32 := add(memPtr_10, 64)\n                        mstore(_32, value_9)\n                        let _33 := sload(add(hash_6, 3))\n                        let _34 := add(memPtr_10, 96)\n                        mstore(_34, _33)\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, 32)\n                        let memberValue0 := mload(memPtr_10)\n                        mstore(add(memPos_6, 32), 128)\n                        let tail_6 := abi_encode_string(memberValue0, add(memPos_6, 160))\n                        let memberValue0_1 := mload(_31)\n                        mstore(add(memPos_6, 64), add(sub(tail_6, memPos_6), not(31)))\n                        let tail_7 := abi_encode_string(memberValue0_1, tail_6)\n                        mstore(add(memPos_6, 96), and(mload(_32), sub(shl(160, 1), 1)))\n                        mstore(add(memPos_6, 128), mload(_34))\n                        return(memPos_6, sub(tail_7, memPos_6))\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation_8335(memPtr)\n            {\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_8338(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(length, 0x1f), not(31)), 0x20))\n                mstore(memPtr, length)\n                if gt(add(add(offset, length), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                array := memPtr\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 0x20)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 0x20)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(add(memPtr, i), 0x20), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(add(memPtr, i), 0x20)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                mcopy(add(pos, 0x20), add(value, 0x20), length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_stringt_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                value0 := abi_decode_string(add(4, offset), dataEnd)\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                value1 := value\n            }\n            function storage_array_index_access_struct_Transfer__dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 0x20)\n                slot := add(data, mul(index, 3))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n            function copy_byte_array_to_storage_from_string_to_string(slot, src)\n            {\n                let newLen := mload(src)\n                if gt(newLen, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _1 := extract_byte_array_length(sload(slot))\n                if gt(_1, 31)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ slot)\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 0x20)\n                    let deleteStart := add(data, shr(5, add(newLen, 31)))\n                    if lt(newLen, 0x20) { deleteStart := data }\n                    let _2 := add(data, shr(5, add(_1, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _2) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ 0)\n                    }\n                }\n                /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                let srcOffset := 0\n                srcOffset := 0x20\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    mstore(0, slot)\n                    let dstPtr := keccak256(0, srcOffset)\n                    let i := 0\n                    for { } lt(i, loopEnd) { i := add(i, 0x20) }\n                    {\n                        sstore(dstPtr, mload(add(src, srcOffset)))\n                        dstPtr := add(dstPtr, 1)\n                        srcOffset := add(srcOffset, 0x20)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(src, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(slot, add(shl(1, newLen), 1))\n                }\n                default {\n                    let value := 0\n                    if newLen\n                    {\n                        value := mload(add(src, srcOffset))\n                    }\n                    sstore(slot, or(and(value, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                }\n            }\n            function array_push_from_string_to_array_string_storage_dyn_ptr(array, value0)\n            {\n                let oldLen := sload(array)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _1 := add(oldLen, 1)\n                sstore(array, _1)\n                if iszero(lt(oldLen, _1))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ array)\n                copy_byte_array_to_storage_from_string_to_string(add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:159:2767  \"contract BookTraceabilitySimple {...\" */ 0x20), oldLen), value0)\n            }\n            function packed_hashed_string_to_string(var) -> hash\n            {\n                let pos := mload(64)\n                let length := mload(var)\n                mcopy(pos, add(var, 0x20), length)\n                let _1 := add(pos, length)\n                mstore(_1, /** @src -1:-1:-1 */ 0)\n                /// @src 0:159:2767  \"contract BookTraceabilitySimple {...\"\n                hash := keccak256(pos, sub(_1, pos))\n            }\n            function array_allocation_size_array_string_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220dde9e140bf37947fa565175d9dc1d103e9a85ff3e72a02851e990d9e3f10e83b64736f6c634300081c0033\"\n    }\n}\n",
          "hash": "22a67e567b9c3028ca449a2c87c3faf0dc38034247430de9520649bed7248b72",
          "factoryDependencies": {}
        }
      }
    }
  }
}